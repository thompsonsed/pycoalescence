<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="structio_1_1error_1_1base" kind="struct" language="C++" prot="public" abstract="yes">
    <compoundname>io::error::base</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::exception</basecompoundref>
    <derivedcompoundref refid="structio_1_1error_1_1can__not__open__file" prot="public" virt="non-virtual">io::error::can_not_open_file</derivedcompoundref>
    <derivedcompoundref refid="structio_1_1error_1_1duplicated__column__in__header" prot="public" virt="non-virtual">io::error::duplicated_column_in_header</derivedcompoundref>
    <derivedcompoundref refid="structio_1_1error_1_1escaped__string__not__closed" prot="public" virt="non-virtual">io::error::escaped_string_not_closed</derivedcompoundref>
    <derivedcompoundref refid="structio_1_1error_1_1extra__column__in__header" prot="public" virt="non-virtual">io::error::extra_column_in_header</derivedcompoundref>
    <derivedcompoundref refid="structio_1_1error_1_1header__missing" prot="public" virt="non-virtual">io::error::header_missing</derivedcompoundref>
    <derivedcompoundref refid="structio_1_1error_1_1integer__must__be__positive" prot="public" virt="non-virtual">io::error::integer_must_be_positive</derivedcompoundref>
    <derivedcompoundref refid="structio_1_1error_1_1integer__overflow" prot="public" virt="non-virtual">io::error::integer_overflow</derivedcompoundref>
    <derivedcompoundref refid="structio_1_1error_1_1integer__underflow" prot="public" virt="non-virtual">io::error::integer_underflow</derivedcompoundref>
    <derivedcompoundref refid="structio_1_1error_1_1invalid__single__character" prot="public" virt="non-virtual">io::error::invalid_single_character</derivedcompoundref>
    <derivedcompoundref refid="structio_1_1error_1_1line__length__limit__exceeded" prot="public" virt="non-virtual">io::error::line_length_limit_exceeded</derivedcompoundref>
    <derivedcompoundref refid="structio_1_1error_1_1missing__column__in__header" prot="public" virt="non-virtual">io::error::missing_column_in_header</derivedcompoundref>
    <derivedcompoundref refid="structio_1_1error_1_1no__digit" prot="public" virt="non-virtual">io::error::no_digit</derivedcompoundref>
    <derivedcompoundref refid="structio_1_1error_1_1too__few__columns" prot="public" virt="non-virtual">io::error::too_few_columns</derivedcompoundref>
    <derivedcompoundref refid="structio_1_1error_1_1too__many__columns" prot="public" virt="non-virtual">io::error::too_many_columns</derivedcompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structio_1_1error_1_1base_1a8e38f86a7afea1f0c6e6cac0c548d6f2" prot="public" static="no" mutable="yes">
        <type>char</type>
        <definition>char io::error::base::error_message_buffer[256]</definition>
        <argsstring>[256]</argsstring>
        <name>error_message_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="66" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structio_1_1error_1_1base_1aa993f14edd81ef5a6a3bf32381d0d9a3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void io::error::base::format_error_message</definition>
        <argsstring>() const  =0</argsstring>
        <name>format_error_message</name>
        <reimplementedby refid="structio_1_1error_1_1can__not__open__file_1a6b4f1a5ebfdbf12c6ee53c781c94b203">format_error_message</reimplementedby>
        <reimplementedby refid="structio_1_1error_1_1line__length__limit__exceeded_1aa7c12639e9f39f04ff1c8a53e8e41a06">format_error_message</reimplementedby>
        <reimplementedby refid="structio_1_1error_1_1extra__column__in__header_1a9cc12589f136ed7f9fc40802b9185d79">format_error_message</reimplementedby>
        <reimplementedby refid="structio_1_1error_1_1missing__column__in__header_1acd0f4c75f6ffa54c5f9db8867bd4c8d4">format_error_message</reimplementedby>
        <reimplementedby refid="structio_1_1error_1_1duplicated__column__in__header_1aaaae2e6a92ea64017d76cf5972bd8e49">format_error_message</reimplementedby>
        <reimplementedby refid="structio_1_1error_1_1header__missing_1a6e41864c2634db36dd0204251bffe512">format_error_message</reimplementedby>
        <reimplementedby refid="structio_1_1error_1_1too__few__columns_1a208e2be6855a6bfd1f3792be146dd84f">format_error_message</reimplementedby>
        <reimplementedby refid="structio_1_1error_1_1too__many__columns_1ad5cc8b4251752fec054163a9d6d0876a">format_error_message</reimplementedby>
        <reimplementedby refid="structio_1_1error_1_1escaped__string__not__closed_1a0dbbad1f20b62e2e43309c3f2ac0cc02">format_error_message</reimplementedby>
        <reimplementedby refid="structio_1_1error_1_1integer__must__be__positive_1a7150923d999e4d6cb9b6c4b5f1f51dfa">format_error_message</reimplementedby>
        <reimplementedby refid="structio_1_1error_1_1no__digit_1a0e2c7f649820beb68b92dab16049388d">format_error_message</reimplementedby>
        <reimplementedby refid="structio_1_1error_1_1integer__overflow_1a5fa7e6154c54a7d020f329c1816ab746">format_error_message</reimplementedby>
        <reimplementedby refid="structio_1_1error_1_1integer__underflow_1adb68f28b47254f5dd855a2437bcaabae">format_error_message</reimplementedby>
        <reimplementedby refid="structio_1_1error_1_1invalid__single__character_1a071fa29c62051488d0fc7f51137ae3dc">format_error_message</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structio_1_1error_1_1base_1ad99d4a2459e51ce2c24707569c4a0df6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* io::error::base::what</definition>
        <argsstring>() const </argsstring>
        <name>what</name>
        <exceptions> throw ()</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="61" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="61" bodyend="64"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="575">
        <label>io::error::invalid_single_character</label>
        <link refid="structio_1_1error_1_1invalid__single__character"/>
        <childnode refid="565" relation="public-inheritance">
        </childnode>
      </node>
      <node id="579">
        <label>io::error::too_few_columns</label>
        <link refid="structio_1_1error_1_1too__few__columns"/>
        <childnode refid="565" relation="public-inheritance">
        </childnode>
      </node>
      <node id="580">
        <label>io::error::too_many_columns</label>
        <link refid="structio_1_1error_1_1too__many__columns"/>
        <childnode refid="565" relation="public-inheritance">
        </childnode>
      </node>
      <node id="567">
        <label>io::error::can_not_open_file</label>
        <link refid="structio_1_1error_1_1can__not__open__file"/>
        <childnode refid="565" relation="public-inheritance">
        </childnode>
      </node>
      <node id="569">
        <label>io::error::escaped_string_not_closed</label>
        <link refid="structio_1_1error_1_1escaped__string__not__closed"/>
        <childnode refid="565" relation="public-inheritance">
        </childnode>
      </node>
      <node id="565">
        <label>io::error::base</label>
        <link refid="structio_1_1error_1_1base"/>
        <childnode refid="566" relation="public-inheritance">
        </childnode>
      </node>
      <node id="566">
        <label>std::exception</label>
      </node>
      <node id="578">
        <label>io::error::no_digit</label>
        <link refid="structio_1_1error_1_1no__digit"/>
        <childnode refid="565" relation="public-inheritance">
        </childnode>
      </node>
      <node id="570">
        <label>io::error::extra_column_in_header</label>
        <link refid="structio_1_1error_1_1extra__column__in__header"/>
        <childnode refid="565" relation="public-inheritance">
        </childnode>
      </node>
      <node id="576">
        <label>io::error::line_length_limit_exceeded</label>
        <link refid="structio_1_1error_1_1line__length__limit__exceeded"/>
        <childnode refid="565" relation="public-inheritance">
        </childnode>
      </node>
      <node id="574">
        <label>io::error::integer_underflow</label>
        <link refid="structio_1_1error_1_1integer__underflow"/>
        <childnode refid="565" relation="public-inheritance">
        </childnode>
      </node>
      <node id="572">
        <label>io::error::integer_must_be_positive</label>
        <link refid="structio_1_1error_1_1integer__must__be__positive"/>
        <childnode refid="565" relation="public-inheritance">
        </childnode>
      </node>
      <node id="577">
        <label>io::error::missing_column_in_header</label>
        <link refid="structio_1_1error_1_1missing__column__in__header"/>
        <childnode refid="565" relation="public-inheritance">
        </childnode>
      </node>
      <node id="568">
        <label>io::error::duplicated_column_in_header</label>
        <link refid="structio_1_1error_1_1duplicated__column__in__header"/>
        <childnode refid="565" relation="public-inheritance">
        </childnode>
      </node>
      <node id="573">
        <label>io::error::integer_overflow</label>
        <link refid="structio_1_1error_1_1integer__overflow"/>
        <childnode refid="565" relation="public-inheritance">
        </childnode>
      </node>
      <node id="571">
        <label>io::error::header_missing</label>
        <link refid="structio_1_1error_1_1header__missing"/>
        <childnode refid="565" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="581">
        <label>io::error::base</label>
        <link refid="structio_1_1error_1_1base"/>
        <childnode refid="582" relation="public-inheritance">
        </childnode>
      </node>
      <node id="582">
        <label>std::exception</label>
      </node>
    </collaborationgraph>
    <location file="necsim/fast-cpp-csv-parser2/csv.h" line="58" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="58" bodyend="67"/>
    <listofallmembers>
      <member refid="structio_1_1error_1_1base_1a8e38f86a7afea1f0c6e6cac0c548d6f2" prot="public" virt="non-virtual"><scope>io::error::base</scope><name>error_message_buffer</name></member>
      <member refid="structio_1_1error_1_1base_1aa993f14edd81ef5a6a3bf32381d0d9a3" prot="public" virt="pure-virtual"><scope>io::error::base</scope><name>format_error_message</name></member>
      <member refid="structio_1_1error_1_1base_1ad99d4a2459e51ce2c24707569c4a0df6" prot="public" virt="non-virtual"><scope>io::error::base</scope><name>what</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
