<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="structnecsim_1_1_communities_array" kind="struct" language="C++" prot="public">
    <compoundname>necsim::CommunitiesArray</compoundname>
    <includes refid="parameters_8h" local="no">parameters.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structnecsim_1_1_communities_array_1a0fdff3686f821cd5e0c752d87a2b743f" prot="public" static="no" mutable="no">
        <type>vector&lt; shared_ptr&lt; <ref refid="structnecsim_1_1_community_parameters" kindref="compound">CommunityParameters</ref> &gt; &gt;</type>
        <definition>vector&lt;shared_ptr&lt;CommunityParameters&gt; &gt; necsim::CommunitiesArray::comm_parameters</definition>
        <argsstring></argsstring>
        <name>comm_parameters</name>
        <briefdescription>
<para>The array of <ref refid="structnecsim_1_1_community_parameters" kindref="compound">CommunityParameters</ref> which have been stored. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/parameters.h" line="139" column="1" bodyfile="necsim/parameters.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structnecsim_1_1_communities_array_1afd783c48237c864ed82af864559b6de7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>necsim::CommunitiesArray::CommunitiesArray</definition>
        <argsstring>()</argsstring>
        <name>CommunitiesArray</name>
        <briefdescription>
<para>Default constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/parameters.h" line="144" column="1" bodyfile="necsim/parameters.cpp" bodystart="71" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="structnecsim_1_1_communities_array_1abbc14e0cf5be8200d40ff5274501d2e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>necsim::CommunitiesArray::~CommunitiesArray</definition>
        <argsstring>()=default</argsstring>
        <name>~CommunitiesArray</name>
        <briefdescription>
<para>Trivial destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/parameters.h" line="149" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structnecsim_1_1_communities_array_1a85862db080d8a37a565ff94e5b38dad3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void necsim::CommunitiesArray::pushBack</definition>
        <argsstring>(unsigned long reference, long double speciation_rate, long double time, bool fragment, unsigned long metacommunity_reference, const ProtractedSpeciationParameters &amp;protracted_params)</argsstring>
        <name>pushBack</name>
        <param>
          <type>unsigned long</type>
          <declname>reference</declname>
        </param>
        <param>
          <type>long double</type>
          <declname>speciation_rate</declname>
        </param>
        <param>
          <type>long double</type>
          <declname>time</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fragment</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>metacommunity_reference</declname>
        </param>
        <param>
          <type>const <ref refid="structnecsim_1_1_protracted_speciation_parameters" kindref="compound">ProtractedSpeciationParameters</ref> &amp;</type>
          <declname>protracted_params</declname>
        </param>
        <briefdescription>
<para>Adds an extra <ref refid="structnecsim_1_1_community_parameters" kindref="compound">CommunityParameters</ref> object to the calc_array vector with the supplied variables. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reference</parametername>
</parameternamelist>
<parameterdescription>
<para>the reference for this set of community parameters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>speciation_rate</parametername>
</parameternamelist>
<parameterdescription>
<para>the speciation rate of the past calculation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>the time of the past calculation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment</parametername>
</parameternamelist>
<parameterdescription>
<para>bool of whether fragments were used in the past calculation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>metacommunity_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>reference for the metacommunity parameters, or 0 if no metacommunity </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>protracted_params</parametername>
</parameternamelist>
<parameterdescription>
<para>protracted speciation parameters to add </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/parameters.h" line="160" column="1" bodyfile="necsim/parameters.cpp" bodystart="74" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="structnecsim_1_1_communities_array_1af495972165740bb6188d73125064abd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void necsim::CommunitiesArray::pushBack</definition>
        <argsstring>(shared_ptr&lt; CommunityParameters &gt; tmp_param)</argsstring>
        <name>pushBack</name>
        <param>
          <type>shared_ptr&lt; <ref refid="structnecsim_1_1_community_parameters" kindref="compound">CommunityParameters</ref> &gt;</type>
          <declname>tmp_param</declname>
        </param>
        <briefdescription>
<para>Adds the provided <ref refid="structnecsim_1_1_community_parameters" kindref="compound">CommunityParameters</ref> object to the calc_array vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tmp_param</parametername>
</parameternamelist>
<parameterdescription>
<para>the set of community parameters to add </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/parameters.h" line="167" column="1" bodyfile="necsim/parameters.cpp" bodystart="83" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="structnecsim_1_1_communities_array_1aa721d90f5c923c4d21f71b00e5493965" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>shared_ptr&lt; <ref refid="structnecsim_1_1_community_parameters" kindref="compound">CommunityParameters</ref> &gt;</type>
        <definition>shared_ptr&lt; CommunityParameters &gt; necsim::CommunitiesArray::addNew</definition>
        <argsstring>(long double speciation_rate, long double time, bool fragment, unsigned long metacommunity_reference, const ProtractedSpeciationParameters &amp;protracted_params)</argsstring>
        <name>addNew</name>
        <param>
          <type>long double</type>
          <declname>speciation_rate</declname>
        </param>
        <param>
          <type>long double</type>
          <declname>time</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fragment</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>metacommunity_reference</declname>
        </param>
        <param>
          <type>const <ref refid="structnecsim_1_1_protracted_speciation_parameters" kindref="compound">ProtractedSpeciationParameters</ref> &amp;</type>
          <declname>protracted_params</declname>
        </param>
        <briefdescription>
<para>Adds a new communities calculation paremeters reference, with a new unique reference. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>speciation_rate</parametername>
</parameternamelist>
<parameterdescription>
<para>the speciation rate of the new calculation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>the time used in the new calculation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment</parametername>
</parameternamelist>
<parameterdescription>
<para>true if fragments were used in the new calculation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>metacommunity_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>the reference to the set of metacommunity parameters (0 for none) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>protracted_params</parametername>
</parameternamelist>
<parameterdescription>
<para>protracted speciation parameters to add </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>reference to the new <ref refid="structnecsim_1_1_community_parameters" kindref="compound">CommunityParameters</ref> object added </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/parameters.h" line="178" column="1" bodyfile="necsim/parameters.cpp" bodystart="88" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="structnecsim_1_1_communities_array_1af653d6d9c13ef4a5b51b77a49019e516" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool necsim::CommunitiesArray::hasPair</definition>
        <argsstring>(long double speciation_rate, double time, bool fragment, unsigned long metacommunity_reference, const ProtractedSpeciationParameters &amp;protracted_params)</argsstring>
        <name>hasPair</name>
        <param>
          <type>long double</type>
          <declname>speciation_rate</declname>
        </param>
        <param>
          <type>double</type>
          <declname>time</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fragment</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>metacommunity_reference</declname>
        </param>
        <param>
          <type>const <ref refid="structnecsim_1_1_protracted_speciation_parameters" kindref="compound">ProtractedSpeciationParameters</ref> &amp;</type>
          <declname>protracted_params</declname>
        </param>
        <briefdescription>
<para>Checks whether the calculation with the supplied variables has already been performed. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para></para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>speciation_rate</parametername>
</parameternamelist>
<parameterdescription>
<para>the speciation rate to check for </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>the time to check for </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment</parametername>
</parameternamelist>
<parameterdescription>
<para>bool for checking if fragments were used </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>metacommunity_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>the reference to the set of metacommunity parameters (0 for none) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>protracted_params</parametername>
</parameternamelist>
<parameterdescription>
<para>protracted speciation parameters to add </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the reference exists in past community parameters </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/parameters.h" line="193" column="1" bodyfile="necsim/parameters.cpp" bodystart="132" bodyend="144"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A structure for containing an array of previous calculation information, including which fragments have been already calculated for. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="24">
        <label>std::shared_ptr&lt; necsim::CommunityParameters &gt;</label>
        <childnode refid="25" relation="usage">
          <edgelabel>ptr</edgelabel>
        </childnode>
      </node>
      <node id="22">
        <label>necsim::CommunitiesArray</label>
        <link refid="structnecsim_1_1_communities_array"/>
        <childnode refid="23" relation="usage">
          <edgelabel>comm_parameters</edgelabel>
        </childnode>
      </node>
      <node id="23">
        <label>std::vector&lt; shared_ptr&lt; necsim::CommunityParameters &gt; &gt;</label>
        <childnode refid="24" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="26">
        <label>necsim::ProtractedSpeciationParameters</label>
        <link refid="structnecsim_1_1_protracted_speciation_parameters"/>
      </node>
      <node id="25">
        <label>necsim::CommunityParameters</label>
        <link refid="structnecsim_1_1_community_parameters"/>
        <childnode refid="26" relation="usage">
          <edgelabel>protracted_parameters</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="necsim/parameters.h" line="135" column="1" bodyfile="necsim/parameters.h" bodystart="134" bodyend="196"/>
    <listofallmembers>
      <member refid="structnecsim_1_1_communities_array_1aa721d90f5c923c4d21f71b00e5493965" prot="public" virt="non-virtual"><scope>necsim::CommunitiesArray</scope><name>addNew</name></member>
      <member refid="structnecsim_1_1_communities_array_1a0fdff3686f821cd5e0c752d87a2b743f" prot="public" virt="non-virtual"><scope>necsim::CommunitiesArray</scope><name>comm_parameters</name></member>
      <member refid="structnecsim_1_1_communities_array_1afd783c48237c864ed82af864559b6de7" prot="public" virt="non-virtual"><scope>necsim::CommunitiesArray</scope><name>CommunitiesArray</name></member>
      <member refid="structnecsim_1_1_communities_array_1af653d6d9c13ef4a5b51b77a49019e516" prot="public" virt="non-virtual"><scope>necsim::CommunitiesArray</scope><name>hasPair</name></member>
      <member refid="structnecsim_1_1_communities_array_1a85862db080d8a37a565ff94e5b38dad3" prot="public" virt="non-virtual"><scope>necsim::CommunitiesArray</scope><name>pushBack</name></member>
      <member refid="structnecsim_1_1_communities_array_1af495972165740bb6188d73125064abd1" prot="public" virt="non-virtual"><scope>necsim::CommunitiesArray</scope><name>pushBack</name></member>
      <member refid="structnecsim_1_1_communities_array_1abbc14e0cf5be8200d40ff5274501d2e7" prot="public" virt="non-virtual"><scope>necsim::CommunitiesArray</scope><name>~CommunitiesArray</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
