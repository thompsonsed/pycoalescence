<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_c_p_l_custom_handler_necsim_8cpp" kind="file" language="C++">
    <compoundname>CPLCustomHandlerNecsim.cpp</compoundname>
    <includes local="no">sstream</includes>
    <includes refid="_c_p_l_custom_handler_necsim_8h" local="yes">CPLCustomHandlerNecsim.h</includes>
    <includes refid="_logging_8h" local="yes">Logging.h</includes>
    <incdepgraph>
      <node id="226">
        <label>CPLCustomHandlerNecsim.h</label>
        <link refid="_c_p_l_custom_handler_necsim_8h_source"/>
        <childnode refid="227" relation="include">
        </childnode>
      </node>
      <node id="228">
        <label>Logging.h</label>
        <link refid="_logging_8h_source"/>
        <childnode refid="229" relation="include">
        </childnode>
        <childnode refid="230" relation="include">
        </childnode>
      </node>
      <node id="233">
        <label>stdexcept</label>
      </node>
      <node id="224">
        <label>necsim/CPLCustomHandlerNecsim.cpp</label>
        <link refid="CPLCustomHandlerNecsim.cpp"/>
        <childnode refid="225" relation="include">
        </childnode>
        <childnode refid="226" relation="include">
        </childnode>
        <childnode refid="228" relation="include">
        </childnode>
      </node>
      <node id="229">
        <label>string</label>
      </node>
      <node id="238">
        <label>map</label>
      </node>
      <node id="236">
        <label>fstream</label>
      </node>
      <node id="232">
        <label>cstdio</label>
      </node>
      <node id="237">
        <label>ctime</label>
      </node>
      <node id="225">
        <label>sstream</label>
      </node>
      <node id="231">
        <label>iostream</label>
      </node>
      <node id="230">
        <label>Logger.h</label>
        <link refid="_logger_8h_source"/>
        <childnode refid="229" relation="include">
        </childnode>
        <childnode refid="231" relation="include">
        </childnode>
        <childnode refid="232" relation="include">
        </childnode>
        <childnode refid="233" relation="include">
        </childnode>
        <childnode refid="225" relation="include">
        </childnode>
        <childnode refid="234" relation="include">
        </childnode>
        <childnode refid="226" relation="include">
        </childnode>
      </node>
      <node id="234">
        <label>LogFile.h</label>
        <link refid="_log_file_8h_source"/>
        <childnode refid="235" relation="include">
        </childnode>
        <childnode refid="236" relation="include">
        </childnode>
        <childnode refid="237" relation="include">
        </childnode>
        <childnode refid="238" relation="include">
        </childnode>
      </node>
      <node id="227">
        <label>cpl_error.h</label>
      </node>
      <node id="235">
        <label>cstring</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_c_p_l_custom_handler_necsim_8cpp_1ae67046bb6792da58414fa186068e138c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cplNecsimCustomErrorHandler</definition>
        <argsstring>(CPLErr eErrClass, int err_no, const char *msg)</argsstring>
        <name>cplNecsimCustomErrorHandler</name>
        <param>
          <type>CPLErr</type>
          <declname>eErrClass</declname>
        </param>
        <param>
          <type>int</type>
          <declname>err_no</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Contains a custom CPLErrorHandler for reporting errors from GDAL imports. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>eErrClass</parametername>
</parameternamelist>
<parameterdescription>
<para>the error class (CE_None, CE_Debug, CE_Warning, CE_Failure or CE_Fatal) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err_no</parametername>
</parameternamelist>
<parameterdescription>
<para>the error number to report </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>the message to report </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/CPLCustomHandlerNecsim.cpp" line="15" column="1" bodyfile="necsim/CPLCustomHandlerNecsim.cpp" bodystart="15" bodyend="37"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Contains a custom CPL error handler. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Sam Thompson</para></simplesect>
<simplesect kind="copyright"><para><ulink url="https://opensource.org/licenses/MIT">MIT Licence.</ulink> </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>NECSim<sp/>project<sp/>which<sp/>is<sp/>released<sp/>under<sp/>MIT<sp/>license.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>file<sp/>**LICENSE.txt**<sp/>or<sp/>visit<sp/>https://opensource.org/licenses/MIT)<sp/>for<sp/>full<sp/>license<sp/>details.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;CPLCustomHandlerNecsim.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Logging.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>with_gdal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cplNecsimCustomErrorHandler(CPLErr<sp/>eErrClass,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err_no,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg)</highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>stringstream<sp/>error_msg;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>error_msg<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Gdal<sp/>error:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>err_no<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>msg<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(eErrClass<sp/>==<sp/>CE_Fatal)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeCritical(error_msg.str());</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(eErrClass<sp/>==<sp/>CE_Failure)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeError(error_msg.str());</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(eErrClass<sp/>==<sp/>CE_Warning)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeWarning(error_msg.str());</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeLog(10,<sp/>error_msg.str());</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//with_gdal</highlight></codeline>
    </programlisting>
    <location file="necsim/CPLCustomHandlerNecsim.cpp"/>
  </compounddef>
</doxygen>
