<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="necsim_8h" kind="file" language="C++">
    <compoundname>necsim.h</compoundname>
    <includes local="no">Python.h</includes>
    <includes local="no">vector</includes>
    <includes local="no">string</includes>
    <includedby refid="_c_community_8h" local="yes">CCommunity.h</includedby>
    <includedby refid="_c_landscape_metrics_calculator_8h" local="yes">CLandscapeMetricsCalculator.h</includedby>
    <includedby refid="_c_simulate_dispersal_8h" local="yes">CSimulateDispersal.h</includedby>
    <includedby refid="_c_simulation_8h" local="yes">CSimulation.h</includedby>
    <includedby refid="necsim_8cpp" local="yes">necsim.cpp</includedby>
    <incdepgraph>
      <node id="2390">
        <label>string</label>
      </node>
      <node id="2387">
        <label>necsim.h</label>
        <link refid="necsim.h"/>
        <childnode refid="2388" relation="include">
        </childnode>
        <childnode refid="2389" relation="include">
        </childnode>
        <childnode refid="2390" relation="include">
        </childnode>
      </node>
      <node id="2388">
        <label>Python.h</label>
      </node>
      <node id="2389">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2395">
        <label>CSimulation.h</label>
        <link refid="_c_simulation_8h_source"/>
        <childnode refid="2394" relation="include">
        </childnode>
      </node>
      <node id="2393">
        <label>CLandscapeMetricsCalculator.h</label>
        <link refid="_c_landscape_metrics_calculator_8h_source"/>
      </node>
      <node id="2391">
        <label>necsim.h</label>
        <link refid="necsim.h"/>
        <childnode refid="2392" relation="include">
        </childnode>
        <childnode refid="2393" relation="include">
        </childnode>
        <childnode refid="2394" relation="include">
        </childnode>
        <childnode refid="2395" relation="include">
        </childnode>
      </node>
      <node id="2392">
        <label>CCommunity.h</label>
        <link refid="_c_community_8h_source"/>
      </node>
      <node id="2394">
        <label>CSimulateDispersal.h</label>
        <link refid="_c_simulate_dispersal_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structmodule__state" prot="public">module_state</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="necsim_8h_1a6d1f389576656b98c42c69f7cf1d55c0" prot="public" static="no">
        <name>GETSTATE</name>
        <param><defname>m</defname></param>
        <initializer>(&amp;_state)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim.h" line="26" column="10" bodyfile="necsim.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="necsim_8h_1a3d94077229c2876134769daeeb28fa8a" prot="public" static="no">
        <name>INITERROR</name>
        <initializer>return</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim.h" line="43" column="10" bodyfile="necsim.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="necsim_8h_1adb5f4e26ed08b1f5e57d51f452404533" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structmodule__state" kindref="compound">module_state</ref></type>
        <definition>struct module_state _state</definition>
        <argsstring></argsstring>
        <name>_state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim.h" line="70" column="1" bodyfile="necsim.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="necsim_8h_1aac3ff075b518e19d6ccde6d76325b0aa" prot="public" static="yes" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* necsimError</definition>
        <argsstring></argsstring>
        <name>necsimError</name>
        <briefdescription>
<para>A Python error container for all run-time errors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim.h" line="33" column="1" bodyfile="necsim.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="necsim_8h_1aa680b1c5389c4819a544e348148af3ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyMODINIT_FUNC</type>
        <definition>PyMODINIT_FUNC initlibnecsim</definition>
        <argsstring>(void)</argsstring>
        <name>initlibnecsim</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim.h" line="46" column="1" bodyfile="necsim.cpp" bodystart="70" bodyend="119"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Contains the functions allowing integration of the pycoalescence Python module directly to the c++. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Samuel Thompson</para></simplesect>
<simplesect kind="copyright"><para><ulink url="https://opensource.org/licenses/MIT">MIT Licence.</ulink> </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>necsim<sp/>project<sp/>which<sp/>is<sp/>released<sp/>under<sp/>MIT<sp/>license.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>file<sp/>**LICENSE.txt**<sp/>or<sp/>visit<sp/>https://opensource.org/licenses/MIT)<sp/>for<sp/>full<sp/>license<sp/>details</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight><highlight class="preprocessor">#include<sp/>&lt;Python.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NECSIM_IMPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NECSIM_IMPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="18" refid="structmodule__state" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmodule__state" kindref="compound">module_state</ref></highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*error;</highlight></codeline>
<codeline lineno="21"><highlight class="normal">};</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GETSTATE(m)<sp/>((struct<sp/>module_state*)PyModule_GetState(m))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GETSTATE(m)<sp/>(&amp;_state)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmodule__state" kindref="compound">module_state</ref><sp/>_state;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*necsimError;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Conditional<sp/>compilation<sp/>for<sp/>Python<sp/>&gt;=<sp/>3.0<sp/>(changed<sp/>how<sp/>Python<sp/>integration<sp/>worked)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INITERROR<sp/>return<sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal">PyMODINIT_FUNC</highlight></codeline>
<codeline lineno="41"><highlight class="normal">PyInit_libnecsim(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INITERROR<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">PyMODINIT_FUNC</highlight></codeline>
<codeline lineno="46"><highlight class="normal">initlibnecsim(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="necsim.h"/>
  </compounddef>
</doxygen>
