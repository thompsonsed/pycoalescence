<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_custom_exceptions_8h" kind="file" language="C++">
    <compoundname>CustomExceptions.h</compoundname>
    <includes local="no">stdexcept</includes>
    <includes refid="_logging_8h" local="yes">Logging.h</includes>
    <includedby refid="_config_file_parser_8cpp" local="yes">necsim/ConfigFileParser.cpp</includedby>
    <includedby refid="_dispersal_coordinator_8cpp" local="yes">necsim/DispersalCoordinator.cpp</includedby>
    <includedby refid="_filesystem_8cpp" local="yes">necsim/Filesystem.cpp</includedby>
    <includedby refid="_log_file_8cpp" local="yes">necsim/LogFile.cpp</includedby>
    <includedby refid="_tree_8h" local="yes">necsim/Tree.h</includedby>
    <includedby refid="_simulation_templates_8h" local="yes">necsim/SimulationTemplates.h</includedby>
    <includedby refid="_simulate_dispersal_8cpp" local="yes">necsim/SimulateDispersal.cpp</includedby>
    <incdepgraph>
      <node id="158">
        <label>necsim/CustomExceptions.h</label>
        <link refid="CustomExceptions.h"/>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
      </node>
      <node id="160">
        <label>Logging.h</label>
        <link refid="_logging_8h_source"/>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="170" relation="include">
        </childnode>
      </node>
      <node id="170">
        <label>CPLCustomHandler.h</label>
        <link refid="_c_p_l_custom_handler_8h_source"/>
      </node>
      <node id="159">
        <label>stdexcept</label>
      </node>
      <node id="161">
        <label>string</label>
      </node>
      <node id="169">
        <label>map</label>
      </node>
      <node id="167">
        <label>fstream</label>
      </node>
      <node id="163">
        <label>cstdio</label>
      </node>
      <node id="168">
        <label>ctime</label>
      </node>
      <node id="164">
        <label>sstream</label>
      </node>
      <node id="162">
        <label>iostream</label>
      </node>
      <node id="165">
        <label>LogFile.h</label>
        <link refid="_log_file_8h_source"/>
        <childnode refid="166" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
        <childnode refid="169" relation="include">
        </childnode>
      </node>
      <node id="166">
        <label>cstring</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="171">
        <label>necsim/CustomExceptions.h</label>
        <link refid="CustomExceptions.h"/>
        <childnode refid="172" relation="include">
        </childnode>
        <childnode refid="177" relation="include">
        </childnode>
      </node>
      <node id="177">
        <label>necsim/SimulationTemplates.h</label>
        <link refid="_simulation_templates_8h_source"/>
      </node>
      <node id="172">
        <label>necsim/Tree.h</label>
        <link refid="_tree_8h_source"/>
        <childnode refid="173" relation="include">
        </childnode>
        <childnode refid="176" relation="include">
        </childnode>
      </node>
      <node id="174">
        <label>necsim/ProtractedSpatialTree.h</label>
        <link refid="_protracted_spatial_tree_8h_source"/>
      </node>
      <node id="173">
        <label>necsim/SpatialTree.h</label>
        <link refid="_spatial_tree_8h_source"/>
        <childnode refid="174" relation="include">
        </childnode>
        <childnode refid="175" relation="include">
        </childnode>
      </node>
      <node id="175">
        <label>necsim/ProtractedTree.h</label>
        <link refid="_protracted_tree_8h_source"/>
        <childnode refid="174" relation="include">
        </childnode>
      </node>
      <node id="176">
        <label>necsim/Metacommunity.h</label>
        <link refid="_metacommunity_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_fatal_exception" prot="public">FatalException</innerclass>
    <innerclass refid="struct_config_exception" prot="public">ConfigException</innerclass>
    <innerclass refid="struct_species_exception" prot="public">SpeciesException</innerclass>
    <briefdescription>
<para>Contains the various exceptions used by NECSim. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Samuel Thompson</para></simplesect>
<simplesect kind="copyright"><para><ulink url="https://opensource.org/licenses/BSD-3-Clause">BSD-3 Licence.</ulink> </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>NECSim<sp/>project<sp/>which<sp/>is<sp/>released<sp/>under<sp/>BSD-3<sp/>license.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//See<sp/>file<sp/>**LICENSE.txt**<sp/>or<sp/>visit<sp/>https://opensource.org/licenses/BSD-3-Clause)<sp/>for<sp/>full<sp/>license<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/>Samuel<sp/>Thompson</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Contact:<sp/>samuel.thompson14@imperial.ac.uk<sp/>or<sp/>thompsonsed@gmail.com</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight><highlight class="preprocessor">#ifndef<sp/>CUSTOM_EXCEPTION_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CUSTOM_EXCEPTION_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Logging.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="struct_fatal_exception" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_fatal_exception" kindref="compound">FatalException</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>runtime_error</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_fatal_exception" kindref="compound">FatalException</ref>()<sp/>:<sp/>runtime_error(</highlight><highlight class="stringliteral">&quot;Fatal<sp/>exception<sp/>thrown<sp/>at<sp/>run<sp/>time,<sp/>quitting<sp/>program.<sp/>&quot;</highlight><highlight class="normal">){}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="struct_fatal_exception" kindref="compound">FatalException</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>msg)<sp/>:<sp/>runtime_error(msg)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeLog(50,<sp/>msg);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal">};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="struct_config_exception" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_config_exception" kindref="compound">ConfigException</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_fatal_exception" kindref="compound">FatalException</ref></highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_config_exception" kindref="compound">ConfigException</ref>()<sp/>:<sp/><ref refid="struct_fatal_exception" kindref="compound">FatalException</ref>(</highlight><highlight class="stringliteral">&quot;Exception<sp/>thrown<sp/>at<sp/>run<sp/>time<sp/>in<sp/>config:<sp/>&quot;</highlight><highlight class="normal">){}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="struct_config_exception" kindref="compound">ConfigException</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>msg)<sp/>:<sp/><ref refid="struct_fatal_exception" kindref="compound">FatalException</ref>(msg){}</highlight></codeline>
<codeline lineno="47"><highlight class="normal">};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="struct_species_exception" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_species_exception" kindref="compound">SpeciesException</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="struct_fatal_exception" kindref="compound">FatalException</ref></highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60" refid="struct_species_exception_1aad9febae65922d3a68a3d70ddc8b6a16" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_species_exception_1aad9febae65922d3a68a3d70ddc8b6a16" kindref="member">SpeciesException</ref>()<sp/>:<sp/><ref refid="struct_fatal_exception" kindref="compound">FatalException</ref>(</highlight><highlight class="stringliteral">&quot;Exception<sp/>thrown<sp/>at<sp/>run<sp/>time<sp/>in<sp/>SpeciationCounter:<sp/>&quot;</highlight><highlight class="normal">){}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="struct_species_exception_1aee4c223dc1b702be3b937556f39b26a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="struct_species_exception_1aee4c223dc1b702be3b937556f39b26a5" kindref="member">SpeciesException</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>msg)<sp/>:<sp/><ref refid="struct_fatal_exception" kindref="compound">FatalException</ref>(msg){}</highlight></codeline>
<codeline lineno="67"><highlight class="normal">};</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>CUSTOM_EXCEPTION_H</highlight></codeline>
    </programlisting>
    <location file="necsim/CustomExceptions.h"/>
  </compounddef>
</doxygen>
