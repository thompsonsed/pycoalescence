<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_py_community_template" kind="class" language="C++" prot="public">
    <compoundname>PyCommunityTemplate</compoundname>
    <basecompoundref refid="class_py_template" prot="public" virt="non-virtual">PyTemplate&lt; T &gt;</basecompoundref>
    <includes refid="_c_community_8h" local="no">CCommunity.h</includes>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_py_community_template_1acf9ef7d5d3e64724e895bc0ab08e9660" prot="public" static="no" mutable="no">
        <type>shared_ptr&lt; <ref refid="structnecsim_1_1_spec_sim_parameters" kindref="compound">SpecSimParameters</ref> &gt;</type>
        <definition>shared_ptr&lt;SpecSimParameters&gt; PyCommunityTemplate&lt; T &gt;::specSimParameters</definition>
        <argsstring></argsstring>
        <name>specSimParameters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CCommunity.h" line="35" column="1" bodyfile="CCommunity.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_py_template_1a5b741a472639d65f9bcad29afa16ec99" prot="public" static="no" mutable="no">
        <type>PyObject_HEAD PyObject *</type>
        <definition>PyObject_HEAD PyObject* PyTemplate&lt; T &gt;::logger</definition>
        <argsstring></argsstring>
        <name>logger</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="PyTemplates.h" line="24" column="1" bodyfile="PyTemplates.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_py_template_1a98bb8152faa73d028342d5cf260f0372" prot="public" static="no" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* PyTemplate&lt; T &gt;::log_function</definition>
        <argsstring></argsstring>
        <name>log_function</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="PyTemplates.h" line="25" column="1" bodyfile="PyTemplates.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_py_template_1abcd20aea11103e6764f38cf5ed4085ca" prot="public" static="no" mutable="no">
        <type>std::unique_ptr&lt; T &gt;</type>
        <definition>std::unique_ptr&lt;T&gt; PyTemplate&lt; T &gt;::base_object</definition>
        <argsstring></argsstring>
        <name>base_object</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="PyTemplates.h" line="26" column="1" bodyfile="PyTemplates.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Template for CCommunity and CMetacommunity objects for exporting to Python. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of the Community </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="383">
        <label>PyTemplate&lt; T &gt;</label>
        <link refid="class_py_template"/>
      </node>
      <node id="382">
        <label>PyCommunityTemplate&lt; T &gt;</label>
        <link refid="class_py_community_template"/>
        <childnode refid="383" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="385">
        <label>PyTemplate&lt; T &gt;</label>
        <link refid="class_py_template"/>
      </node>
      <node id="386">
        <label>std::shared_ptr&lt; SpecSimParameters &gt;</label>
      </node>
      <node id="384">
        <label>PyCommunityTemplate&lt; T &gt;</label>
        <link refid="class_py_community_template"/>
        <childnode refid="385" relation="public-inheritance">
        </childnode>
        <childnode refid="386" relation="usage">
          <edgelabel>specSimParameters</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="CCommunity.h" line="33" column="1" bodyfile="CCommunity.h" bodystart="32" bodyend="36"/>
    <listofallmembers>
      <member refid="class_py_template_1abcd20aea11103e6764f38cf5ed4085ca" prot="public" virt="non-virtual"><scope>PyCommunityTemplate</scope><name>base_object</name></member>
      <member refid="class_py_template_1a98bb8152faa73d028342d5cf260f0372" prot="public" virt="non-virtual"><scope>PyCommunityTemplate</scope><name>log_function</name></member>
      <member refid="class_py_template_1a5b741a472639d65f9bcad29afa16ec99" prot="public" virt="non-virtual"><scope>PyCommunityTemplate</scope><name>logger</name></member>
      <member refid="class_py_community_template_1acf9ef7d5d3e64724e895bc0ab08e9660" prot="public" virt="non-virtual"><scope>PyCommunityTemplate</scope><name>specSimParameters</name></member>
      <member refid="class_py_template_1a36ca8cde4c5e58a5353ae03d04ccfb0f" prot="public" virt="virtual"><scope>PyCommunityTemplate</scope><name>~PyTemplate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
