<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_spec_sim_parameters_8h" kind="file" language="C++">
    <compoundname>SpecSimParameters.h</compoundname>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes refid="_config_file_parser_8h" local="yes">ConfigFileParser.h</includes>
    <includes refid="_custom_exceptions_8h" local="yes">CustomExceptions.h</includes>
    <includes refid="_double_comparison_8h" local="yes">DoubleComparison.h</includes>
    <includedby refid="_community_8h" local="yes">necsim/Community.h</includedby>
    <includedby refid="_metacommunity_8h" local="yes">necsim/Metacommunity.h</includedby>
    <includedby refid="_speciation_commands_8h" local="yes">necsim/SpeciationCommands.h</includedby>
    <incdepgraph>
      <node id="1600">
        <label>ConfigFileParser.h</label>
        <link refid="_config_file_parser_8h_source"/>
        <childnode refid="1598" relation="include">
        </childnode>
        <childnode refid="1601" relation="include">
        </childnode>
        <childnode refid="1602" relation="include">
        </childnode>
        <childnode refid="1603" relation="include">
        </childnode>
        <childnode refid="1604" relation="include">
        </childnode>
        <childnode refid="1599" relation="include">
        </childnode>
        <childnode refid="1605" relation="include">
        </childnode>
        <childnode refid="1606" relation="include">
        </childnode>
        <childnode refid="1607" relation="include">
        </childnode>
        <childnode refid="1608" relation="include">
        </childnode>
        <childnode refid="1609" relation="include">
        </childnode>
      </node>
      <node id="1610">
        <label>CustomExceptions.h</label>
        <link refid="_custom_exceptions_8h_source"/>
        <childnode refid="1604" relation="include">
        </childnode>
        <childnode refid="1611" relation="include">
        </childnode>
        <childnode refid="1612" relation="include">
        </childnode>
      </node>
      <node id="1612">
        <label>Logging.h</label>
        <link refid="_logging_8h_source"/>
        <childnode refid="1598" relation="include">
        </childnode>
        <childnode refid="1613" relation="include">
        </childnode>
      </node>
      <node id="1618">
        <label>CPLCustomHandler.h</label>
        <link refid="_c_p_l_custom_handler_8h_source"/>
        <childnode refid="1619" relation="include">
        </childnode>
      </node>
      <node id="1620">
        <label>DoubleComparison.h</label>
        <link refid="_double_comparison_8h_source"/>
      </node>
      <node id="1607">
        <label>cmath</label>
      </node>
      <node id="1604">
        <label>stdexcept</label>
      </node>
      <node id="1598">
        <label>string</label>
      </node>
      <node id="1617">
        <label>map</label>
      </node>
      <node id="1603">
        <label>fstream</label>
      </node>
      <node id="1614">
        <label>cstdio</label>
      </node>
      <node id="1616">
        <label>ctime</label>
      </node>
      <node id="1606">
        <label>unistd.h</label>
      </node>
      <node id="1599">
        <label>vector</label>
      </node>
      <node id="1611">
        <label>utility</label>
      </node>
      <node id="1602">
        <label>sstream</label>
      </node>
      <node id="1597">
        <label>necsim/SpecSimParameters.h</label>
        <link refid="SpecSimParameters.h"/>
        <childnode refid="1598" relation="include">
        </childnode>
        <childnode refid="1599" relation="include">
        </childnode>
        <childnode refid="1600" relation="include">
        </childnode>
        <childnode refid="1610" relation="include">
        </childnode>
        <childnode refid="1620" relation="include">
        </childnode>
      </node>
      <node id="1608">
        <label>cctype</label>
      </node>
      <node id="1601">
        <label>iostream</label>
      </node>
      <node id="1613">
        <label>Logger.h</label>
        <link refid="_logger_8h_source"/>
        <childnode refid="1598" relation="include">
        </childnode>
        <childnode refid="1601" relation="include">
        </childnode>
        <childnode refid="1614" relation="include">
        </childnode>
        <childnode refid="1604" relation="include">
        </childnode>
        <childnode refid="1602" relation="include">
        </childnode>
        <childnode refid="1615" relation="include">
        </childnode>
        <childnode refid="1618" relation="include">
        </childnode>
      </node>
      <node id="1615">
        <label>LogFile.h</label>
        <link refid="_log_file_8h_source"/>
        <childnode refid="1605" relation="include">
        </childnode>
        <childnode refid="1603" relation="include">
        </childnode>
        <childnode refid="1616" relation="include">
        </childnode>
        <childnode refid="1617" relation="include">
        </childnode>
      </node>
      <node id="1619">
        <label>cpl_error.h</label>
      </node>
      <node id="1609">
        <label>algorithm</label>
      </node>
      <node id="1605">
        <label>cstring</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1623">
        <label>necsim/Tree.h</label>
        <link refid="_tree_8h_source"/>
        <childnode refid="1624" relation="include">
        </childnode>
        <childnode refid="1627" relation="include">
        </childnode>
      </node>
      <node id="1625">
        <label>necsim/ProtractedSpatialTree.h</label>
        <link refid="_protracted_spatial_tree_8h_source"/>
      </node>
      <node id="1622">
        <label>necsim/Community.h</label>
        <link refid="_community_8h_source"/>
        <childnode refid="1623" relation="include">
        </childnode>
        <childnode refid="1624" relation="include">
        </childnode>
        <childnode refid="1627" relation="include">
        </childnode>
        <childnode refid="1628" relation="include">
        </childnode>
      </node>
      <node id="1624">
        <label>necsim/SpatialTree.h</label>
        <link refid="_spatial_tree_8h_source"/>
        <childnode refid="1625" relation="include">
        </childnode>
        <childnode refid="1626" relation="include">
        </childnode>
      </node>
      <node id="1626">
        <label>necsim/ProtractedTree.h</label>
        <link refid="_protracted_tree_8h_source"/>
        <childnode refid="1625" relation="include">
        </childnode>
      </node>
      <node id="1627">
        <label>necsim/Metacommunity.h</label>
        <link refid="_metacommunity_8h_source"/>
      </node>
      <node id="1621">
        <label>necsim/SpecSimParameters.h</label>
        <link refid="SpecSimParameters.h"/>
        <childnode refid="1622" relation="include">
        </childnode>
        <childnode refid="1627" relation="include">
        </childnode>
        <childnode refid="1628" relation="include">
        </childnode>
      </node>
      <node id="1628">
        <label>necsim/SpeciationCommands.h</label>
        <link refid="_speciation_commands_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_protracted_speciation_parameters" prot="public">ProtractedSpeciationParameters</innerclass>
    <innerclass refid="struct_spec_sim_parameters" prot="public">SpecSimParameters</innerclass>
    <briefdescription>
<para>Contains parameters for applying speciation rates post-simulation. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Sam Thompson</para></simplesect>
Contact: <ulink url="mailto:samuel.thompson14@imperial.ac.uk">samuel.thompson14@imperial.ac.uk</ulink> or <ulink url="mailto:thompsonsed@gmail.com">thompsonsed@gmail.com</ulink> <simplesect kind="copyright"><para><ulink url="https://opensource.org/licenses/MIT">MIT Licence.</ulink> </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>NECSim<sp/>project<sp/>which<sp/>is<sp/>released<sp/>under<sp/>MIT<sp/>license.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>file<sp/>**LICENSE.txt**<sp/>or<sp/>visit<sp/>https://opensource.org/licenses/MIT)<sp/>for<sp/>full<sp/>license<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ConfigFileParser.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;CustomExceptions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;DoubleComparison.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SPECIATIONCOUNTER_SPECSIMPARAMETERS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPECIATIONCOUNTER_SPECSIMPARAMETERS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="struct_protracted_speciation_parameters" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_protracted_speciation_parameters" kindref="compound">ProtractedSpeciationParameters</ref></highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>min_speciation_gen;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_speciation_gen;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_protracted_speciation_parameters" kindref="compound">ProtractedSpeciationParameters</ref>()<sp/>:<sp/>min_speciation_gen(0),<sp/>max_speciation_gen(0){};</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_protracted_speciation_parameters" kindref="compound">ProtractedSpeciationParameters</ref><sp/>&amp;p1)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(doubleCompare(p1.min_speciation_gen,<sp/>min_speciation_gen,<sp/>0.00000001)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doubleCompare(p1.max_speciation_gen,<sp/>max_speciation_gen,<sp/>0.00000001));</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">};</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="struct_spec_sim_parameters" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_spec_sim_parameters" kindref="compound">SpecSimParameters</ref></highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>use_spatial;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bMultiRun;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>use_fragments;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>filename;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>all_speciation_rates;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>samplemask;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>times_file;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>all_times;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>fragment_config_file;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;ProtractedSpeciationParameters&gt;<sp/>protracted_parameters;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>metacommunity_size;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>metacommunity_speciation_rate;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="struct_spec_sim_parameters_1acbd3e700200cf2bb07b3e58f1dc95ec6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_spec_sim_parameters_1acbd3e700200cf2bb07b3e58f1dc95ec6" kindref="member">setup</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>file_in,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>use_spatial_in,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>sample_file,<sp/>vector&lt;double&gt;<sp/>times,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>use_fragments_in,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>speciation_rates,<sp/>vector&lt;double&gt;<sp/>min_speciation_gen_in,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>max_speciation_gen_in)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setup(file_in,<sp/>use_spatial_in,<sp/>sample_file,<sp/>times,<sp/>use_fragments_in,<sp/>speciation_rates,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_speciation_gen_in,<sp/>max_speciation_gen_in,<sp/>0,<sp/>0.0);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="struct_spec_sim_parameters_1acabbdf627ecb8bec48314f7990b9b575" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_spec_sim_parameters_1acabbdf627ecb8bec48314f7990b9b575" kindref="member">setup</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>file_in,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>use_spatial_in,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>sample_file,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;double&gt;<sp/>&amp;times,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>use_fragments_in,<sp/>vector&lt;double&gt;<sp/>speciation_rates,<sp/>vector&lt;double&gt;<sp/>min_speciation_gen_in,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>max_speciation_gen_in,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>metacommunity_size_in,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>metacommunity_speciation_rate_in)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filename<sp/>=<sp/>std::move(file_in);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_spatial<sp/>=<sp/>use_spatial_in;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samplemask<sp/>=<sp/>std::move(sample_file);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(times.empty()<sp/>&amp;&amp;<sp/>all_times.empty())</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>times_file<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;null&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_times.push_back(0.0);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>times_file<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;set&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>item<sp/>:<sp/>times)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_times.emplace_back(item);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(min_speciation_gen_in.size()<sp/>!=<sp/>max_speciation_gen_in.size())</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="struct_fatal_exception" kindref="compound">FatalException</ref>(</highlight><highlight class="stringliteral">&quot;Protracted<sp/>parameter<sp/>mismatch<sp/>between<sp/>minimum<sp/>and<sp/>maximum<sp/>generations<sp/>(must<sp/>be<sp/>equal<sp/>length).&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>min_speciation_gen_in.size();<sp/>i++)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_protracted_speciation_parameters" kindref="compound">ProtractedSpeciationParameters</ref><sp/>tmp{};</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp.min_speciation_gen<sp/>=<sp/>min_speciation_gen_in[i];</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp.max_speciation_gen<sp/>=<sp/>max_speciation_gen_in[i];</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>protracted_parameters.emplace_back(tmp);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_fragments<sp/>=<sp/>!(use_fragments_in<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;F&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fragment_config_file<sp/>=<sp/>use_fragments_in;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bMultiRun<sp/>=<sp/>speciation_rates.size()<sp/>&gt;<sp/>1;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>speciation_rate<sp/>:<sp/>speciation_rates)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_speciation_rates.push_back(speciation_rate);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metacommunity_size<sp/>=<sp/>metacommunity_size_in;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metacommunity_speciation_rate<sp/>=<sp/>metacommunity_speciation_rate_in;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="struct_spec_sim_parameters_1ae0196a50a551a821b75b6e92a35534a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_spec_sim_parameters_1ae0196a50a551a821b75b6e92a35534a7" kindref="member">importTimeConfig</ref>()</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(times_file<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;null&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_times.push_back(0.0);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector&lt;string&gt;<sp/>tmpimport;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_config_option" kindref="compound">ConfigOption</ref><sp/>tmpconfig;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpconfig.<ref refid="class_config_option_1ac1ae69813100e755359b25b11dfeb8c7" kindref="member">setConfig</ref>(times_file,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmpconfig.<ref refid="class_config_option_1afbd1ed9d006c8ff48d90e63a57f55e2a" kindref="member">importConfig</ref>(tmpimport);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;i<sp/>:<sp/>tmpimport)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_times.push_back(stod(i));</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="struct_spec_sim_parameters_1a10aac8e7ab592f53b071287e60483b88" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_spec_sim_parameters_1a10aac8e7ab592f53b071287e60483b88" kindref="member">wipe</ref>()</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_spatial<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bMultiRun<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use_fragments<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filename<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_speciation_rates.clear();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samplemask<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>times_file<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_times.clear();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fragment_config_file<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>protracted_parameters.clear();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metacommunity_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metacommunity_speciation_rate<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="struct_spec_sim_parameters_1a78e27888e92d1b1ddfd9d9a8e129b618" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_spec_sim_parameters_1a78e27888e92d1b1ddfd9d9a8e129b618" kindref="member">addTime</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_times.emplace_back(time);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="struct_spec_sim_parameters_1af88d55fcc175d52519a6c2a0843173eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_spec_sim_parameters_1af88d55fcc175d52519a6c2a0843173eb" kindref="member">addProtractedParameters</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>proc_spec_min,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>proc_spec_max)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_protracted_speciation_parameters" kindref="compound">ProtractedSpeciationParameters</ref><sp/>tmp;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp.min_speciation_gen<sp/>=<sp/>proc_spec_min;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp.max_speciation_gen<sp/>=<sp/>proc_spec_max;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>protracted_parameters.emplace_back(tmp);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal">};</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//SPECIATIONCOUNTER_SPECSIMPARAMETERS_H</highlight></codeline>
    </programlisting>
    <location file="necsim/SpecSimParameters.h"/>
  </compounddef>
</doxygen>
