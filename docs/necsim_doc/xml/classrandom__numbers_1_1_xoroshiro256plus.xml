<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classrandom__numbers_1_1_xoroshiro256plus" kind="class" language="C++" prot="public">
    <compoundname>random_numbers::Xoroshiro256plus</compoundname>
    <derivedcompoundref refid="classrandom__numbers_1_1_r_n_g_controller" prot="public" virt="virtual">random_numbers::RNGController</derivedcompoundref>
    <includes refid="_xoroshiro256plus_8h" local="no">Xoroshiro256plus.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classrandom__numbers_1_1_xoroshiro256plus_1af2c7c9c5a47212287e86e24d15be7b24" prot="protected" static="no" mutable="no">
        <type>std::array&lt; uint64_t, 4 &gt;</type>
        <definition>std::array&lt;uint64_t, 4&gt; random_numbers::Xoroshiro256plus::shuffle_table</definition>
        <argsstring></argsstring>
        <name>shuffle_table</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Xoroshiro256plus.h" line="123" column="1" bodyfile="necsim/Xoroshiro256plus.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrandom__numbers_1_1_xoroshiro256plus_1a5b47806285be2ac295b2e595f93740e2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>random_numbers::Xoroshiro256plus::Xoroshiro256plus</definition>
        <argsstring>()</argsstring>
        <name>Xoroshiro256plus</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Xoroshiro256plus.h" line="126" column="1" bodyfile="necsim/Xoroshiro256plus.h" bodystart="126" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classrandom__numbers_1_1_xoroshiro256plus_1a0cbaa9054b9d4956e6e911003f17709a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual random_numbers::Xoroshiro256plus::~Xoroshiro256plus</definition>
        <argsstring>()=default</argsstring>
        <name>~Xoroshiro256plus</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Xoroshiro256plus.h" line="131" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classrandom__numbers_1_1_xoroshiro256plus_1a2db51d9e2307ed500499f54549183329" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>random_numbers::Xoroshiro256plus::Xoroshiro256plus</definition>
        <argsstring>(uint64_t seed)</argsstring>
        <name>Xoroshiro256plus</name>
        <param>
          <type>uint64_t</type>
          <declname>seed</declname>
        </param>
        <briefdescription>
<para>Explicit constructor which sets the rng seed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>seed</parametername>
</parameternamelist>
<parameterdescription>
<para>the random seed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Xoroshiro256plus.h" line="137" column="1" bodyfile="necsim/Xoroshiro256plus.h" bodystart="137" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classrandom__numbers_1_1_xoroshiro256plus_1a16cb6bab9d08f12e6791f23f6fee8d07" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void random_numbers::Xoroshiro256plus::setSeed</definition>
        <argsstring>(uint64_t seed)</argsstring>
        <name>setSeed</name>
        <reimplementedby refid="classrandom__numbers_1_1_r_n_g_controller_1a87dfdf88ef5b6e7f485055dcc328dc42">setSeed</reimplementedby>
        <param>
          <type>uint64_t</type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Xoroshiro256plus.h" line="142" column="1" bodyfile="necsim/Xoroshiro256plus.h" bodystart="142" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classrandom__numbers_1_1_xoroshiro256plus_1a1f784c1deb73da3e3eae76668cb50547" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t random_numbers::Xoroshiro256plus::next</definition>
        <argsstring>()</argsstring>
        <name>next</name>
        <briefdescription>
<para>Generates the next random integer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a random integer from 0 to max of 2^64 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Xoroshiro256plus.h" line="157" column="1" bodyfile="necsim/Xoroshiro256plus.h" bodystart="157" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="classrandom__numbers_1_1_xoroshiro256plus_1a24e7062397e7130f80b939652e23cab7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double random_numbers::Xoroshiro256plus::d01</definition>
        <argsstring>()</argsstring>
        <name>d01</name>
        <briefdescription>
<para>Generates a random number in the range [0, 1) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a random double </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Xoroshiro256plus.h" line="180" column="1" bodyfile="necsim/Xoroshiro256plus.h" bodystart="180" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="classrandom__numbers_1_1_xoroshiro256plus_1a9b44f592f68cb5faa6f56471915098dc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void random_numbers::Xoroshiro256plus::jump</definition>
        <argsstring>()</argsstring>
        <name>jump</name>
        <briefdescription>
<para>Jumps the generator forwards by the equivalent of 2^128 calls of <ref refid="classrandom__numbers_1_1_xoroshiro256plus_1a1f784c1deb73da3e3eae76668cb50547" kindref="member">next()</ref> - useful for parallel computations where different random number sequences are required. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Xoroshiro256plus.h" line="189" column="1" bodyfile="necsim/Xoroshiro256plus.h" bodystart="189" bodyend="215"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classrandom__numbers_1_1_xoroshiro256plus_1a72937aa4a4c073c5320af0f8d4a6ac5b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const Xoroshiro256plus &amp;x)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classrandom__numbers_1_1_xoroshiro256plus" kindref="compound">Xoroshiro256plus</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Writes the random number generator to an output stream. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>os</parametername>
</parameternamelist>
<parameterdescription>
<para>the output stream to write to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the random number generator to save </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Xoroshiro256plus.h" line="223" column="1" bodyfile="necsim/Xoroshiro256plus.h" bodystart="223" bodyend="230"/>
      </memberdef>
      <memberdef kind="friend" id="classrandom__numbers_1_1_xoroshiro256plus_1abac0db071ad0fc555f462c02e4294182" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend std::istream &amp;</type>
        <definition>std::istream&amp; operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;is, Xoroshiro256plus &amp;x)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="classrandom__numbers_1_1_xoroshiro256plus" kindref="compound">Xoroshiro256plus</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Inputs the NRrand object from the input stream. Used for reading the NRrand object from a file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>is</parametername>
</parameternamelist>
<parameterdescription>
<para>the input stream. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>the NRrand object to input to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the input stream. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Xoroshiro256plus.h" line="239" column="1" bodyfile="necsim/Xoroshiro256plus.h" bodystart="239" bodyend="247"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A random number generator using the xoroshiro. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>From the authors of the algorthim: This is xoshiro256+ 1.0, our best and fastest generator for floating-point numbers. We suggest to use its upper bits for floating-point generation, as it is slightly faster than xoshiro256**. It passes all tests we are aware of except for the lowest three bits, which might fail linearity tests (and just those), so if low linear complexity is not considered an issue (as it is usually the case) it can be used to generate 64-bit outputs, too. We suggest to use a sign test to extract a random Boolean value, and right shifts to extract subsets of bits. The state must be seeded so that it is not everywhere zero. If you have a 64-bit seed, we suggest to seed a splitmix64 generator and use its output to fill the shuffle table. </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="653">
        <label>random_numbers::Xoroshiro256plus</label>
        <link refid="classrandom__numbers_1_1_xoroshiro256plus"/>
      </node>
      <node id="654">
        <label>random_numbers::RNGController</label>
        <link refid="classrandom__numbers_1_1_r_n_g_controller"/>
        <childnode refid="653" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="656">
        <label>std::array&lt; uint64_t, 4 &gt;</label>
      </node>
      <node id="655">
        <label>random_numbers::Xoroshiro256plus</label>
        <link refid="classrandom__numbers_1_1_xoroshiro256plus"/>
        <childnode refid="656" relation="usage">
          <edgelabel>shuffle_table</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="necsim/Xoroshiro256plus.h" line="121" column="1" bodyfile="necsim/Xoroshiro256plus.h" bodystart="120" bodyend="248"/>
    <listofallmembers>
      <member refid="classrandom__numbers_1_1_xoroshiro256plus_1a24e7062397e7130f80b939652e23cab7" prot="public" virt="non-virtual"><scope>random_numbers::Xoroshiro256plus</scope><name>d01</name></member>
      <member refid="classrandom__numbers_1_1_xoroshiro256plus_1a9b44f592f68cb5faa6f56471915098dc" prot="public" virt="non-virtual"><scope>random_numbers::Xoroshiro256plus</scope><name>jump</name></member>
      <member refid="classrandom__numbers_1_1_xoroshiro256plus_1a1f784c1deb73da3e3eae76668cb50547" prot="public" virt="non-virtual"><scope>random_numbers::Xoroshiro256plus</scope><name>next</name></member>
      <member refid="classrandom__numbers_1_1_xoroshiro256plus_1a72937aa4a4c073c5320af0f8d4a6ac5b" prot="public" virt="non-virtual"><scope>random_numbers::Xoroshiro256plus</scope><name>operator&lt;&lt;</name></member>
      <member refid="classrandom__numbers_1_1_xoroshiro256plus_1abac0db071ad0fc555f462c02e4294182" prot="public" virt="non-virtual"><scope>random_numbers::Xoroshiro256plus</scope><name>operator&gt;&gt;</name></member>
      <member refid="classrandom__numbers_1_1_xoroshiro256plus_1a16cb6bab9d08f12e6791f23f6fee8d07" prot="public" virt="virtual"><scope>random_numbers::Xoroshiro256plus</scope><name>setSeed</name></member>
      <member refid="classrandom__numbers_1_1_xoroshiro256plus_1af2c7c9c5a47212287e86e24d15be7b24" prot="protected" virt="non-virtual"><scope>random_numbers::Xoroshiro256plus</scope><name>shuffle_table</name></member>
      <member refid="classrandom__numbers_1_1_xoroshiro256plus_1a5b47806285be2ac295b2e595f93740e2" prot="public" virt="non-virtual"><scope>random_numbers::Xoroshiro256plus</scope><name>Xoroshiro256plus</name></member>
      <member refid="classrandom__numbers_1_1_xoroshiro256plus_1a2db51d9e2307ed500499f54549183329" prot="public" virt="non-virtual"><scope>random_numbers::Xoroshiro256plus</scope><name>Xoroshiro256plus</name></member>
      <member refid="classrandom__numbers_1_1_xoroshiro256plus_1a0cbaa9054b9d4956e6e911003f17709a" prot="public" virt="virtual"><scope>random_numbers::Xoroshiro256plus</scope><name>~Xoroshiro256plus</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
