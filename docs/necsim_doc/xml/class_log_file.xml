<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_log_file" kind="class" language="C++" prot="public">
    <compoundname>LogFile</compoundname>
    <includes refid="_log_file_8h" local="no">LogFile.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_log_file_1aae3e784ed5a2414b57d46940a2995c82" prot="protected" static="no" mutable="no">
        <type>ofstream</type>
        <definition>ofstream LogFile::output_stream</definition>
        <argsstring></argsstring>
        <name>output_stream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/LogFile.h" line="48" column="1" bodyfile="necsim/LogFile.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_log_file_1a0fcd1e0a15e6c08f147b39dbea2b253c" prot="protected" static="no" mutable="no">
        <type>string</type>
        <definition>string LogFile::file_name</definition>
        <argsstring></argsstring>
        <name>file_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/LogFile.h" line="50" column="1" bodyfile="necsim/LogFile.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_log_file_1a75e3b5022358adcff29923c0e9116ff4" prot="protected" static="no" mutable="no">
        <type>map&lt; int, string &gt;</type>
        <definition>map&lt;int, string&gt; LogFile::levels_map</definition>
        <argsstring></argsstring>
        <name>levels_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/LogFile.h" line="52" column="1" bodyfile="necsim/LogFile.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_log_file_1ad18ff4b82ec0b081cbfd9556a48194fe" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>LogFile::LogFile</definition>
        <argsstring>(const LogFile &amp;)=delete</argsstring>
        <name>LogFile</name>
        <param>
          <type>const <ref refid="class_log_file" kindref="compound">LogFile</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/LogFile.h" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_log_file_1a3556b56361a4f9f1cc83e9c3967096ab" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_log_file" kindref="compound">LogFile</ref> &amp;</type>
        <definition>LogFile&amp; LogFile::operator=</definition>
        <argsstring>(const LogFile &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_log_file" kindref="compound">LogFile</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/LogFile.h" line="57" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_log_file_1ad11b3baf5602575c1396f726d3598188" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>LogFile::LogFile</definition>
        <argsstring>()</argsstring>
        <name>LogFile</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/LogFile.h" line="63" column="1" bodyfile="necsim/LogFile.cpp" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_log_file_1a2658bd3713a4b4300dfb337905c2b5a0" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>LogFile::LogFile</definition>
        <argsstring>(string file_name_in)</argsstring>
        <name>LogFile</name>
        <param>
          <type>string</type>
          <declname>file_name_in</declname>
        </param>
        <briefdescription>
<para>Constructor taking location of a log file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file_name_in</parametername>
</parameternamelist>
<parameterdescription>
<para>the path to the log file to open </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/LogFile.h" line="69" column="1" bodyfile="necsim/LogFile.cpp" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="class_log_file_1a440a7de2dcbb9facb68e56dc47cb9dea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>LogFile::~LogFile</definition>
        <argsstring>()</argsstring>
        <name>~LogFile</name>
        <briefdescription>
<para>Default destructor, including writing closure out to log file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/LogFile.h" line="74" column="1" bodyfile="necsim/LogFile.cpp" bodystart="68" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_log_file_1a985fac079d3d70822468aa3df85694ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LogFile::init</definition>
        <argsstring>(string file_name_in)</argsstring>
        <name>init</name>
        <param>
          <type>string</type>
          <declname>file_name_in</declname>
        </param>
        <briefdescription>
<para>Initialises the <ref refid="class_log_file" kindref="compound">LogFile</ref> by creating a file at the specified location. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file_name_in</parametername>
</parameternamelist>
<parameterdescription>
<para>the file to create </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/LogFile.h" line="80" column="1" bodyfile="necsim/LogFile.cpp" bodystart="75" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_log_file_1ad8acf8bc3a616ad47f43307781ea3c63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LogFile::write</definition>
        <argsstring>(const int &amp;level, string message)</argsstring>
        <name>write</name>
        <param>
          <type>const int &amp;</type>
          <declname>level</declname>
        </param>
        <param>
          <type>string</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Writes the message out to the logfile at the specified logging level. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>the level of logging severity </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message to write out </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/LogFile.h" line="87" column="1" bodyfile="necsim/LogFile.cpp" bodystart="95" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="class_log_file_1a08c10809b0095438671be7603e1a53ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LogFile::write</definition>
        <argsstring>(const int &amp;level, stringstream &amp;message)</argsstring>
        <name>write</name>
        <param>
          <type>const int &amp;</type>
          <declname>level</declname>
        </param>
        <param>
          <type>stringstream &amp;</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Writes the message out to the logfile at the specified logging level. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>the level of logging severity </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message to write out </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/LogFile.h" line="94" column="1" bodyfile="necsim/LogFile.cpp" bodystart="107" bodyend="110"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Contains routines for writing to log files. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="509">
        <label>LogFile</label>
        <link refid="class_log_file"/>
        <childnode refid="510" relation="usage">
          <edgelabel>file_name</edgelabel>
        </childnode>
        <childnode refid="512" relation="usage">
          <edgelabel>levels_map</edgelabel>
        </childnode>
        <childnode refid="513" relation="usage">
          <edgelabel>output_stream</edgelabel>
        </childnode>
      </node>
      <node id="514">
        <label>std::basic_ofstream&lt; char &gt;</label>
        <childnode refid="515" relation="public-inheritance">
        </childnode>
      </node>
      <node id="513">
        <label>std::ofstream</label>
        <childnode refid="514" relation="public-inheritance">
        </childnode>
      </node>
      <node id="511">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="512">
        <label>std::map&lt; int, string &gt;</label>
        <childnode refid="510" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="515">
        <label>std::basic_ostream&lt; Char &gt;</label>
        <childnode refid="516" relation="public-inheritance">
        </childnode>
      </node>
      <node id="516">
        <label>std::basic_ios&lt; Char &gt;</label>
        <childnode refid="517" relation="public-inheritance">
        </childnode>
      </node>
      <node id="517">
        <label>std::ios_base</label>
      </node>
      <node id="510">
        <label>std::string</label>
        <childnode refid="511" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="necsim/LogFile.h" line="45" column="1" bodyfile="necsim/LogFile.h" bodystart="44" bodyend="95"/>
    <listofallmembers>
      <member refid="class_log_file_1a0fcd1e0a15e6c08f147b39dbea2b253c" prot="protected" virt="non-virtual"><scope>LogFile</scope><name>file_name</name></member>
      <member refid="class_log_file_1a985fac079d3d70822468aa3df85694ec" prot="public" virt="non-virtual"><scope>LogFile</scope><name>init</name></member>
      <member refid="class_log_file_1a75e3b5022358adcff29923c0e9116ff4" prot="protected" virt="non-virtual"><scope>LogFile</scope><name>levels_map</name></member>
      <member refid="class_log_file_1ad18ff4b82ec0b081cbfd9556a48194fe" prot="protected" virt="non-virtual"><scope>LogFile</scope><name>LogFile</name></member>
      <member refid="class_log_file_1ad11b3baf5602575c1396f726d3598188" prot="public" virt="non-virtual"><scope>LogFile</scope><name>LogFile</name></member>
      <member refid="class_log_file_1a2658bd3713a4b4300dfb337905c2b5a0" prot="public" virt="non-virtual"><scope>LogFile</scope><name>LogFile</name></member>
      <member refid="class_log_file_1a3556b56361a4f9f1cc83e9c3967096ab" prot="protected" virt="non-virtual"><scope>LogFile</scope><name>operator=</name></member>
      <member refid="class_log_file_1aae3e784ed5a2414b57d46940a2995c82" prot="protected" virt="non-virtual"><scope>LogFile</scope><name>output_stream</name></member>
      <member refid="class_log_file_1ad8acf8bc3a616ad47f43307781ea3c63" prot="public" virt="non-virtual"><scope>LogFile</scope><name>write</name></member>
      <member refid="class_log_file_1a08c10809b0095438671be7603e1a53ae" prot="public" virt="non-virtual"><scope>LogFile</scope><name>write</name></member>
      <member refid="class_log_file_1a440a7de2dcbb9facb68e56dc47cb9dea" prot="public" virt="non-virtual"><scope>LogFile</scope><name>~LogFile</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
