<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="structnecsim_1_1_community_parameters" kind="struct" language="C++" prot="public">
    <compoundname>necsim::CommunityParameters</compoundname>
    <includes refid="parameters_8h" local="no">parameters.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structnecsim_1_1_community_parameters_1a9caf64cd6b4a329806aaa3ac6bffb986" prot="public" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long necsim::CommunityParameters::reference</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/parameters.h" line="46" column="1" bodyfile="necsim/parameters.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnecsim_1_1_community_parameters_1a832a18451b10327392d8ba7ebe4f9325" prot="public" static="no" mutable="no">
        <type>long double</type>
        <definition>long double necsim::CommunityParameters::speciation_rate</definition>
        <argsstring></argsstring>
        <name>speciation_rate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/parameters.h" line="47" column="1" bodyfile="necsim/parameters.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnecsim_1_1_community_parameters_1a62005c68406ea9f4065b6a3bcb727b96" prot="public" static="no" mutable="no">
        <type>long double</type>
        <definition>long double necsim::CommunityParameters::time</definition>
        <argsstring></argsstring>
        <name>time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/parameters.h" line="48" column="1" bodyfile="necsim/parameters.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnecsim_1_1_community_parameters_1a09d7a09ac3ce7da3c9bdc0eeded9f486" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool necsim::CommunityParameters::fragment</definition>
        <argsstring></argsstring>
        <name>fragment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/parameters.h" line="49" column="1" bodyfile="necsim/parameters.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnecsim_1_1_community_parameters_1a3e08623e17879e2c01f6972e80300d37" prot="public" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long necsim::CommunityParameters::metacommunity_reference</definition>
        <argsstring></argsstring>
        <name>metacommunity_reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/parameters.h" line="50" column="1" bodyfile="necsim/parameters.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnecsim_1_1_community_parameters_1aba7a456075731885585cf5d1ce152fa9" prot="public" static="no" mutable="no">
        <type><ref refid="structnecsim_1_1_protracted_speciation_parameters" kindref="compound">ProtractedSpeciationParameters</ref></type>
        <definition>ProtractedSpeciationParameters necsim::CommunityParameters::protracted_parameters</definition>
        <argsstring></argsstring>
        <name>protracted_parameters</name>
        <briefdescription>
<para>The protracted speciation parameters for this object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/parameters.h" line="55" column="1" bodyfile="necsim/parameters.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnecsim_1_1_community_parameters_1a8b4172d0d3373bab14b84af9442590e8" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool necsim::CommunityParameters::updated</definition>
        <argsstring></argsstring>
        <name>updated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/parameters.h" line="56" column="1" bodyfile="necsim/parameters.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structnecsim_1_1_community_parameters_1acc67145423b11963c87fc74cd7f5efc9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>necsim::CommunityParameters::CommunityParameters</definition>
        <argsstring>()</argsstring>
        <name>CommunityParameters</name>
        <briefdescription>
<para>Default constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/parameters.h" line="61" column="1" bodyfile="necsim/parameters.h" bodystart="61" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="structnecsim_1_1_community_parameters_1aef23a7047aecf90631d16cfe758f4bf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>necsim::CommunityParameters::~CommunityParameters</definition>
        <argsstring>()=default</argsstring>
        <name>~CommunityParameters</name>
        <briefdescription>
<para>Trivial destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/parameters.h" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structnecsim_1_1_community_parameters_1aa8bbddf81df83e1513053cf3e9d89f47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>necsim::CommunityParameters::CommunityParameters</definition>
        <argsstring>(unsigned long reference_in, long double speciation_rate_in, long double time_in, bool fragment_in, unsigned long metacommunity_reference_in, const ProtractedSpeciationParameters &amp;protracted_params)</argsstring>
        <name>CommunityParameters</name>
        <param>
          <type>unsigned long</type>
          <declname>reference_in</declname>
        </param>
        <param>
          <type>long double</type>
          <declname>speciation_rate_in</declname>
        </param>
        <param>
          <type>long double</type>
          <declname>time_in</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fragment_in</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>metacommunity_reference_in</declname>
        </param>
        <param>
          <type>const <ref refid="structnecsim_1_1_protracted_speciation_parameters" kindref="compound">ProtractedSpeciationParameters</ref> &amp;</type>
          <declname>protracted_params</declname>
        </param>
        <briefdescription>
<para>Constructor for <ref refid="structnecsim_1_1_community_parameters" kindref="compound">CommunityParameters</ref>, for storing a pairs of previous calculations, requiring a speciation rate and a time. Overloaded version with setup routines. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reference_in</parametername>
</parameternamelist>
<parameterdescription>
<para>the reference to set for this <ref refid="structnecsim_1_1_community_parameters" kindref="compound">CommunityParameters</ref> set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>speciation_rate_in</parametername>
</parameternamelist>
<parameterdescription>
<para>the speciation rate of the previous calculation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time_in</parametername>
</parameternamelist>
<parameterdescription>
<para>the time of the previous calculation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment_in</parametername>
</parameternamelist>
<parameterdescription>
<para>bool of whether fragments were used in the previous calculation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>metacommunity_reference_in</parametername>
</parameternamelist>
<parameterdescription>
<para>the metacommunity reference, or 0 for no metacommunity </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>protracted_params</parametername>
</parameternamelist>
<parameterdescription>
<para>protracted speciation parameters to add </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/parameters.h" line="81" column="1" bodyfile="necsim/parameters.cpp" bodystart="15" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="structnecsim_1_1_community_parameters_1a01cf8be805c6bc139c606b84892203dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void necsim::CommunityParameters::setup</definition>
        <argsstring>(unsigned long reference_in, long double speciation_rate_in, long double time_in, bool fragment_in, unsigned long metacommunity_reference_in, const ProtractedSpeciationParameters &amp;protracted_params)</argsstring>
        <name>setup</name>
        <param>
          <type>unsigned long</type>
          <declname>reference_in</declname>
        </param>
        <param>
          <type>long double</type>
          <declname>speciation_rate_in</declname>
        </param>
        <param>
          <type>long double</type>
          <declname>time_in</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fragment_in</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>metacommunity_reference_in</declname>
        </param>
        <param>
          <type>const <ref refid="structnecsim_1_1_protracted_speciation_parameters" kindref="compound">ProtractedSpeciationParameters</ref> &amp;</type>
          <declname>protracted_params</declname>
        </param>
        <briefdescription>
<para>Sets up the <ref refid="structnecsim_1_1_community_parameters" kindref="compound">CommunityParameters</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reference_in</parametername>
</parameternamelist>
<parameterdescription>
<para>the reference to set for this <ref refid="structnecsim_1_1_community_parameters" kindref="compound">CommunityParameters</ref> set </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>speciation_rate_in</parametername>
</parameternamelist>
<parameterdescription>
<para>the speciation rate of the previous calculation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time_in</parametername>
</parameternamelist>
<parameterdescription>
<para>the time of the previous calculation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment_in</parametername>
</parameternamelist>
<parameterdescription>
<para>bool of whether fragments were used in the previous calculation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>metacommunity_reference_in</parametername>
</parameternamelist>
<parameterdescription>
<para>the metacommunity reference, or 0 for no metacommunity </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>protracted_params</parametername>
</parameternamelist>
<parameterdescription>
<para>protracted speciation parameters to add </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/parameters.h" line="94" column="1" bodyfile="necsim/parameters.cpp" bodystart="23" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="structnecsim_1_1_community_parameters_1a6cf1b10ab82cddeefa5d75916dbbd5b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool necsim::CommunityParameters::compare</definition>
        <argsstring>(long double speciation_rate_in, long double time_in, bool fragment_in, unsigned long metacommunity_reference_in, const ProtractedSpeciationParameters &amp;protracted_params)</argsstring>
        <name>compare</name>
        <param>
          <type>long double</type>
          <declname>speciation_rate_in</declname>
        </param>
        <param>
          <type>long double</type>
          <declname>time_in</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fragment_in</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>metacommunity_reference_in</declname>
        </param>
        <param>
          <type>const <ref refid="structnecsim_1_1_protracted_speciation_parameters" kindref="compound">ProtractedSpeciationParameters</ref> &amp;</type>
          <declname>protracted_params</declname>
        </param>
        <briefdescription>
<para>Compare these set of parameters with the input set. If they match, return true, otherwise return false. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>speciation_rate_in</parametername>
</parameternamelist>
<parameterdescription>
<para>speciation rate to compare with stored community parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time_in</parametername>
</parameternamelist>
<parameterdescription>
<para>time to compare with stored community parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment_in</parametername>
</parameternamelist>
<parameterdescription>
<para>if fragments are being used on this database </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>metacommunity_reference_in</parametername>
</parameternamelist>
<parameterdescription>
<para>metacommunity reference to compare with stored community parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>protracted_params</parametername>
</parameternamelist>
<parameterdescription>
<para>the minimum number of generations required for existance before speciation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>protracted_params</parametername>
</parameternamelist>
<parameterdescription>
<para>protracted speciation parameters to add </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/parameters.h" line="107" column="1" bodyfile="necsim/parameters.cpp" bodystart="37" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="structnecsim_1_1_community_parameters_1a416e4ed8e2dd99cf5760956570cb9903" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool necsim::CommunityParameters::compare</definition>
        <argsstring>(long double speciation_rate_in, long double time_in, unsigned long metacommunity_reference_in, const ProtractedSpeciationParameters &amp;protracted_params)</argsstring>
        <name>compare</name>
        <param>
          <type>long double</type>
          <declname>speciation_rate_in</declname>
        </param>
        <param>
          <type>long double</type>
          <declname>time_in</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>metacommunity_reference_in</declname>
        </param>
        <param>
          <type>const <ref refid="structnecsim_1_1_protracted_speciation_parameters" kindref="compound">ProtractedSpeciationParameters</ref> &amp;</type>
          <declname>protracted_params</declname>
        </param>
        <briefdescription>
<para>Compare these set of parameters with the input set. If they match, return true, otherwise return false Overloaded version ignoring the fragments parameter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>speciation_rate_in</parametername>
</parameternamelist>
<parameterdescription>
<para>speciation rate to compare with stored community parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time_in</parametername>
</parameternamelist>
<parameterdescription>
<para>time to compare with stored community parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>metacommunity_reference_in</parametername>
</parameternamelist>
<parameterdescription>
<para>metacommunity reference to compare with stored community parameter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>protracted_params</parametername>
</parameternamelist>
<parameterdescription>
<para>protracted speciation parameters to add </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/parameters.h" line="119" column="1" bodyfile="necsim/parameters.cpp" bodystart="57" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="structnecsim_1_1_community_parameters_1a70c3e4d7693db793c7c3bbed1e65927f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool necsim::CommunityParameters::compare</definition>
        <argsstring>(unsigned long reference_in)</argsstring>
        <name>compare</name>
        <param>
          <type>unsigned long</type>
          <declname>reference_in</declname>
        </param>
        <briefdescription>
<para>Checks if the supplied reference is the same in the community parameter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reference_in</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/parameters.h" line="127" column="1" bodyfile="necsim/parameters.cpp" bodystart="66" bodyend="69"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A struct for containing pairs of previous calculations to make sure that aren&apos;t repeated. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="64">
        <label>necsim::ProtractedSpeciationParameters</label>
        <link refid="structnecsim_1_1_protracted_speciation_parameters"/>
      </node>
      <node id="63">
        <label>necsim::CommunityParameters</label>
        <link refid="structnecsim_1_1_community_parameters"/>
        <childnode refid="64" relation="usage">
          <edgelabel>protracted_parameters</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="necsim/parameters.h" line="45" column="1" bodyfile="necsim/parameters.h" bodystart="44" bodyend="128"/>
    <listofallmembers>
      <member refid="structnecsim_1_1_community_parameters_1acc67145423b11963c87fc74cd7f5efc9" prot="public" virt="non-virtual"><scope>necsim::CommunityParameters</scope><name>CommunityParameters</name></member>
      <member refid="structnecsim_1_1_community_parameters_1aa8bbddf81df83e1513053cf3e9d89f47" prot="public" virt="non-virtual"><scope>necsim::CommunityParameters</scope><name>CommunityParameters</name></member>
      <member refid="structnecsim_1_1_community_parameters_1a6cf1b10ab82cddeefa5d75916dbbd5b7" prot="public" virt="non-virtual"><scope>necsim::CommunityParameters</scope><name>compare</name></member>
      <member refid="structnecsim_1_1_community_parameters_1a416e4ed8e2dd99cf5760956570cb9903" prot="public" virt="non-virtual"><scope>necsim::CommunityParameters</scope><name>compare</name></member>
      <member refid="structnecsim_1_1_community_parameters_1a70c3e4d7693db793c7c3bbed1e65927f" prot="public" virt="non-virtual"><scope>necsim::CommunityParameters</scope><name>compare</name></member>
      <member refid="structnecsim_1_1_community_parameters_1a09d7a09ac3ce7da3c9bdc0eeded9f486" prot="public" virt="non-virtual"><scope>necsim::CommunityParameters</scope><name>fragment</name></member>
      <member refid="structnecsim_1_1_community_parameters_1a3e08623e17879e2c01f6972e80300d37" prot="public" virt="non-virtual"><scope>necsim::CommunityParameters</scope><name>metacommunity_reference</name></member>
      <member refid="structnecsim_1_1_community_parameters_1aba7a456075731885585cf5d1ce152fa9" prot="public" virt="non-virtual"><scope>necsim::CommunityParameters</scope><name>protracted_parameters</name></member>
      <member refid="structnecsim_1_1_community_parameters_1a9caf64cd6b4a329806aaa3ac6bffb986" prot="public" virt="non-virtual"><scope>necsim::CommunityParameters</scope><name>reference</name></member>
      <member refid="structnecsim_1_1_community_parameters_1a01cf8be805c6bc139c606b84892203dc" prot="public" virt="non-virtual"><scope>necsim::CommunityParameters</scope><name>setup</name></member>
      <member refid="structnecsim_1_1_community_parameters_1a832a18451b10327392d8ba7ebe4f9325" prot="public" virt="non-virtual"><scope>necsim::CommunityParameters</scope><name>speciation_rate</name></member>
      <member refid="structnecsim_1_1_community_parameters_1a62005c68406ea9f4065b6a3bcb727b96" prot="public" virt="non-virtual"><scope>necsim::CommunityParameters</scope><name>time</name></member>
      <member refid="structnecsim_1_1_community_parameters_1a8b4172d0d3373bab14b84af9442590e8" prot="public" virt="non-virtual"><scope>necsim::CommunityParameters</scope><name>updated</name></member>
      <member refid="structnecsim_1_1_community_parameters_1aef23a7047aecf90631d16cfe758f4bf2" prot="public" virt="non-virtual"><scope>necsim::CommunityParameters</scope><name>~CommunityParameters</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
