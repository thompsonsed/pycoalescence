<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_species_grid" kind="class" language="C++" prot="public">
    <compoundname>SpeciesGrid</compoundname>
    <basecompoundref refid="class_matrix" prot="public" virt="non-virtual">Matrix&lt; SpeciesList &gt;</basecompoundref>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_matrix_1a341aaedcfaac978957087bd0467dc527" prot="protected" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long Matrix&lt; SpeciesList  &gt;::numCols</definition>
        <argsstring></argsstring>
        <name>numCols</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Matrix.h" line="226" column="1" bodyfile="necsim/Matrix.h" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_matrix_1ac1e96667d48c7845708f978ddd17475d" prot="protected" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long Matrix&lt; SpeciesList  &gt;::numRows</definition>
        <argsstring></argsstring>
        <name>numRows</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Matrix.h" line="226" column="1" bodyfile="necsim/Matrix.h" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_matrix_1a7a143ae112112155c9622ba17dc434c7" prot="protected" static="no" mutable="no">
        <type><ref refid="class_row" kindref="compound">Row</ref>&lt; <ref refid="class_species_list" kindref="compound">SpeciesList</ref> &gt; *</type>
        <definition>Row&lt;SpeciesList &gt;* Matrix&lt; SpeciesList  &gt;::matrix</definition>
        <argsstring></argsstring>
        <name>matrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Matrix.h" line="228" column="1" bodyfile="necsim/Matrix.h" bodystart="228" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_matrix_1aa393296d4132d7aafc4e236ddfe59f06" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Matrix&lt; SpeciesList  &gt;::setSize</definition>
        <argsstring>(unsigned long rows, unsigned long cols)</argsstring>
        <name>setSize</name>
        <param>
          <type>unsigned long</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>cols</declname>
        </param>
        <briefdescription>
<para>Sets the matrix size. Similar concept to that for Rows. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rows</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of rows. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cols</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of columns. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Matrix.h" line="269" column="1" bodyfile="necsim/Matrix.h" bodystart="269" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="class_matrix_1a9b4ce445c65dcea66c66dda875cc39d8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long Matrix&lt; SpeciesList  &gt;::getCols</definition>
        <argsstring>() const</argsstring>
        <name>getCols</name>
        <briefdescription>
<para>Getter for the number of columns. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the number of columns. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Matrix.h" line="295" column="1" bodyfile="necsim/Matrix.h" bodystart="295" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="class_matrix_1a442879db6473eeab202928dc47992206" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long Matrix&lt; SpeciesList  &gt;::getRows</definition>
        <argsstring>() const</argsstring>
        <name>getRows</name>
        <briefdescription>
<para>Getter for the number of rows. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the number of rows. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Matrix.h" line="304" column="1" bodyfile="necsim/Matrix.h" bodystart="304" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="class_matrix_1ae7e14b4bd8bb570260a4e578e4a601b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_row" kindref="compound">Row</ref>&lt; <ref refid="class_species_list" kindref="compound">SpeciesList</ref> &gt; &amp;</type>
        <definition>Row&lt;SpeciesList &gt;&amp; Matrix&lt; SpeciesList  &gt;::operator[]</definition>
        <argsstring>(unsigned long index)</argsstring>
        <name>operator[]</name>
        <param>
          <type>unsigned long</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Overoads the [] operator for <ref refid="class_matrix" kindref="compound">Matrix</ref>. Allows referencing of a value i,j using <ref refid="class_matrix" kindref="compound">Matrix</ref>[i][j]. Includes error checking for if the indices are out of range of the matrix. Note that this functionality has been altered since the original file generation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the row number to get the value from. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the matrix row object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Matrix.h" line="317" column="1" bodyfile="necsim/Matrix.h" bodystart="317" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="class_matrix_1a311f3649e41cb4a3155f3f71a65829cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_matrix" kindref="compound">Matrix</ref></type>
        <definition>const Matrix Matrix&lt; SpeciesList  &gt;::operator+</definition>
        <argsstring>(const Matrix &amp;m)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="class_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Overloading the + operator. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>the matrix to add to this matrix. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the matrix object which is the sum of the two matrices. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Matrix.h" line="352" column="1" bodyfile="necsim/Matrix.h" bodystart="352" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="class_matrix_1a08e75978ea8288083ef36f53b4ac115d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_matrix" kindref="compound">Matrix</ref></type>
        <definition>const Matrix Matrix&lt; SpeciesList  &gt;::operator-</definition>
        <argsstring>(const Matrix &amp;m)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="class_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Overloading the - operator. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>the matrix to subtract from this matrix. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the matrix object which is the subtraction of the two matrices. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Matrix.h" line="389" column="1" bodyfile="necsim/Matrix.h" bodystart="389" bodyend="417"/>
      </memberdef>
      <memberdef kind="function" id="class_matrix_1a480a72298ae1fc8443b0edfaa66d7c46" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_matrix" kindref="compound">Matrix</ref> &amp;</type>
        <definition>Matrix&amp; Matrix&lt; SpeciesList  &gt;::operator+=</definition>
        <argsstring>(const Matrix &amp;m)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="class_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Overloading the += operator so that the new object is written to the current object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="class_matrix" kindref="compound">Matrix</ref> object to add to this matrix. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Matrix.h" line="423" column="1" bodyfile="necsim/Matrix.h" bodystart="423" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="class_matrix_1a0e459fd035b2435ea016dc93c55ccac0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_matrix" kindref="compound">Matrix</ref> &amp;</type>
        <definition>Matrix&amp; Matrix&lt; SpeciesList  &gt;::operator-=</definition>
        <argsstring>(const Matrix &amp;m)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="class_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Overloading the -= operator so that the new object is written to the current object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="class_matrix" kindref="compound">Matrix</ref> object to subtract from this matrix. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Matrix.h" line="457" column="1" bodyfile="necsim/Matrix.h" bodystart="457" bodyend="484"/>
      </memberdef>
      <memberdef kind="function" id="class_matrix_1ac4e94b307c56a15fb47a9255855f94a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_matrix" kindref="compound">Matrix</ref></type>
        <definition>const Matrix Matrix&lt; SpeciesList  &gt;::operator*</definition>
        <argsstring>(const double s)</argsstring>
        <name>operator*</name>
        <param>
          <type>const double</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Overloading the * operator for scaling. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>the constant to scale the matrix by. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the scaled matrix. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Matrix.h" line="491" column="1" bodyfile="necsim/Matrix.h" bodystart="491" bodyend="502"/>
      </memberdef>
      <memberdef kind="function" id="class_matrix_1ac396cdd2d98e1b4d99f7e17c1c26b1ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_matrix" kindref="compound">Matrix</ref></type>
        <definition>const Matrix Matrix&lt; SpeciesList  &gt;::operator*</definition>
        <argsstring>(Matrix &amp;m)</argsstring>
        <name>operator*</name>
        <param>
          <type><ref refid="class_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Overloading the * operator for matrix multiplication. Multiplies each value in the matrix with its corresponding value in the other matrix. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>the matrix to multiply with </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the product of each ith,jth value of the matrix. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Matrix.h" line="511" column="1" bodyfile="necsim/Matrix.h" bodystart="511" bodyend="535"/>
      </memberdef>
      <memberdef kind="function" id="class_matrix_1ae511e2f5874e7602fc968541efeefca1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Matrix&lt; SpeciesList  &gt;::setValue</definition>
        <argsstring>(const unsigned long &amp;x, const unsigned long &amp;y, const char *value)</argsstring>
        <name>setValue</name>
        <param>
          <type>const unsigned long &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned long &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the value at the specified indices, including handling type conversion from char to the template class. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the x index. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>the y index. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Matrix.h" line="606" column="1" bodyfile="necsim/Matrix.h" bodystart="606" bodyend="609"/>
      </memberdef>
      <memberdef kind="function" id="class_matrix_1a2476517be70c810ad586d0f0cf4ec121" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Matrix&lt; SpeciesList  &gt;::import</definition>
        <argsstring>(const string &amp;filename)</argsstring>
        <name>import</name>
        <param>
          <type>const string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Imports the matrix from a csv file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>runtime_error</parametername>
</parameternamelist>
<parameterdescription>
<para>if type detection for the filename fails. </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>the file to import. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Matrix.h" line="617" column="1" bodyfile="necsim/Matrix.h" bodystart="617" bodyend="624"/>
      </memberdef>
      <memberdef kind="function" id="class_matrix_1a0a5d9135e9807b81ddc3cf05e777a902" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Matrix&lt; SpeciesList  &gt;::importCsv</definition>
        <argsstring>(const string &amp;filename)</argsstring>
        <name>importCsv</name>
        <param>
          <type>const string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Imports the matrix from a csv file using the fast-csv-parser method. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>the path to the file to import. Imports the matrix from a csv file using the standard, slower method. </para></parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="deprecated_1_deprecated000003"><xreftitle>Deprecated</xreftitle><xrefdescription><para>this function should not be used any more as it is much slower. </para></xrefdescription></xrefsect><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>the path to the file to import. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the csv can be imported. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Matrix.h" line="709" column="1" bodyfile="necsim/Matrix.h" bodystart="709" bodyend="751"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1045">
        <label>SpeciesGrid</label>
        <link refid="class_species_grid"/>
        <childnode refid="1046" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1046">
        <label>Matrix&lt; SpeciesList &gt;</label>
        <link refid="class_matrix"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1049">
        <label>Row&lt; SpeciesList &gt;</label>
        <link refid="class_row"/>
      </node>
      <node id="1047">
        <label>SpeciesGrid</label>
        <link refid="class_species_grid"/>
        <childnode refid="1048" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1048">
        <label>Matrix&lt; SpeciesList &gt;</label>
        <link refid="class_matrix"/>
        <childnode refid="1049" relation="usage">
          <edgelabel>matrix</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="necsim/SpeciesGrid.h" line="11" column="1" bodyfile="necsim/SpeciesGrid.h" bodystart="10" bodyend="14"/>
    <listofallmembers>
      <member refid="class_matrix_1a9b4ce445c65dcea66c66dda875cc39d8" prot="public" virt="non-virtual"><scope>SpeciesGrid</scope><name>getCols</name></member>
      <member refid="class_matrix_1a442879db6473eeab202928dc47992206" prot="public" virt="non-virtual"><scope>SpeciesGrid</scope><name>getRows</name></member>
      <member refid="class_matrix_1a2476517be70c810ad586d0f0cf4ec121" prot="public" virt="virtual"><scope>SpeciesGrid</scope><name>import</name></member>
      <member refid="class_matrix_1a0a5d9135e9807b81ddc3cf05e777a902" prot="public" virt="non-virtual"><scope>SpeciesGrid</scope><name>importCsv</name></member>
      <member refid="class_matrix_1a53f60218c002f2bb454695a1fc35c5d3" prot="public" virt="non-virtual"><scope>SpeciesGrid</scope><name>Matrix</name></member>
      <member refid="class_matrix_1a3796b4f32dc8e11f908a90fd3dd39c45" prot="public" virt="non-virtual"><scope>SpeciesGrid</scope><name>Matrix</name></member>
      <member refid="class_matrix_1a7a143ae112112155c9622ba17dc434c7" prot="protected" virt="non-virtual"><scope>SpeciesGrid</scope><name>matrix</name></member>
      <member refid="class_matrix_1a341aaedcfaac978957087bd0467dc527" prot="protected" virt="non-virtual"><scope>SpeciesGrid</scope><name>numCols</name></member>
      <member refid="class_matrix_1ac1e96667d48c7845708f978ddd17475d" prot="protected" virt="non-virtual"><scope>SpeciesGrid</scope><name>numRows</name></member>
      <member refid="class_matrix_1ac4e94b307c56a15fb47a9255855f94a9" prot="public" virt="non-virtual"><scope>SpeciesGrid</scope><name>operator*</name></member>
      <member refid="class_matrix_1ac396cdd2d98e1b4d99f7e17c1c26b1ec" prot="public" virt="non-virtual"><scope>SpeciesGrid</scope><name>operator*</name></member>
      <member refid="class_matrix_1a311f3649e41cb4a3155f3f71a65829cb" prot="public" virt="non-virtual"><scope>SpeciesGrid</scope><name>operator+</name></member>
      <member refid="class_matrix_1a480a72298ae1fc8443b0edfaa66d7c46" prot="public" virt="non-virtual"><scope>SpeciesGrid</scope><name>operator+=</name></member>
      <member refid="class_matrix_1a08e75978ea8288083ef36f53b4ac115d" prot="public" virt="non-virtual"><scope>SpeciesGrid</scope><name>operator-</name></member>
      <member refid="class_matrix_1a0e459fd035b2435ea016dc93c55ccac0" prot="public" virt="non-virtual"><scope>SpeciesGrid</scope><name>operator-=</name></member>
      <member refid="class_matrix_1a94508f84ba0d62e81aa8d508aa43f1ec" prot="public" virt="non-virtual"><scope>SpeciesGrid</scope><name>operator=</name></member>
      <member refid="class_matrix_1ae7e14b4bd8bb570260a4e578e4a601b7" prot="public" virt="non-virtual"><scope>SpeciesGrid</scope><name>operator[]</name></member>
      <member refid="class_matrix_1aa393296d4132d7aafc4e236ddfe59f06" prot="public" virt="non-virtual"><scope>SpeciesGrid</scope><name>setSize</name></member>
      <member refid="class_matrix_1ae511e2f5874e7602fc968541efeefca1" prot="public" virt="non-virtual"><scope>SpeciesGrid</scope><name>setValue</name></member>
      <member refid="class_matrix_1a91aa704de674203e96aece9e1955ccd3" prot="public" virt="non-virtual"><scope>SpeciesGrid</scope><name>~Matrix</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
