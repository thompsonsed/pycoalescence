<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classio_1_1detail_1_1_asynchronous_reader" kind="class" language="C++" prot="public">
    <compoundname>io::detail::AsynchronousReader</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classio_1_1detail_1_1_asynchronous_reader_1a6fd9551f8df07ec6a9ce32f8f33b362d" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classio_1_1_byte_source_base" kindref="compound">ByteSourceBase</ref> &gt;</type>
        <definition>std::unique_ptr&lt;ByteSourceBase&gt; io::detail::AsynchronousReader::byte_source</definition>
        <argsstring></argsstring>
        <name>byte_source</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="273" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classio_1_1detail_1_1_asynchronous_reader_1a729cf01cc703a42b6010dd5bec4a14f2" prot="private" static="no" mutable="no">
        <type>std::thread</type>
        <definition>std::thread io::detail::AsynchronousReader::worker</definition>
        <argsstring></argsstring>
        <name>worker</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="275" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classio_1_1detail_1_1_asynchronous_reader_1a63031e519f616e839031529872bfa164" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool io::detail::AsynchronousReader::termination_requested</definition>
        <argsstring></argsstring>
        <name>termination_requested</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="277" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classio_1_1detail_1_1_asynchronous_reader_1a6cb2b4a80454dc3b459a378693423a78" prot="private" static="no" mutable="no">
        <type>std::exception_ptr</type>
        <definition>std::exception_ptr io::detail::AsynchronousReader::read_error</definition>
        <argsstring></argsstring>
        <name>read_error</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="278" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="278" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classio_1_1detail_1_1_asynchronous_reader_1a1b755d751a33453ddaff7974bed29434" prot="private" static="no" mutable="no">
        <type>char *</type>
        <definition>char* io::detail::AsynchronousReader::buffer</definition>
        <argsstring></argsstring>
        <name>buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="279" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classio_1_1detail_1_1_asynchronous_reader_1a9bde5d9c5268af659cbb623bea6715fe" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int io::detail::AsynchronousReader::desired_byte_count</definition>
        <argsstring></argsstring>
        <name>desired_byte_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="280" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="280" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classio_1_1detail_1_1_asynchronous_reader_1ab7aa18093deb7ae67f1c0a699dd4ef93" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int io::detail::AsynchronousReader::read_byte_count</definition>
        <argsstring></argsstring>
        <name>read_byte_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="281" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="281" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classio_1_1detail_1_1_asynchronous_reader_1a4fdba0a72e02dd5168b540795acac35e" prot="private" static="no" mutable="no">
        <type>std::mutex</type>
        <definition>std::mutex io::detail::AsynchronousReader::lock</definition>
        <argsstring></argsstring>
        <name>lock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="283" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classio_1_1detail_1_1_asynchronous_reader_1a1ad4bce56a87bb95bae7a21f927c8db0" prot="private" static="no" mutable="no">
        <type>std::condition_variable</type>
        <definition>std::condition_variable io::detail::AsynchronousReader::read_finished_condition</definition>
        <argsstring></argsstring>
        <name>read_finished_condition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="284" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classio_1_1detail_1_1_asynchronous_reader_1aaa5c6c774868149377cde2f8857d223d" prot="private" static="no" mutable="no">
        <type>std::condition_variable</type>
        <definition>std::condition_variable io::detail::AsynchronousReader::read_requested_condition</definition>
        <argsstring></argsstring>
        <name>read_requested_condition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="285" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="285" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classio_1_1detail_1_1_asynchronous_reader_1a12ed45f881a671b473d95ded7ad1474c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void io::detail::AsynchronousReader::init</definition>
        <argsstring>(std::unique_ptr&lt; ByteSourceBase &gt;arg_byte_source)</argsstring>
        <name>init</name>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classio_1_1_byte_source_base" kindref="compound">ByteSourceBase</ref> &gt;</type>
          <declname>arg_byte_source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="202" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="202" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="classio_1_1detail_1_1_asynchronous_reader_1abad9fa88bd5994f4c7a6362138737eb3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool io::detail::AsynchronousReader::is_valid</definition>
        <argsstring>() const </argsstring>
        <name>is_valid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="235" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="235" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classio_1_1detail_1_1_asynchronous_reader_1a9818851dbb994042d0d84183220e71c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void io::detail::AsynchronousReader::start_read</definition>
        <argsstring>(char *arg_buffer, int arg_desired_byte_count)</argsstring>
        <name>start_read</name>
        <param>
          <type>char *</type>
          <declname>arg_buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>arg_desired_byte_count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="239" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="239" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="classio_1_1detail_1_1_asynchronous_reader_1a94520530423e9bfeb04c23ea4e3a8786" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int io::detail::AsynchronousReader::finish_read</definition>
        <argsstring>()</argsstring>
        <name>finish_read</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="247" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="247" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="classio_1_1detail_1_1_asynchronous_reader_1a284dd807219eb954c35de4379822c02b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>io::detail::AsynchronousReader::~AsynchronousReader</definition>
        <argsstring>()</argsstring>
        <name>~AsynchronousReader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="261" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="261" bodyend="270"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="necsim/fast-cpp-csv-parser2/csv.h" line="200" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="200" bodyend="286"/>
    <listofallmembers>
      <member refid="classio_1_1detail_1_1_asynchronous_reader_1a1b755d751a33453ddaff7974bed29434" prot="private" virt="non-virtual"><scope>io::detail::AsynchronousReader</scope><name>buffer</name></member>
      <member refid="classio_1_1detail_1_1_asynchronous_reader_1a6fd9551f8df07ec6a9ce32f8f33b362d" prot="private" virt="non-virtual"><scope>io::detail::AsynchronousReader</scope><name>byte_source</name></member>
      <member refid="classio_1_1detail_1_1_asynchronous_reader_1a9bde5d9c5268af659cbb623bea6715fe" prot="private" virt="non-virtual"><scope>io::detail::AsynchronousReader</scope><name>desired_byte_count</name></member>
      <member refid="classio_1_1detail_1_1_asynchronous_reader_1a94520530423e9bfeb04c23ea4e3a8786" prot="public" virt="non-virtual"><scope>io::detail::AsynchronousReader</scope><name>finish_read</name></member>
      <member refid="classio_1_1detail_1_1_asynchronous_reader_1a12ed45f881a671b473d95ded7ad1474c" prot="public" virt="non-virtual"><scope>io::detail::AsynchronousReader</scope><name>init</name></member>
      <member refid="classio_1_1detail_1_1_asynchronous_reader_1abad9fa88bd5994f4c7a6362138737eb3" prot="public" virt="non-virtual"><scope>io::detail::AsynchronousReader</scope><name>is_valid</name></member>
      <member refid="classio_1_1detail_1_1_asynchronous_reader_1a4fdba0a72e02dd5168b540795acac35e" prot="private" virt="non-virtual"><scope>io::detail::AsynchronousReader</scope><name>lock</name></member>
      <member refid="classio_1_1detail_1_1_asynchronous_reader_1ab7aa18093deb7ae67f1c0a699dd4ef93" prot="private" virt="non-virtual"><scope>io::detail::AsynchronousReader</scope><name>read_byte_count</name></member>
      <member refid="classio_1_1detail_1_1_asynchronous_reader_1a6cb2b4a80454dc3b459a378693423a78" prot="private" virt="non-virtual"><scope>io::detail::AsynchronousReader</scope><name>read_error</name></member>
      <member refid="classio_1_1detail_1_1_asynchronous_reader_1a1ad4bce56a87bb95bae7a21f927c8db0" prot="private" virt="non-virtual"><scope>io::detail::AsynchronousReader</scope><name>read_finished_condition</name></member>
      <member refid="classio_1_1detail_1_1_asynchronous_reader_1aaa5c6c774868149377cde2f8857d223d" prot="private" virt="non-virtual"><scope>io::detail::AsynchronousReader</scope><name>read_requested_condition</name></member>
      <member refid="classio_1_1detail_1_1_asynchronous_reader_1a9818851dbb994042d0d84183220e71c6" prot="public" virt="non-virtual"><scope>io::detail::AsynchronousReader</scope><name>start_read</name></member>
      <member refid="classio_1_1detail_1_1_asynchronous_reader_1a63031e519f616e839031529872bfa164" prot="private" virt="non-virtual"><scope>io::detail::AsynchronousReader</scope><name>termination_requested</name></member>
      <member refid="classio_1_1detail_1_1_asynchronous_reader_1a729cf01cc703a42b6010dd5bec4a14f2" prot="private" virt="non-virtual"><scope>io::detail::AsynchronousReader</scope><name>worker</name></member>
      <member refid="classio_1_1detail_1_1_asynchronous_reader_1a284dd807219eb954c35de4379822c02b" prot="public" virt="non-virtual"><scope>io::detail::AsynchronousReader</scope><name>~AsynchronousReader</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
