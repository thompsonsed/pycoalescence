<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classnecsim_1_1_tree_node" kind="class" language="C++" prot="public">
    <compoundname>necsim::TreeNode</compoundname>
    <includes refid="_tree_node_8h" local="no">TreeNode.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnecsim_1_1_tree_node_1a25d85bcaa266159336aad852e2b87065" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool necsim::TreeNode::tip</definition>
        <argsstring></argsstring>
        <name>tip</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="35" column="1" bodyfile="necsim/TreeNode.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnecsim_1_1_tree_node_1ab899ba74b9645abf11d3a4d2439f6b2c" prot="private" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long necsim::TreeNode::parent</definition>
        <argsstring></argsstring>
        <name>parent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="39" column="1" bodyfile="necsim/TreeNode.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnecsim_1_1_tree_node_1aa6e399b69e5df0355c6c4fc7effdaca3" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool necsim::TreeNode::speciated</definition>
        <argsstring></argsstring>
        <name>speciated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="44" column="1" bodyfile="necsim/TreeNode.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnecsim_1_1_tree_node_1a07a809cae7914b713578c54e1a6ef98f" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool necsim::TreeNode::does_exist</definition>
        <argsstring></argsstring>
        <name>does_exist</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="46" column="1" bodyfile="necsim/TreeNode.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnecsim_1_1_tree_node_1a74efc9493995ba7bfdf78600b518ffd0" prot="private" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long necsim::TreeNode::species_id</definition>
        <argsstring></argsstring>
        <name>species_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="48" column="1" bodyfile="necsim/TreeNode.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnecsim_1_1_tree_node_1ade74e6fc39effb9a611ff820c6ceac02" prot="private" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long necsim::TreeNode::xpos</definition>
        <argsstring></argsstring>
        <name>xpos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="50" column="1" bodyfile="necsim/TreeNode.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnecsim_1_1_tree_node_1a3b8f32c3d0eab2dc2836d4f662133a18" prot="private" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long necsim::TreeNode::ypos</definition>
        <argsstring></argsstring>
        <name>ypos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="52" column="1" bodyfile="necsim/TreeNode.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnecsim_1_1_tree_node_1a2cf75e49d094dacd3c75087d6d62f22f" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long necsim::TreeNode::xwrap</definition>
        <argsstring></argsstring>
        <name>xwrap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="54" column="1" bodyfile="necsim/TreeNode.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnecsim_1_1_tree_node_1a09800c81ea29c0e3f34284d3a60a0c92" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long necsim::TreeNode::ywrap</definition>
        <argsstring></argsstring>
        <name>ywrap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="56" column="1" bodyfile="necsim/TreeNode.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnecsim_1_1_tree_node_1a8020fc69439651b6d892ef014d0718d9" prot="private" static="no" mutable="no">
        <type>long double</type>
        <definition>long double necsim::TreeNode::speciation_probability</definition>
        <argsstring></argsstring>
        <name>speciation_probability</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="59" column="1" bodyfile="necsim/TreeNode.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnecsim_1_1_tree_node_1ac5c6af595500db8cd15eedec7f893b37" prot="private" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long necsim::TreeNode::generations_existed</definition>
        <argsstring></argsstring>
        <name>generations_existed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="61" column="1" bodyfile="necsim/TreeNode.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnecsim_1_1_tree_node_1ab26ee9f960d6c6d153a1beb1c679c6a4" prot="private" static="no" mutable="no">
        <type>long double</type>
        <definition>long double necsim::TreeNode::generation_added</definition>
        <argsstring></argsstring>
        <name>generation_added</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="63" column="1" bodyfile="necsim/TreeNode.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnecsim_1_1_tree_node_1ac6f3e512181f571b00737888f86367f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>necsim::TreeNode::TreeNode</definition>
        <argsstring>()</argsstring>
        <name>TreeNode</name>
        <briefdescription>
<para>The default constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="68" column="1" bodyfile="necsim/TreeNode.h" bodystart="68" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_tree_node_1a7ec39f31106c6d38f478fbf0877cafca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>necsim::TreeNode::~TreeNode</definition>
        <argsstring>()=default</argsstring>
        <name>~TreeNode</name>
        <briefdescription>
<para>The default destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_tree_node_1a7810233c78eeb60a10f9ee74d5b3f66c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void necsim::TreeNode::setup</definition>
        <argsstring>(bool z, unsigned long xp, unsigned long yp, long xi, long yi)</argsstring>
        <name>setup</name>
        <param>
          <type>bool</type>
          <declname>z</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>xp</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>yp</declname>
        </param>
        <param>
          <type>long</type>
          <declname>xi</declname>
        </param>
        <param>
          <type>long</type>
          <declname>yi</declname>
        </param>
        <briefdescription>
<para>Sets up variables with initial conditions. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>whether this lineage is a tip or not (represents the end of a tree). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xp</parametername>
</parameternamelist>
<parameterdescription>
<para>the x position on the grid. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yp</parametername>
</parameternamelist>
<parameterdescription>
<para>the y position on the grid. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xi</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of wraps in the x dimension. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yi</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of wraps in the y dimension. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="87" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="15" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_tree_node_1a155c8cf6dcbcc0c4ab4ed07ce1c10072" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void necsim::TreeNode::setup</definition>
        <argsstring>(bool z)</argsstring>
        <name>setup</name>
        <param>
          <type>bool</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Sets up variables with initial conditions. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>whether this lineage is a tip or not (represents the end of a tree) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="93" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="32" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_tree_node_1aa75a19ccfbac7aa4327826fe0f778b0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void necsim::TreeNode::setup</definition>
        <argsstring>(const bool &amp;is_tip, const long &amp;xp, const long &amp;yp, const long &amp;xi, const long &amp;yi, const long double &amp;generation)</argsstring>
        <name>setup</name>
        <param>
          <type>const bool &amp;</type>
          <declname>is_tip</declname>
        </param>
        <param>
          <type>const long &amp;</type>
          <declname>xp</declname>
        </param>
        <param>
          <type>const long &amp;</type>
          <declname>yp</declname>
        </param>
        <param>
          <type>const long &amp;</type>
          <declname>xi</declname>
        </param>
        <param>
          <type>const long &amp;</type>
          <declname>yi</declname>
        </param>
        <param>
          <type>const long double &amp;</type>
          <declname>generation</declname>
        </param>
        <briefdescription>
<para>Overloaded <ref refid="classnecsim_1_1_tree_node_1a7810233c78eeb60a10f9ee74d5b3f66c" kindref="member">setup()</ref> function, additionally taking a generation time point. </para>
        </briefdescription>
        <detaileddescription>
<para>Used when creating lineages after the start of the simulation, when the generation is not 0. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>is_tip</parametername>
</parameternamelist>
<parameterdescription>
<para>whether this lineage is a tip or not (represents the end of a tree). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xp</parametername>
</parameternamelist>
<parameterdescription>
<para>the x position on the grid. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yp</parametername>
</parameternamelist>
<parameterdescription>
<para>the y position on the grid. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xi</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of wraps in the x dimension. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yi</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of wraps in the y dimension. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>generation</parametername>
</parameternamelist>
<parameterdescription>
<para>the current generation at creation time. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="106" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="37" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_tree_node_1a1c514db4bf14d7de47e3902c39d0fb74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void necsim::TreeNode::setExistence</definition>
        <argsstring>(bool b)</argsstring>
        <name>setExistence</name>
        <param>
          <type>bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Setter for the existence of the lineage. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>existence boolean. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="113" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="53" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_tree_node_1a00c00b3275edfc916f24bc7589f39cde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void necsim::TreeNode::setParent</definition>
        <argsstring>(unsigned long x)</argsstring>
        <name>setParent</name>
        <param>
          <type>unsigned long</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Setter for the parent reference. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a reference for the parent location. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="119" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_tree_node_1aea881512253b780ce87b154f9263fc66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void necsim::TreeNode::qReset</definition>
        <argsstring>()</argsstring>
        <name>qReset</name>
        <briefdescription>
<para>Resets the lineage. Remove any species ID, existence and speciation record. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="125" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="63" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_tree_node_1ae6de5d8c36806a42f7e3d3008fbc8d6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void necsim::TreeNode::setPosition</definition>
        <argsstring>(long x, long y, long xw, long yw)</argsstring>
        <name>setPosition</name>
        <param>
          <type>long</type>
          <declname>x</declname>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
        </param>
        <param>
          <type>long</type>
          <declname>xw</declname>
        </param>
        <param>
          <type>long</type>
          <declname>yw</declname>
        </param>
        <briefdescription>
<para>Set a new position for the lineage. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the x position on the grid. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>the y position on the grid. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xw</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of wraps in the x dimension. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yw</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of wraps in the y dimension. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="134" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="70" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_tree_node_1a02c29e6f9f017c06c0de0f2440f3fef7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void necsim::TreeNode::setSpec</definition>
        <argsstring>(long double d)</argsstring>
        <name>setSpec</name>
        <param>
          <type>long double</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Setter for the randomly generated number (from NRrand.d0()) for the speciation probability for this lineage. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>the speciation probability. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="140" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="78" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_tree_node_1a4e2873e89e20f406c49b5ed6369b1175" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void necsim::TreeNode::setGenerationRate</definition>
        <argsstring>(unsigned long g)</argsstring>
        <name>setGenerationRate</name>
        <param>
          <type>unsigned long</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>Setter for the number of generations this lineage has existed for. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of generations that the lineage has existed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="146" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="83" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_tree_node_1a9a1b93e56dd4d6b556b926e371a3dc5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void necsim::TreeNode::setGeneration</definition>
        <argsstring>(long double d)</argsstring>
        <name>setGeneration</name>
        <param>
          <type>long double</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Setter for the birth generation timer for the lineage. </para>
        </briefdescription>
        <detaileddescription>
<para>Note that moves that don&apos;t involve coalescence do not create a new Treenode object, and therefore the generation_added does not get updated. However, coalescence events will cause a new Treenode object creation. The lineage birth generation is generally only important for calculating the age of tips. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="157" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_tree_node_1a5b84a54f08c5c912d234a0105fffbb6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void necsim::TreeNode::setSpeciation</definition>
        <argsstring>(bool s)</argsstring>
        <name>setSpeciation</name>
        <param>
          <type>bool</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Setter for the speciation boolean. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>the speciation boolean. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="163" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="93" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_tree_node_1af8721e4116f9db28d826c8b2f4beb494" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void necsim::TreeNode::burnSpecies</definition>
        <argsstring>(unsigned long idin)</argsstring>
        <name>burnSpecies</name>
        <param>
          <type>unsigned long</type>
          <declname>idin</declname>
        </param>
        <briefdescription>
<para>Setter for the species ID. Once set to something other than 0, this cannot be changed with a call to <ref refid="classnecsim_1_1_tree_node_1aea881512253b780ce87b154f9263fc66" kindref="member">qReset()</ref> or <ref refid="classnecsim_1_1_tree_node_1a043e5cf98a475fbf61d20dbe1c0dd35d" kindref="member">resetSpecies()</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idin</parametername>
</parameternamelist>
<parameterdescription>
<para>the species ID. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="170" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="98" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_tree_node_1a0cf1bd9610dea96ae946c5e21984c388" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void necsim::TreeNode::setTip</definition>
        <argsstring>(bool b)</argsstring>
        <name>setTip</name>
        <param>
          <type>bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Setter for the tip boolean. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>the tip boolean. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="176" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="106" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_tree_node_1a043e5cf98a475fbf61d20dbe1c0dd35d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void necsim::TreeNode::resetSpecies</definition>
        <argsstring>()</argsstring>
        <name>resetSpecies</name>
        <briefdescription>
<para>Reset the species ID to 0. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="181" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="111" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_tree_node_1a8e11cbf2050a66cec93f946f33a181ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void necsim::TreeNode::increaseGen</definition>
        <argsstring>()</argsstring>
        <name>increaseGen</name>
        <briefdescription>
<para>Increases the generation counter by one. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="186" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="116" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_tree_node_1a0a8742291273590f73462d6bf3443452" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool necsim::TreeNode::exists</definition>
        <argsstring>() const</argsstring>
        <name>exists</name>
        <briefdescription>
<para>Getter for the existence boolean. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the existence boolean. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="198" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="121" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_tree_node_1ac4e8a3f1f623c0e65fba5bbed7a17eff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool necsim::TreeNode::isTip</definition>
        <argsstring>() const</argsstring>
        <name>isTip</name>
        <briefdescription>
<para>Getter for the tip boolean. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the tip boolean. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="204" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="126" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_tree_node_1a0b2ec9a977131255d5195e71c2230d1e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long necsim::TreeNode::getParent</definition>
        <argsstring>() const</argsstring>
        <name>getParent</name>
        <briefdescription>
<para>Getter for the parent location. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the parent reference. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="210" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="131" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_tree_node_1a59907c3e0d619b5d3581d1cf0747bcb2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long necsim::TreeNode::getXpos</definition>
        <argsstring>() const</argsstring>
        <name>getXpos</name>
        <briefdescription>
<para>Getter for the x position. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the x position. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="216" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="136" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_tree_node_1ae20ec2e58d39643ef3e72b8d1a6a34f8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long necsim::TreeNode::getYpos</definition>
        <argsstring>() const</argsstring>
        <name>getYpos</name>
        <briefdescription>
<para>Getter for the y position. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the y position. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="222" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="141" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_tree_node_1a1176ad802bce31f8b45741c1393fc3f6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long necsim::TreeNode::getXwrap</definition>
        <argsstring>() const</argsstring>
        <name>getXwrap</name>
        <briefdescription>
<para>Getter for the number of times the lineage is wrapped in the x dimension. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the number of times the lineage is wrapped in the x dimension. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="228" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="146" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_tree_node_1a582bf6e545c54be611068e78652682b2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long necsim::TreeNode::getYwrap</definition>
        <argsstring>() const</argsstring>
        <name>getYwrap</name>
        <briefdescription>
<para>Getter for the number of times the lineage is wrapped in the y dimension. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the number of times the lineage is wrapped in the y dimension. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="234" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="151" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_tree_node_1ace6c4b07bf8c5649b710def86bc22778" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool necsim::TreeNode::hasSpeciated</definition>
        <argsstring>() const</argsstring>
        <name>hasSpeciated</name>
        <briefdescription>
<para>Getter for the speciation boolean. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the speciation boolean. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="240" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="156" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_tree_node_1a440193c4d1bdafc912c2236174a54f17" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long necsim::TreeNode::getSpeciesID</definition>
        <argsstring>() const</argsstring>
        <name>getSpeciesID</name>
        <briefdescription>
<para>Getter for the species ID. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the species ID. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="246" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="161" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_tree_node_1aaa5f1445c47bd8762d7ec6fd883a4749" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>long double</type>
        <definition>long double necsim::TreeNode::getSpecRate</definition>
        <argsstring>() const</argsstring>
        <name>getSpecRate</name>
        <briefdescription>
<para>Getter for the randomly generated speciation probability. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the speciation probability. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="252" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="166" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_tree_node_1adff64b5f8446125367a5f4ed3a90ef36" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long necsim::TreeNode::getGenerationRate</definition>
        <argsstring>() const</argsstring>
        <name>getGenerationRate</name>
        <briefdescription>
<para>Getter for the number of generations the lineage has existed. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the number of generations of existence. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="258" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="171" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_tree_node_1ac39d100398e412e117bf516012b99c1f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>long double</type>
        <definition>long double necsim::TreeNode::getGeneration</definition>
        <argsstring>() const</argsstring>
        <name>getGeneration</name>
        <briefdescription>
<para>Getter for the generation the lineage was created. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the generation counter the lineage was created. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="264" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="176" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_tree_node_1aa3e4da6afde06713c3e0c26b26ec11fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void necsim::TreeNode::speciate</definition>
        <argsstring>()</argsstring>
        <name>speciate</name>
        <briefdescription>
<para>Sets the speciation boolean to true. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="269" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="181" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_tree_node_1afa562bb4c476aa1fc39796ed1735215a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classnecsim_1_1_tree_node" kindref="compound">TreeNode</ref> &amp;</type>
        <definition>TreeNode &amp; necsim::TreeNode::operator=</definition>
        <argsstring>(const TreeNode &amp;t)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classnecsim_1_1_tree_node" kindref="compound">TreeNode</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Overloading the equality operator for TreeNodes <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>the input <ref refid="classnecsim_1_1_tree_node" kindref="compound">TreeNode</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="291" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="207" bodyend="222"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classnecsim_1_1_tree_node_1a2d73715892a5f20100609978a53dea81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend ostream &amp;</type>
        <definition>ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(ostream &amp;os, const TreeNode &amp;t)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classnecsim_1_1_tree_node" kindref="compound">TreeNode</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Overloading the &lt;&lt; operator for outputting a Treenode object to an output stream. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>os</parametername>
</parameternamelist>
<parameterdescription>
<para>the output stream. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>a Treenode object to output. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the output stream. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="277" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="186" bodyend="194"/>
      </memberdef>
      <memberdef kind="friend" id="classnecsim_1_1_tree_node_1afc6e1f55282105fd812724a8bb09a918" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend istream &amp;</type>
        <definition>istream&amp; operator&gt;&gt;</definition>
        <argsstring>(istream &amp;is, TreeNode &amp;t)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="classnecsim_1_1_tree_node" kindref="compound">TreeNode</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Overloading the &gt;&gt; operator for inputting the Treenode object from an input stream. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>is</parametername>
</parameternamelist>
<parameterdescription>
<para>the input stream. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>a Treenode object to input to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the input stream. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="285" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="196" bodyend="205"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classnecsim_1_1_tree_node" kindref="compound">TreeNode</ref> class that acts as a data storage object for the phylogenetic tree. </para>
    </briefdescription>
    <detaileddescription>
<para>Also contains all the necessary routines for changes to a lineage&apos;s attributes, called by TreeList objects when generating new coalescence trees. </para>
    </detaileddescription>
    <location file="necsim/TreeNode.h" line="29" column="1" bodyfile="necsim/TreeNode.h" bodystart="28" bodyend="304"/>
    <listofallmembers>
      <member refid="classnecsim_1_1_tree_node_1af8721e4116f9db28d826c8b2f4beb494" prot="public" virt="non-virtual"><scope>necsim::TreeNode</scope><name>burnSpecies</name></member>
      <member refid="classnecsim_1_1_tree_node_1a07a809cae7914b713578c54e1a6ef98f" prot="private" virt="non-virtual"><scope>necsim::TreeNode</scope><name>does_exist</name></member>
      <member refid="classnecsim_1_1_tree_node_1a0a8742291273590f73462d6bf3443452" prot="public" virt="non-virtual"><scope>necsim::TreeNode</scope><name>exists</name></member>
      <member refid="classnecsim_1_1_tree_node_1ab26ee9f960d6c6d153a1beb1c679c6a4" prot="private" virt="non-virtual"><scope>necsim::TreeNode</scope><name>generation_added</name></member>
      <member refid="classnecsim_1_1_tree_node_1ac5c6af595500db8cd15eedec7f893b37" prot="private" virt="non-virtual"><scope>necsim::TreeNode</scope><name>generations_existed</name></member>
      <member refid="classnecsim_1_1_tree_node_1ac39d100398e412e117bf516012b99c1f" prot="public" virt="non-virtual"><scope>necsim::TreeNode</scope><name>getGeneration</name></member>
      <member refid="classnecsim_1_1_tree_node_1adff64b5f8446125367a5f4ed3a90ef36" prot="public" virt="non-virtual"><scope>necsim::TreeNode</scope><name>getGenerationRate</name></member>
      <member refid="classnecsim_1_1_tree_node_1a0b2ec9a977131255d5195e71c2230d1e" prot="public" virt="non-virtual"><scope>necsim::TreeNode</scope><name>getParent</name></member>
      <member refid="classnecsim_1_1_tree_node_1a440193c4d1bdafc912c2236174a54f17" prot="public" virt="non-virtual"><scope>necsim::TreeNode</scope><name>getSpeciesID</name></member>
      <member refid="classnecsim_1_1_tree_node_1aaa5f1445c47bd8762d7ec6fd883a4749" prot="public" virt="non-virtual"><scope>necsim::TreeNode</scope><name>getSpecRate</name></member>
      <member refid="classnecsim_1_1_tree_node_1a59907c3e0d619b5d3581d1cf0747bcb2" prot="public" virt="non-virtual"><scope>necsim::TreeNode</scope><name>getXpos</name></member>
      <member refid="classnecsim_1_1_tree_node_1a1176ad802bce31f8b45741c1393fc3f6" prot="public" virt="non-virtual"><scope>necsim::TreeNode</scope><name>getXwrap</name></member>
      <member refid="classnecsim_1_1_tree_node_1ae20ec2e58d39643ef3e72b8d1a6a34f8" prot="public" virt="non-virtual"><scope>necsim::TreeNode</scope><name>getYpos</name></member>
      <member refid="classnecsim_1_1_tree_node_1a582bf6e545c54be611068e78652682b2" prot="public" virt="non-virtual"><scope>necsim::TreeNode</scope><name>getYwrap</name></member>
      <member refid="classnecsim_1_1_tree_node_1ace6c4b07bf8c5649b710def86bc22778" prot="public" virt="non-virtual"><scope>necsim::TreeNode</scope><name>hasSpeciated</name></member>
      <member refid="classnecsim_1_1_tree_node_1a8e11cbf2050a66cec93f946f33a181ac" prot="public" virt="non-virtual"><scope>necsim::TreeNode</scope><name>increaseGen</name></member>
      <member refid="classnecsim_1_1_tree_node_1ac4e8a3f1f623c0e65fba5bbed7a17eff" prot="public" virt="non-virtual"><scope>necsim::TreeNode</scope><name>isTip</name></member>
      <member refid="classnecsim_1_1_tree_node_1a2d73715892a5f20100609978a53dea81" prot="public" virt="non-virtual"><scope>necsim::TreeNode</scope><name>operator&lt;&lt;</name></member>
      <member refid="classnecsim_1_1_tree_node_1afa562bb4c476aa1fc39796ed1735215a" prot="public" virt="non-virtual"><scope>necsim::TreeNode</scope><name>operator=</name></member>
      <member refid="classnecsim_1_1_tree_node_1afc6e1f55282105fd812724a8bb09a918" prot="public" virt="non-virtual"><scope>necsim::TreeNode</scope><name>operator&gt;&gt;</name></member>
      <member refid="classnecsim_1_1_tree_node_1ab899ba74b9645abf11d3a4d2439f6b2c" prot="private" virt="non-virtual"><scope>necsim::TreeNode</scope><name>parent</name></member>
      <member refid="classnecsim_1_1_tree_node_1aea881512253b780ce87b154f9263fc66" prot="public" virt="non-virtual"><scope>necsim::TreeNode</scope><name>qReset</name></member>
      <member refid="classnecsim_1_1_tree_node_1a043e5cf98a475fbf61d20dbe1c0dd35d" prot="public" virt="non-virtual"><scope>necsim::TreeNode</scope><name>resetSpecies</name></member>
      <member refid="classnecsim_1_1_tree_node_1a1c514db4bf14d7de47e3902c39d0fb74" prot="public" virt="non-virtual"><scope>necsim::TreeNode</scope><name>setExistence</name></member>
      <member refid="classnecsim_1_1_tree_node_1a9a1b93e56dd4d6b556b926e371a3dc5f" prot="public" virt="non-virtual"><scope>necsim::TreeNode</scope><name>setGeneration</name></member>
      <member refid="classnecsim_1_1_tree_node_1a4e2873e89e20f406c49b5ed6369b1175" prot="public" virt="non-virtual"><scope>necsim::TreeNode</scope><name>setGenerationRate</name></member>
      <member refid="classnecsim_1_1_tree_node_1a00c00b3275edfc916f24bc7589f39cde" prot="public" virt="non-virtual"><scope>necsim::TreeNode</scope><name>setParent</name></member>
      <member refid="classnecsim_1_1_tree_node_1ae6de5d8c36806a42f7e3d3008fbc8d6d" prot="public" virt="non-virtual"><scope>necsim::TreeNode</scope><name>setPosition</name></member>
      <member refid="classnecsim_1_1_tree_node_1a02c29e6f9f017c06c0de0f2440f3fef7" prot="public" virt="non-virtual"><scope>necsim::TreeNode</scope><name>setSpec</name></member>
      <member refid="classnecsim_1_1_tree_node_1a5b84a54f08c5c912d234a0105fffbb6a" prot="public" virt="non-virtual"><scope>necsim::TreeNode</scope><name>setSpeciation</name></member>
      <member refid="classnecsim_1_1_tree_node_1a0cf1bd9610dea96ae946c5e21984c388" prot="public" virt="non-virtual"><scope>necsim::TreeNode</scope><name>setTip</name></member>
      <member refid="classnecsim_1_1_tree_node_1a7810233c78eeb60a10f9ee74d5b3f66c" prot="public" virt="non-virtual"><scope>necsim::TreeNode</scope><name>setup</name></member>
      <member refid="classnecsim_1_1_tree_node_1a155c8cf6dcbcc0c4ab4ed07ce1c10072" prot="public" virt="non-virtual"><scope>necsim::TreeNode</scope><name>setup</name></member>
      <member refid="classnecsim_1_1_tree_node_1aa75a19ccfbac7aa4327826fe0f778b0b" prot="public" virt="non-virtual"><scope>necsim::TreeNode</scope><name>setup</name></member>
      <member refid="classnecsim_1_1_tree_node_1aa3e4da6afde06713c3e0c26b26ec11fc" prot="public" virt="non-virtual"><scope>necsim::TreeNode</scope><name>speciate</name></member>
      <member refid="classnecsim_1_1_tree_node_1aa6e399b69e5df0355c6c4fc7effdaca3" prot="private" virt="non-virtual"><scope>necsim::TreeNode</scope><name>speciated</name></member>
      <member refid="classnecsim_1_1_tree_node_1a8020fc69439651b6d892ef014d0718d9" prot="private" virt="non-virtual"><scope>necsim::TreeNode</scope><name>speciation_probability</name></member>
      <member refid="classnecsim_1_1_tree_node_1a74efc9493995ba7bfdf78600b518ffd0" prot="private" virt="non-virtual"><scope>necsim::TreeNode</scope><name>species_id</name></member>
      <member refid="classnecsim_1_1_tree_node_1a25d85bcaa266159336aad852e2b87065" prot="private" virt="non-virtual"><scope>necsim::TreeNode</scope><name>tip</name></member>
      <member refid="classnecsim_1_1_tree_node_1ac6f3e512181f571b00737888f86367f8" prot="public" virt="non-virtual"><scope>necsim::TreeNode</scope><name>TreeNode</name></member>
      <member refid="classnecsim_1_1_tree_node_1ade74e6fc39effb9a611ff820c6ceac02" prot="private" virt="non-virtual"><scope>necsim::TreeNode</scope><name>xpos</name></member>
      <member refid="classnecsim_1_1_tree_node_1a2cf75e49d094dacd3c75087d6d62f22f" prot="private" virt="non-virtual"><scope>necsim::TreeNode</scope><name>xwrap</name></member>
      <member refid="classnecsim_1_1_tree_node_1a3b8f32c3d0eab2dc2836d4f662133a18" prot="private" virt="non-virtual"><scope>necsim::TreeNode</scope><name>ypos</name></member>
      <member refid="classnecsim_1_1_tree_node_1a09800c81ea29c0e3f34284d3a60a0c92" prot="private" virt="non-virtual"><scope>necsim::TreeNode</scope><name>ywrap</name></member>
      <member refid="classnecsim_1_1_tree_node_1a7ec39f31106c6d38f478fbf0877cafca" prot="public" virt="non-virtual"><scope>necsim::TreeNode</scope><name>~TreeNode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
