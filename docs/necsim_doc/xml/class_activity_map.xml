<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_activity_map" kind="class" language="C++" prot="public">
    <compoundname>ActivityMap</compoundname>
    <includes refid="_activity_map_8h" local="no">ActivityMap.h</includes>
      <sectiondef kind="protected-type">
      <memberdef kind="typedef" id="class_activity_map_1a0351c3b97323eaa3d3fea8ff72859eae" prot="protected" static="no">
        <type>bool(ActivityMap::*</type>
        <definition>typedef bool(ActivityMap::* ActivityMap::rep_ptr) (const unsigned long &amp;x, const unsigned long &amp;y, const long &amp;xwrap, const long &amp;ywrap)</definition>
        <argsstring>)(const unsigned long &amp;x, const unsigned long &amp;y, const long &amp;xwrap, const long &amp;ywrap)</argsstring>
        <name>rep_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/ActivityMap.h" line="47" column="1" bodyfile="necsim/ActivityMap.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_activity_map_1ae6bb212e15a9b8d1dd1fef3a1f54b9f6" prot="protected" static="no" mutable="no">
        <type><ref refid="class_map" kindref="compound">Map</ref>&lt; double &gt;</type>
        <definition>Map&lt;double&gt; ActivityMap::activity_map</definition>
        <argsstring></argsstring>
        <name>activity_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/ActivityMap.h" line="34" column="1" bodyfile="necsim/ActivityMap.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_activity_map_1a5d8cd617565cc97b924b78f03b82eb4a" prot="protected" static="no" mutable="no">
        <type>string</type>
        <definition>string ActivityMap::map_file</definition>
        <argsstring></argsstring>
        <name>map_file</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/ActivityMap.h" line="36" column="1" bodyfile="necsim/ActivityMap.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_activity_map_1a59c10c7e03899876365ef4bc791b3fad" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double ActivityMap::max_val</definition>
        <argsstring></argsstring>
        <name>max_val</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/ActivityMap.h" line="38" column="1" bodyfile="necsim/ActivityMap.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_activity_map_1a3133f8f157fc7abd266ca0b639d4c694" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ActivityMap::null_map</definition>
        <argsstring></argsstring>
        <name>null_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/ActivityMap.h" line="40" column="1" bodyfile="necsim/ActivityMap.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_activity_map_1ace785bd2cef75f4280015bb85826705b" prot="protected" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long ActivityMap::offset_x</definition>
        <argsstring></argsstring>
        <name>offset_x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/ActivityMap.h" line="42" column="1" bodyfile="necsim/ActivityMap.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_activity_map_1a2915cce35c408d864c8234fc41397569" prot="protected" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long ActivityMap::offset_y</definition>
        <argsstring></argsstring>
        <name>offset_y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/ActivityMap.h" line="42" column="1" bodyfile="necsim/ActivityMap.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_activity_map_1a9b1828005d0e5b0c3ea9c6cf384bed1b" prot="protected" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long ActivityMap::x_dim</definition>
        <argsstring></argsstring>
        <name>x_dim</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/ActivityMap.h" line="42" column="1" bodyfile="necsim/ActivityMap.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_activity_map_1a8a822d954d05e09859a4c7be94b276c0" prot="protected" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long ActivityMap::y_dim</definition>
        <argsstring></argsstring>
        <name>y_dim</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/ActivityMap.h" line="42" column="1" bodyfile="necsim/ActivityMap.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_activity_map_1a226799885de8a5535c7cb46af66efed6" prot="protected" static="no" mutable="no">
        <type>shared_ptr&lt; <ref refid="class_n_rrand" kindref="compound">NRrand</ref> &gt;</type>
        <definition>shared_ptr&lt;NRrand&gt; ActivityMap::random</definition>
        <argsstring></argsstring>
        <name>random</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/ActivityMap.h" line="44" column="1" bodyfile="necsim/ActivityMap.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_activity_map_1a9ced752f73123073e076f50b8944e432" prot="protected" static="no" mutable="no">
        <type>rep_ptr</type>
        <definition>rep_ptr ActivityMap::activity_map_checker_fptr</definition>
        <argsstring></argsstring>
        <name>activity_map_checker_fptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/ActivityMap.h" line="51" column="1" bodyfile="necsim/ActivityMap.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_activity_map_1a575d81ef561055368c7d259c9ee3c5ea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ActivityMap::ActivityMap</definition>
        <argsstring>()</argsstring>
        <name>ActivityMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/ActivityMap.h" line="53" column="1" bodyfile="necsim/ActivityMap.h" bodystart="53" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="class_activity_map_1ad77d0052639050280df746d7b21e68a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ActivityMap::isNull</definition>
        <argsstring>()</argsstring>
        <name>isNull</name>
        <briefdescription>
<para>Gets if the map is a null reproduction map, with no matrix storage in memory necessary. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if the map is &quot;null&quot; or &quot;none&quot; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/ActivityMap.h" line="65" column="1" bodyfile="necsim/ActivityMap.cpp" bodystart="16" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="class_activity_map_1a13d7fbbe6c79ca0af1d60314a2fe6187" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ActivityMap::import</definition>
        <argsstring>(string file_name, unsigned long size_x, unsigned long size_y, shared_ptr&lt; NRrand &gt; random_in)</argsstring>
        <name>import</name>
        <param>
          <type>string</type>
          <declname>file_name</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>size_x</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>size_y</declname>
        </param>
        <param>
          <type>shared_ptr&lt; <ref refid="class_n_rrand" kindref="compound">NRrand</ref> &gt;</type>
          <declname>random_in</declname>
        </param>
        <briefdescription>
<para>Imports the map file from the given path Requires the dimensions to be identical as the fine map file dimensions. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file_name</parametername>
</parameternamelist>
<parameterdescription>
<para>the path to the reproduction map to import </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size_x</parametername>
</parameternamelist>
<parameterdescription>
<para>the x dimensions of the map file </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size_y</parametername>
</parameternamelist>
<parameterdescription>
<para>the y dimensions of the map file </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/ActivityMap.h" line="74" column="1" bodyfile="necsim/ActivityMap.cpp" bodystart="21" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="class_activity_map_1a5ae1efb4f4745e379a2ebfa59511404b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ActivityMap::setActivityFunction</definition>
        <argsstring>()</argsstring>
        <name>setActivityFunction</name>
        <briefdescription>
<para>Correctly sets the reproduction function to either rejectionSampleNull or rejectionSample depending on if a reproduction map is used or not. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/ActivityMap.h" line="80" column="1" bodyfile="necsim/ActivityMap.cpp" bodystart="49" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="class_activity_map_1acf8157c6154cc369a9087809c9ed041c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ActivityMap::setOffsets</definition>
        <argsstring>(const unsigned long &amp;x_offset, const unsigned long &amp;y_offset, const unsigned long &amp;xdim, const unsigned long &amp;ydim)</argsstring>
        <name>setOffsets</name>
        <param>
          <type>const unsigned long &amp;</type>
          <declname>x_offset</declname>
        </param>
        <param>
          <type>const unsigned long &amp;</type>
          <declname>y_offset</declname>
        </param>
        <param>
          <type>const unsigned long &amp;</type>
          <declname>xdim</declname>
        </param>
        <param>
          <type>const unsigned long &amp;</type>
          <declname>ydim</declname>
        </param>
        <briefdescription>
<para>Sets the offsets for the reproduction map from the sample grid. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>the x offset from the sample grid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>the y offset from the sample grid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xdim</parametername>
</parameternamelist>
<parameterdescription>
<para>the x dimension of the sample grid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ydim</parametername>
</parameternamelist>
<parameterdescription>
<para>the y dimension of the sample grid </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/ActivityMap.h" line="89" column="1" bodyfile="necsim/ActivityMap.cpp" bodystart="61" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_activity_map_1aa6a93241569a51d46eee123ef386de32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ActivityMap::rejectionSampleNull</definition>
        <argsstring>(const unsigned long &amp;x, const unsigned long &amp;y, const long &amp;xwrap, const long &amp;ywrap)</argsstring>
        <name>rejectionSampleNull</name>
        <param>
          <type>const unsigned long &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned long &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const long &amp;</type>
          <declname>xwrap</declname>
        </param>
        <param>
          <type>const long &amp;</type>
          <declname>ywrap</declname>
        </param>
        <briefdescription>
<para>Returns true for all cell values Function to be pointed to in cases where there is no reproduction map. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>random_number</parametername>
</parameternamelist>
<parameterdescription>
<para>random number object to pass forward </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>x coordinate of the lineage on the sample grid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>y coordinate of the lineage on the sample grid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xwrap</parametername>
</parameternamelist>
<parameterdescription>
<para>x wrapping of the lineage </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ywrap</parametername>
</parameternamelist>
<parameterdescription>
<para>y wrapping of the lineage </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true always </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/ActivityMap.h" line="102" column="1" bodyfile="necsim/ActivityMap.cpp" bodystart="71" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_activity_map_1a19890a93eccac57093fc381dac776bb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ActivityMap::rejectionSample</definition>
        <argsstring>(const unsigned long &amp;x, const unsigned long &amp;y, const long &amp;xwrap, const long &amp;ywrap)</argsstring>
        <name>rejectionSample</name>
        <param>
          <type>const unsigned long &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned long &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const long &amp;</type>
          <declname>xwrap</declname>
        </param>
        <param>
          <type>const long &amp;</type>
          <declname>ywrap</declname>
        </param>
        <briefdescription>
<para>Returns true for all cell values Function to be pointed to in cases where there is no reproduction map. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>random_number</parametername>
</parameternamelist>
<parameterdescription>
<para>random number object to pass forward </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>x coordinate of the lineage on the sample grid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>y coordinate of the lineage on the sample grid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xwrap</parametername>
</parameternamelist>
<parameterdescription>
<para>x wrapping of the lineage </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ywrap</parametername>
</parameternamelist>
<parameterdescription>
<para>y wrapping of the lineage </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true always </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/ActivityMap.h" line="114" column="1" bodyfile="necsim/ActivityMap.cpp" bodystart="76" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_activity_map_1a828dd0f21660f8a0a0465f69320b2ba0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double ActivityMap::getVal</definition>
        <argsstring>(const unsigned long &amp;x, const unsigned long &amp;y, const long &amp;xwrap, const long &amp;ywrap)</argsstring>
        <name>getVal</name>
        <param>
          <type>const unsigned long &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned long &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const long &amp;</type>
          <declname>xwrap</declname>
        </param>
        <param>
          <type>const long &amp;</type>
          <declname>ywrap</declname>
        </param>
        <briefdescription>
<para>Gets the value of the reproduction map at that location. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>x coordinate of the lineage on the sample grid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>y coordinate of the lineage on the sample grid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xwrap</parametername>
</parameternamelist>
<parameterdescription>
<para>x wrapping of the lineage </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ywrap</parametername>
</parameternamelist>
<parameterdescription>
<para>y wrapping of the lineage </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>value of the reproduction map at the required location </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/ActivityMap.h" line="124" column="1" bodyfile="necsim/ActivityMap.cpp" bodystart="81" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_activity_map_1a4935b5ab3b72bd90903e3e9ce7f66c99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ActivityMap::actionOccurs</definition>
        <argsstring>(const unsigned long &amp;x, const unsigned long &amp;y, const long &amp;xwrap, const long &amp;ywrap)</argsstring>
        <name>actionOccurs</name>
        <param>
          <type>const unsigned long &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned long &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const long &amp;</type>
          <declname>xwrap</declname>
        </param>
        <param>
          <type>const long &amp;</type>
          <declname>ywrap</declname>
        </param>
        <briefdescription>
<para>Tests if the random action occurs. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>x coordinate of the lineage on the sample grid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>y coordinate of the lineage on the sample grid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xwrap</parametername>
</parameternamelist>
<parameterdescription>
<para>x wrapping of the lineage </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ywrap</parametername>
</parameternamelist>
<parameterdescription>
<para>y wrapping of the lineage </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>value of the reproduction map at the required location </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/ActivityMap.h" line="134" column="1" bodyfile="necsim/ActivityMap.cpp" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="class_activity_map_1a444476b8818b0f3ad5e08e4d690d9b49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ActivityMap::standardiseValues</definition>
        <argsstring>()</argsstring>
        <name>standardiseValues</name>
        <briefdescription>
<para>Standardises probability values from 0-1. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/ActivityMap.h" line="139" column="1" bodyfile="necsim/ActivityMap.cpp" bodystart="93" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="class_activity_map_1a92b1a1dfcb284044e663d9df9e620986" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_row" kindref="compound">Row</ref>&lt; double &gt;</type>
        <definition>Row&lt;double&gt; ActivityMap::operator[]</definition>
        <argsstring>(long index)</argsstring>
        <name>operator[]</name>
        <param>
          <type>long</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Operator [] for getting values directly from the reproduction map. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>the index to get the row of </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the row present at that index </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/ActivityMap.h" line="146" column="1" bodyfile="necsim/ActivityMap.h" bodystart="146" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="class_activity_map_1a34a91ee0910bece045c0351e8781a023" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_activity_map" kindref="compound">ActivityMap</ref> &amp;</type>
        <definition>ActivityMap&amp; ActivityMap::operator=</definition>
        <argsstring>(const ActivityMap &amp;rm)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_activity_map" kindref="compound">ActivityMap</ref> &amp;</type>
          <declname>rm</declname>
        </param>
        <briefdescription>
<para>Equality operator. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rm</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="class_activity_map" kindref="compound">ActivityMap</ref> object to copy from </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the self <ref refid="class_activity_map" kindref="compound">ActivityMap</ref> object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/ActivityMap.h" line="156" column="1" bodyfile="necsim/ActivityMap.h" bodystart="156" bodyend="168"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_activity_map_1a4b5c5587f2e524585f59cbbe7b23c769" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend ostream &amp;</type>
        <definition>ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(ostream &amp;os, ActivityMap &amp;r)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type><ref refid="class_activity_map" kindref="compound">ActivityMap</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Operator for outputting to an ostream. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>os</parametername>
</parameternamelist>
<parameterdescription>
<para>the ostream to output to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="class_activity_map" kindref="compound">ActivityMap</ref> to read from </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the os object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/ActivityMap.h" line="176" column="1" bodyfile="necsim/ActivityMap.h" bodystart="176" bodyend="186"/>
      </memberdef>
      <memberdef kind="friend" id="class_activity_map_1aa3e2167f7a7a0bb69bf61cf7c72298e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend istream &amp;</type>
        <definition>istream&amp; operator&gt;&gt;</definition>
        <argsstring>(istream &amp;is, ActivityMap &amp;r)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="class_activity_map" kindref="compound">ActivityMap</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
<para>Operator for inputting from an istream. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>is</parametername>
</parameternamelist>
<parameterdescription>
<para>the istream to input from </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>r</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="class_activity_map" kindref="compound">ActivityMap</ref> to input to </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the is object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/ActivityMap.h" line="194" column="1" bodyfile="necsim/ActivityMap.h" bodystart="194" bodyend="203"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Contains the routines for importing activity maps and getting a cell value from the map. </para>    </briefdescription>
    <detaileddescription>
<para>Activity maps can be reproduction probability maps or death maps. </para>    </detaileddescription>
    <collaborationgraph>
      <node id="416">
        <label>Row&lt; double &gt;</label>
        <link refid="class_row"/>
      </node>
      <node id="411">
        <label>ActivityMap</label>
        <link refid="class_activity_map"/>
        <childnode refid="412" relation="usage">
          <edgelabel>map_file</edgelabel>
        </childnode>
        <childnode refid="414" relation="usage">
          <edgelabel>activity_map</edgelabel>
        </childnode>
      </node>
      <node id="413">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="414">
        <label>Map&lt; double &gt;</label>
        <link refid="class_map"/>
        <childnode refid="415" relation="public-inheritance">
        </childnode>
        <childnode refid="412" relation="usage">
          <edgelabel>file_name</edgelabel>
        </childnode>
      </node>
      <node id="415">
        <label>Matrix&lt; double &gt;</label>
        <link refid="class_matrix"/>
        <childnode refid="416" relation="usage">
          <edgelabel>matrix</edgelabel>
        </childnode>
      </node>
      <node id="412">
        <label>std::string</label>
        <childnode refid="413" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="necsim/ActivityMap.h" line="31" column="1" bodyfile="necsim/ActivityMap.h" bodystart="30" bodyend="205"/>
    <listofallmembers>
      <member refid="class_activity_map_1a4935b5ab3b72bd90903e3e9ce7f66c99" prot="public" virt="non-virtual"><scope>ActivityMap</scope><name>actionOccurs</name></member>
      <member refid="class_activity_map_1ae6bb212e15a9b8d1dd1fef3a1f54b9f6" prot="protected" virt="non-virtual"><scope>ActivityMap</scope><name>activity_map</name></member>
      <member refid="class_activity_map_1a9ced752f73123073e076f50b8944e432" prot="protected" virt="non-virtual"><scope>ActivityMap</scope><name>activity_map_checker_fptr</name></member>
      <member refid="class_activity_map_1a575d81ef561055368c7d259c9ee3c5ea" prot="public" virt="non-virtual"><scope>ActivityMap</scope><name>ActivityMap</name></member>
      <member refid="class_activity_map_1a828dd0f21660f8a0a0465f69320b2ba0" prot="public" virt="non-virtual"><scope>ActivityMap</scope><name>getVal</name></member>
      <member refid="class_activity_map_1a13d7fbbe6c79ca0af1d60314a2fe6187" prot="public" virt="non-virtual"><scope>ActivityMap</scope><name>import</name></member>
      <member refid="class_activity_map_1ad77d0052639050280df746d7b21e68a8" prot="public" virt="non-virtual"><scope>ActivityMap</scope><name>isNull</name></member>
      <member refid="class_activity_map_1a5d8cd617565cc97b924b78f03b82eb4a" prot="protected" virt="non-virtual"><scope>ActivityMap</scope><name>map_file</name></member>
      <member refid="class_activity_map_1a59c10c7e03899876365ef4bc791b3fad" prot="protected" virt="non-virtual"><scope>ActivityMap</scope><name>max_val</name></member>
      <member refid="class_activity_map_1a3133f8f157fc7abd266ca0b639d4c694" prot="protected" virt="non-virtual"><scope>ActivityMap</scope><name>null_map</name></member>
      <member refid="class_activity_map_1ace785bd2cef75f4280015bb85826705b" prot="protected" virt="non-virtual"><scope>ActivityMap</scope><name>offset_x</name></member>
      <member refid="class_activity_map_1a2915cce35c408d864c8234fc41397569" prot="protected" virt="non-virtual"><scope>ActivityMap</scope><name>offset_y</name></member>
      <member refid="class_activity_map_1a4b5c5587f2e524585f59cbbe7b23c769" prot="public" virt="non-virtual"><scope>ActivityMap</scope><name>operator&lt;&lt;</name></member>
      <member refid="class_activity_map_1a34a91ee0910bece045c0351e8781a023" prot="public" virt="non-virtual"><scope>ActivityMap</scope><name>operator=</name></member>
      <member refid="class_activity_map_1aa3e2167f7a7a0bb69bf61cf7c72298e6" prot="public" virt="non-virtual"><scope>ActivityMap</scope><name>operator&gt;&gt;</name></member>
      <member refid="class_activity_map_1a92b1a1dfcb284044e663d9df9e620986" prot="public" virt="non-virtual"><scope>ActivityMap</scope><name>operator[]</name></member>
      <member refid="class_activity_map_1a226799885de8a5535c7cb46af66efed6" prot="protected" virt="non-virtual"><scope>ActivityMap</scope><name>random</name></member>
      <member refid="class_activity_map_1a19890a93eccac57093fc381dac776bb3" prot="public" virt="non-virtual"><scope>ActivityMap</scope><name>rejectionSample</name></member>
      <member refid="class_activity_map_1aa6a93241569a51d46eee123ef386de32" prot="public" virt="non-virtual"><scope>ActivityMap</scope><name>rejectionSampleNull</name></member>
      <member refid="class_activity_map_1a0351c3b97323eaa3d3fea8ff72859eae" prot="protected" virt="non-virtual"><scope>ActivityMap</scope><name>rep_ptr</name></member>
      <member refid="class_activity_map_1a5ae1efb4f4745e379a2ebfa59511404b" prot="public" virt="non-virtual"><scope>ActivityMap</scope><name>setActivityFunction</name></member>
      <member refid="class_activity_map_1acf8157c6154cc369a9087809c9ed041c" prot="public" virt="non-virtual"><scope>ActivityMap</scope><name>setOffsets</name></member>
      <member refid="class_activity_map_1a444476b8818b0f3ad5e08e4d690d9b49" prot="public" virt="non-virtual"><scope>ActivityMap</scope><name>standardiseValues</name></member>
      <member refid="class_activity_map_1a9b1828005d0e5b0c3ea9c6cf384bed1b" prot="protected" virt="non-virtual"><scope>ActivityMap</scope><name>x_dim</name></member>
      <member refid="class_activity_map_1a8a822d954d05e09859a4c7be94b276c0" prot="protected" virt="non-virtual"><scope>ActivityMap</scope><name>y_dim</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
