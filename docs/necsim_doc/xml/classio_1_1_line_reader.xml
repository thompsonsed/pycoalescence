<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classio_1_1_line_reader" kind="class" language="C++" prot="public">
    <compoundname>io::LineReader</compoundname>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classio_1_1_line_reader_1a04db9ad3b956347b48136dbe5751469d" prot="private" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int io::LineReader::block_len</definition>
        <argsstring></argsstring>
        <name>block_len</name>
        <initializer>= 1&lt;&lt;24</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="316" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="316" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classio_1_1_line_reader_1abfd04ef491b6515a26b1b17aab9430b0" prot="private" static="no" mutable="no">
        <type><ref refid="classio_1_1detail_1_1_asynchronous_reader" kindref="compound">detail::AsynchronousReader</ref></type>
        <definition>detail::AsynchronousReader io::LineReader::reader</definition>
        <argsstring></argsstring>
        <name>reader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="320" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="320" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classio_1_1_line_reader_1a00e6c00858051b99a5996e02a70160cf" prot="private" static="no" mutable="no">
        <type>char *</type>
        <definition>char* io::LineReader::buffer</definition>
        <argsstring></argsstring>
        <name>buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="322" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="322" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classio_1_1_line_reader_1a20676a014d14bfa566591d8cfeed0f29" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int io::LineReader::data_begin</definition>
        <argsstring></argsstring>
        <name>data_begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="323" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="323" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classio_1_1_line_reader_1a16829b470aa908981d4799401d42a85b" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int io::LineReader::data_end</definition>
        <argsstring></argsstring>
        <name>data_end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="324" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="324" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classio_1_1_line_reader_1a8b853ac45c1eae0afc36d49630e949d8" prot="private" static="no" mutable="no">
        <type>char</type>
        <definition>char io::LineReader::file_name[error::max_file_name_length+1]</definition>
        <argsstring>[error::max_file_name_length+1]</argsstring>
        <name>file_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="326" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="326" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classio_1_1_line_reader_1a5c29ad60208bca6475af54e54eff80b7" prot="private" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned io::LineReader::file_line</definition>
        <argsstring></argsstring>
        <name>file_line</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="327" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="327" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classio_1_1_line_reader_1a036adce726096bca1db7ccceea938595" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classio_1_1_byte_source_base" kindref="compound">ByteSourceBase</ref> &gt;</type>
        <definition>static std::unique_ptr&lt;ByteSourceBase&gt; io::LineReader::open_file</definition>
        <argsstring>(const char *file_name)</argsstring>
        <name>open_file</name>
        <param>
          <type>const char *</type>
          <declname>file_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="329" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="329" bodyend="341"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classio_1_1_line_reader_1a68ac92cedd46d25cbc4e205eb3a2833f" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void io::LineReader::init</definition>
        <argsstring>(std::unique_ptr&lt; ByteSourceBase &gt;byte_source)</argsstring>
        <name>init</name>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classio_1_1_byte_source_base" kindref="compound">ByteSourceBase</ref> &gt;</type>
          <declname>byte_source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="343" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="343" bodyend="363"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classio_1_1_line_reader_1abd9f13fb1d3f5d36857dec0a1d1bde6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>io::LineReader::LineReader</definition>
        <argsstring>()=delete</argsstring>
        <name>LineReader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="366" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classio_1_1_line_reader_1a84f2957de769bb701eaaddfd8bc004dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>io::LineReader::LineReader</definition>
        <argsstring>(const LineReader &amp;)=delete</argsstring>
        <name>LineReader</name>
        <param>
          <type>const <ref refid="classio_1_1_line_reader" kindref="compound">LineReader</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="367" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classio_1_1_line_reader_1a9ebd7beca16060ffc0ea8df3c0c6ff25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classio_1_1_line_reader" kindref="compound">LineReader</ref> &amp;</type>
        <definition>LineReader&amp; io::LineReader::operator=</definition>
        <argsstring>(const LineReader &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classio_1_1_line_reader" kindref="compound">LineReader</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="368" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classio_1_1_line_reader_1a81a75d3f53725d35822f490007520e29" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>io::LineReader::LineReader</definition>
        <argsstring>(const char *file_name)</argsstring>
        <name>LineReader</name>
        <param>
          <type>const char *</type>
          <declname>file_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="370" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="370" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="classio_1_1_line_reader_1ab0eb26f44fa6b18f9c39dfb2561ac882" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>io::LineReader::LineReader</definition>
        <argsstring>(const std::string &amp;file_name)</argsstring>
        <name>LineReader</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>file_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="375" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="375" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="classio_1_1_line_reader_1af4ebb130a7d6c78356573f6d0304266c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>io::LineReader::LineReader</definition>
        <argsstring>(const char *file_name, std::unique_ptr&lt; ByteSourceBase &gt;byte_source)</argsstring>
        <name>LineReader</name>
        <param>
          <type>const char *</type>
          <declname>file_name</declname>
        </param>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classio_1_1_byte_source_base" kindref="compound">ByteSourceBase</ref> &gt;</type>
          <declname>byte_source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="380" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="380" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="classio_1_1_line_reader_1ab625b3a8001dca811b0e211c6cfc1b28" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>io::LineReader::LineReader</definition>
        <argsstring>(const std::string &amp;file_name, std::unique_ptr&lt; ByteSourceBase &gt;byte_source)</argsstring>
        <name>LineReader</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>file_name</declname>
        </param>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classio_1_1_byte_source_base" kindref="compound">ByteSourceBase</ref> &gt;</type>
          <declname>byte_source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="385" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="385" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="classio_1_1_line_reader_1ad5a65d6f23474884061a77ea858c042b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>io::LineReader::LineReader</definition>
        <argsstring>(const char *file_name, const char *data_begin, const char *data_end)</argsstring>
        <name>LineReader</name>
        <param>
          <type>const char *</type>
          <declname>file_name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>data_begin</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>data_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="390" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="390" bodyend="393"/>
      </memberdef>
      <memberdef kind="function" id="classio_1_1_line_reader_1a0a52d864b46442a253443cac1367366e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>io::LineReader::LineReader</definition>
        <argsstring>(const std::string &amp;file_name, const char *data_begin, const char *data_end)</argsstring>
        <name>LineReader</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>file_name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>data_begin</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>data_end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="395" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="395" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="classio_1_1_line_reader_1ad2a8943ba0848ae5052e2f5ad30c010e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>io::LineReader::LineReader</definition>
        <argsstring>(const char *file_name, FILE *file)</argsstring>
        <name>LineReader</name>
        <param>
          <type>const char *</type>
          <declname>file_name</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="400" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="400" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="classio_1_1_line_reader_1a93fa2e3ae98b0e7a7391714d6395c552" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>io::LineReader::LineReader</definition>
        <argsstring>(const std::string &amp;file_name, FILE *file)</argsstring>
        <name>LineReader</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>file_name</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="405" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="405" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="classio_1_1_line_reader_1a301c08eb9ca5d3fdccf4e9a8e5ac82f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>io::LineReader::LineReader</definition>
        <argsstring>(const char *file_name, std::istream &amp;in)</argsstring>
        <name>LineReader</name>
        <param>
          <type>const char *</type>
          <declname>file_name</declname>
        </param>
        <param>
          <type>std::istream &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="410" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="410" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="classio_1_1_line_reader_1a3eacf4d1539a24122c6897fce4e72f06" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>io::LineReader::LineReader</definition>
        <argsstring>(const std::string &amp;file_name, std::istream &amp;in)</argsstring>
        <name>LineReader</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>file_name</declname>
        </param>
        <param>
          <type>std::istream &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="415" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="415" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="classio_1_1_line_reader_1a1a0763d491dec16cebc33134e965dfee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void io::LineReader::set_file_name</definition>
        <argsstring>(const std::string &amp;file_name)</argsstring>
        <name>set_file_name</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>file_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="420" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="420" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="classio_1_1_line_reader_1a81c56ac68497da5ec874333ce063fd83" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void io::LineReader::set_file_name</definition>
        <argsstring>(const char *file_name)</argsstring>
        <name>set_file_name</name>
        <param>
          <type>const char *</type>
          <declname>file_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="424" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="424" bodyend="427"/>
      </memberdef>
      <memberdef kind="function" id="classio_1_1_line_reader_1a4a0ea19065c0092e7fc68c4ccbd815b1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* io::LineReader::get_truncated_file_name</definition>
        <argsstring>() const </argsstring>
        <name>get_truncated_file_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="429" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="429" bodyend="431"/>
      </memberdef>
      <memberdef kind="function" id="classio_1_1_line_reader_1a581b55d4ced6adb964de50fa8ac6eb08" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void io::LineReader::set_file_line</definition>
        <argsstring>(unsigned file_line)</argsstring>
        <name>set_file_line</name>
        <param>
          <type>unsigned</type>
          <declname>file_line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="433" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="433" bodyend="435"/>
      </memberdef>
      <memberdef kind="function" id="classio_1_1_line_reader_1ae043da5b943a08601246c7e3420fd126" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned io::LineReader::get_file_line</definition>
        <argsstring>() const </argsstring>
        <name>get_file_line</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="437" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="437" bodyend="439"/>
      </memberdef>
      <memberdef kind="function" id="classio_1_1_line_reader_1a97f4e0129611d9da2b8c966ffe670be5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>char *</type>
        <definition>char* io::LineReader::next_line</definition>
        <argsstring>()</argsstring>
        <name>next_line</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="441" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="441" bodyend="490"/>
      </memberdef>
      <memberdef kind="function" id="classio_1_1_line_reader_1a1048c0cbb9582d3e23bd3a4724b50fed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>io::LineReader::~LineReader</definition>
        <argsstring>()</argsstring>
        <name>~LineReader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="492" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="492" bodyend="494"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="necsim/fast-cpp-csv-parser2/csv.h" line="314" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="314" bodyend="495"/>
    <listofallmembers>
      <member refid="classio_1_1_line_reader_1a04db9ad3b956347b48136dbe5751469d" prot="private" virt="non-virtual"><scope>io::LineReader</scope><name>block_len</name></member>
      <member refid="classio_1_1_line_reader_1a00e6c00858051b99a5996e02a70160cf" prot="private" virt="non-virtual"><scope>io::LineReader</scope><name>buffer</name></member>
      <member refid="classio_1_1_line_reader_1a20676a014d14bfa566591d8cfeed0f29" prot="private" virt="non-virtual"><scope>io::LineReader</scope><name>data_begin</name></member>
      <member refid="classio_1_1_line_reader_1a16829b470aa908981d4799401d42a85b" prot="private" virt="non-virtual"><scope>io::LineReader</scope><name>data_end</name></member>
      <member refid="classio_1_1_line_reader_1a5c29ad60208bca6475af54e54eff80b7" prot="private" virt="non-virtual"><scope>io::LineReader</scope><name>file_line</name></member>
      <member refid="classio_1_1_line_reader_1a8b853ac45c1eae0afc36d49630e949d8" prot="private" virt="non-virtual"><scope>io::LineReader</scope><name>file_name</name></member>
      <member refid="classio_1_1_line_reader_1ae043da5b943a08601246c7e3420fd126" prot="public" virt="non-virtual"><scope>io::LineReader</scope><name>get_file_line</name></member>
      <member refid="classio_1_1_line_reader_1a4a0ea19065c0092e7fc68c4ccbd815b1" prot="public" virt="non-virtual"><scope>io::LineReader</scope><name>get_truncated_file_name</name></member>
      <member refid="classio_1_1_line_reader_1a68ac92cedd46d25cbc4e205eb3a2833f" prot="private" virt="non-virtual"><scope>io::LineReader</scope><name>init</name></member>
      <member refid="classio_1_1_line_reader_1abd9f13fb1d3f5d36857dec0a1d1bde6c" prot="public" virt="non-virtual"><scope>io::LineReader</scope><name>LineReader</name></member>
      <member refid="classio_1_1_line_reader_1a84f2957de769bb701eaaddfd8bc004dd" prot="public" virt="non-virtual"><scope>io::LineReader</scope><name>LineReader</name></member>
      <member refid="classio_1_1_line_reader_1a81a75d3f53725d35822f490007520e29" prot="public" virt="non-virtual"><scope>io::LineReader</scope><name>LineReader</name></member>
      <member refid="classio_1_1_line_reader_1ab0eb26f44fa6b18f9c39dfb2561ac882" prot="public" virt="non-virtual"><scope>io::LineReader</scope><name>LineReader</name></member>
      <member refid="classio_1_1_line_reader_1af4ebb130a7d6c78356573f6d0304266c" prot="public" virt="non-virtual"><scope>io::LineReader</scope><name>LineReader</name></member>
      <member refid="classio_1_1_line_reader_1ab625b3a8001dca811b0e211c6cfc1b28" prot="public" virt="non-virtual"><scope>io::LineReader</scope><name>LineReader</name></member>
      <member refid="classio_1_1_line_reader_1ad5a65d6f23474884061a77ea858c042b" prot="public" virt="non-virtual"><scope>io::LineReader</scope><name>LineReader</name></member>
      <member refid="classio_1_1_line_reader_1a0a52d864b46442a253443cac1367366e" prot="public" virt="non-virtual"><scope>io::LineReader</scope><name>LineReader</name></member>
      <member refid="classio_1_1_line_reader_1ad2a8943ba0848ae5052e2f5ad30c010e" prot="public" virt="non-virtual"><scope>io::LineReader</scope><name>LineReader</name></member>
      <member refid="classio_1_1_line_reader_1a93fa2e3ae98b0e7a7391714d6395c552" prot="public" virt="non-virtual"><scope>io::LineReader</scope><name>LineReader</name></member>
      <member refid="classio_1_1_line_reader_1a301c08eb9ca5d3fdccf4e9a8e5ac82f8" prot="public" virt="non-virtual"><scope>io::LineReader</scope><name>LineReader</name></member>
      <member refid="classio_1_1_line_reader_1a3eacf4d1539a24122c6897fce4e72f06" prot="public" virt="non-virtual"><scope>io::LineReader</scope><name>LineReader</name></member>
      <member refid="classio_1_1_line_reader_1a97f4e0129611d9da2b8c966ffe670be5" prot="public" virt="non-virtual"><scope>io::LineReader</scope><name>next_line</name></member>
      <member refid="classio_1_1_line_reader_1a036adce726096bca1db7ccceea938595" prot="private" virt="non-virtual"><scope>io::LineReader</scope><name>open_file</name></member>
      <member refid="classio_1_1_line_reader_1a9ebd7beca16060ffc0ea8df3c0c6ff25" prot="public" virt="non-virtual"><scope>io::LineReader</scope><name>operator=</name></member>
      <member refid="classio_1_1_line_reader_1abfd04ef491b6515a26b1b17aab9430b0" prot="private" virt="non-virtual"><scope>io::LineReader</scope><name>reader</name></member>
      <member refid="classio_1_1_line_reader_1a581b55d4ced6adb964de50fa8ac6eb08" prot="public" virt="non-virtual"><scope>io::LineReader</scope><name>set_file_line</name></member>
      <member refid="classio_1_1_line_reader_1a1a0763d491dec16cebc33134e965dfee" prot="public" virt="non-virtual"><scope>io::LineReader</scope><name>set_file_name</name></member>
      <member refid="classio_1_1_line_reader_1a81c56ac68497da5ec874333ce063fd83" prot="public" virt="non-virtual"><scope>io::LineReader</scope><name>set_file_name</name></member>
      <member refid="classio_1_1_line_reader_1a1048c0cbb9582d3e23bd3a4724b50fed" prot="public" virt="non-virtual"><scope>io::LineReader</scope><name>~LineReader</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
