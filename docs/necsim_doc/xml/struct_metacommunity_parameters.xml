<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="struct_metacommunity_parameters" kind="struct" language="C++" prot="public">
    <compoundname>MetacommunityParameters</compoundname>
    <includes refid="_community_8h" local="no">Community.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_metacommunity_parameters_1af6c04331c114ae95467ff2301789a67b" prot="public" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long MetacommunityParameters::reference</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Community.h" line="192" column="1" bodyfile="necsim/Community.h" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_metacommunity_parameters_1a92d44abb439daab624572ed7f9199ab4" prot="public" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long MetacommunityParameters::metacommunity_size</definition>
        <argsstring></argsstring>
        <name>metacommunity_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Community.h" line="193" column="1" bodyfile="necsim/Community.h" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_metacommunity_parameters_1a6ad494c076296c0eac963facca209430" prot="public" static="no" mutable="no">
        <type>long double</type>
        <definition>long double MetacommunityParameters::speciation_rate</definition>
        <argsstring></argsstring>
        <name>speciation_rate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Community.h" line="194" column="1" bodyfile="necsim/Community.h" bodystart="194" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_metacommunity_parameters_1af6bab418342254503030c3fc6390420e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MetacommunityParameters::MetacommunityParameters</definition>
        <argsstring>(unsigned long reference_in, long double speciation_rate_in, unsigned long metacommunity_size_in)</argsstring>
        <name>MetacommunityParameters</name>
        <param>
          <type>unsigned long</type>
          <declname>reference_in</declname>
        </param>
        <param>
          <type>long double</type>
          <declname>speciation_rate_in</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>metacommunity_size_in</declname>
        </param>
        <briefdescription>
<para>Constructor for <ref refid="struct_metacommunity_parameters" kindref="compound">MetacommunityParameters</ref>, storing a previously applied metacommunity. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reference_in</parametername>
</parameternamelist>
<parameterdescription>
<para>the metacommunity reference number </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>speciation_rate_in</parametername>
</parameternamelist>
<parameterdescription>
<para>the speciation rate used for metacommunity generation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>metacommunity_size_in</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the tested metacommunity </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Community.h" line="202" column="1" bodyfile="necsim/Community.cpp" bodystart="152" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="struct_metacommunity_parameters_1a5f0c670813ba6a1e34d05e7eba782251" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MetacommunityParameters::compare</definition>
        <argsstring>(long double speciation_rate_in, unsigned long metacommunity_size_in)</argsstring>
        <name>compare</name>
        <param>
          <type>long double</type>
          <declname>speciation_rate_in</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>metacommunity_size_in</declname>
        </param>
        <briefdescription>
<para>Compare these set of parameters with the input set. If they match, return true, otherwise return false. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>speciation_rate_in</parametername>
</parameternamelist>
<parameterdescription>
<para>speciation rate to compare with stored community parameter </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>metacommunity_size_in</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the tested metacommunity </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Community.h" line="211" column="1" bodyfile="necsim/Community.cpp" bodystart="160" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="struct_metacommunity_parameters_1a5b8597643984dd783a4275d93ce0b7cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool MetacommunityParameters::compare</definition>
        <argsstring>(unsigned long reference_in)</argsstring>
        <name>compare</name>
        <param>
          <type>unsigned long</type>
          <declname>reference_in</declname>
        </param>
        <briefdescription>
<para>Checks if the supplied reference is the same in the metacommunity reference. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reference_in</parametername>
</parameternamelist>
<parameterdescription>
<para>the reference to check against </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Community.h" line="218" column="1" bodyfile="necsim/Community.cpp" bodystart="166" bodyend="169"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Contains a set of metacommunity parameters that have been applied, or are to be applied, to the coalescence tree. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="necsim/Community.h" line="191" column="1" bodyfile="necsim/Community.h" bodystart="190" bodyend="219"/>
    <listofallmembers>
      <member refid="struct_metacommunity_parameters_1a5f0c670813ba6a1e34d05e7eba782251" prot="public" virt="non-virtual"><scope>MetacommunityParameters</scope><name>compare</name></member>
      <member refid="struct_metacommunity_parameters_1a5b8597643984dd783a4275d93ce0b7cb" prot="public" virt="non-virtual"><scope>MetacommunityParameters</scope><name>compare</name></member>
      <member refid="struct_metacommunity_parameters_1a92d44abb439daab624572ed7f9199ab4" prot="public" virt="non-virtual"><scope>MetacommunityParameters</scope><name>metacommunity_size</name></member>
      <member refid="struct_metacommunity_parameters_1af6bab418342254503030c3fc6390420e" prot="public" virt="non-virtual"><scope>MetacommunityParameters</scope><name>MetacommunityParameters</name></member>
      <member refid="struct_metacommunity_parameters_1af6c04331c114ae95467ff2301789a67b" prot="public" virt="non-virtual"><scope>MetacommunityParameters</scope><name>reference</name></member>
      <member refid="struct_metacommunity_parameters_1a6ad494c076296c0eac963facca209430" prot="public" virt="non-virtual"><scope>MetacommunityParameters</scope><name>speciation_rate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
