<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classnecsim_1_1_map" kind="class" language="C++" prot="public">
    <compoundname>necsim::Map</compoundname>
    <basecompoundref refid="classnecsim_1_1_matrix" prot="public" virt="virtual">necsim::Matrix&lt; T &gt;</basecompoundref>
    <includes refid="_map_8h" local="no">Map.h</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classnecsim_1_1_map_1a293d6f98bedeadd3e00fa62abfbe32c4" prot="protected" static="no" mutable="no">
        <type>shared_ptr&lt; GDALDataset * &gt;</type>
        <definition>shared_ptr&lt;GDALDataset*&gt; necsim::Map&lt; T &gt;::po_dataset</definition>
        <argsstring></argsstring>
        <name>po_dataset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="42" column="1" bodyfile="necsim/Map.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnecsim_1_1_map_1abd04c732201595f898f9fd59b0fdd948" prot="protected" static="no" mutable="no">
        <type>shared_ptr&lt; GDALRasterBand * &gt;</type>
        <definition>shared_ptr&lt;GDALRasterBand*&gt; necsim::Map&lt; T &gt;::po_band</definition>
        <argsstring></argsstring>
        <name>po_band</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="43" column="1" bodyfile="necsim/Map.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnecsim_1_1_map_1a7c81c2e78c974cb16d2393e03edc02de" prot="protected" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long necsim::Map&lt; T &gt;::block_x_size</definition>
        <argsstring></argsstring>
        <name>block_x_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="44" column="1" bodyfile="necsim/Map.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnecsim_1_1_map_1a60fbda0dbd54c682b2fcbb5dfd77b3e9" prot="protected" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long necsim::Map&lt; T &gt;::block_y_size</definition>
        <argsstring></argsstring>
        <name>block_y_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="44" column="1" bodyfile="necsim/Map.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnecsim_1_1_map_1a0934d85df9105cfec7aa0b1fa133efa0" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double necsim::Map&lt; T &gt;::no_data_value</definition>
        <argsstring></argsstring>
        <name>no_data_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="45" column="1" bodyfile="necsim/Map.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnecsim_1_1_map_1a80bebe1907879e3836815c0aa9eda366" prot="protected" static="no" mutable="no">
        <type>string</type>
        <definition>string necsim::Map&lt; T &gt;::file_name</definition>
        <argsstring></argsstring>
        <name>file_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="46" column="1" bodyfile="necsim/Map.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnecsim_1_1_map_1a5741de4f6a99d672825eda0e1569a8c8" prot="protected" static="no" mutable="no">
        <type>GDALDataType</type>
        <definition>GDALDataType necsim::Map&lt; T &gt;::gdal_data_type</definition>
        <argsstring></argsstring>
        <name>gdal_data_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="47" column="1" bodyfile="necsim/Map.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnecsim_1_1_map_1a4c352dbab8cb0620ebe50b4499b45729" prot="protected" static="no" mutable="no">
        <type>CPLErr</type>
        <definition>CPLErr necsim::Map&lt; T &gt;::cpl_error</definition>
        <argsstring></argsstring>
        <name>cpl_error</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="49" column="1" bodyfile="necsim/Map.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnecsim_1_1_map_1a8db85d38a03785273893b0f224ec4dc2" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double necsim::Map&lt; T &gt;::upper_left_x</definition>
        <argsstring></argsstring>
        <name>upper_left_x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="50" column="1" bodyfile="necsim/Map.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnecsim_1_1_map_1a56a84b8f5c5c9bf51bb95757b1c5667b" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double necsim::Map&lt; T &gt;::upper_left_y</definition>
        <argsstring></argsstring>
        <name>upper_left_y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="50" column="1" bodyfile="necsim/Map.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnecsim_1_1_map_1acb2b02e166a757d8483ab9a0ad6f37e4" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double necsim::Map&lt; T &gt;::x_res</definition>
        <argsstring></argsstring>
        <name>x_res</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="50" column="1" bodyfile="necsim/Map.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnecsim_1_1_map_1a9103e2e576418741623e232d8b054adb" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double necsim::Map&lt; T &gt;::y_res</definition>
        <argsstring></argsstring>
        <name>y_res</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="50" column="1" bodyfile="necsim/Map.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnecsim_1_1_map_1a320d3c94734b3e4fee7008d34cf2b0d6" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool necsim::Map&lt; T &gt;::cpl_error_set</definition>
        <argsstring></argsstring>
        <name>cpl_error_set</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="54" column="1" bodyfile="necsim/Map.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnecsim_1_1_matrix_1ad22e95f402d410d965c4d4c9aa61b5f6" prot="protected" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long necsim::Matrix&lt; T &gt;::num_cols</definition>
        <argsstring></argsstring>
        <name>num_cols</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Matrix.h" line="58" column="1" bodyfile="necsim/Matrix.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnecsim_1_1_matrix_1afa8091e7e9ad63dd1aec96955b369fda" prot="protected" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long necsim::Matrix&lt; T &gt;::num_rows</definition>
        <argsstring></argsstring>
        <name>num_rows</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Matrix.h" line="59" column="1" bodyfile="necsim/Matrix.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnecsim_1_1_matrix_1a3448e6eb1becb8b4ae913096b6b5a14d" prot="protected" static="no" mutable="no">
        <type>vector&lt; T &gt;</type>
        <definition>vector&lt;T&gt; necsim::Matrix&lt; T &gt;::matrix</definition>
        <argsstring></argsstring>
        <name>matrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Matrix.h" line="61" column="1" bodyfile="necsim/Matrix.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnecsim_1_1_map_1ab163122277162f2e324a8dc1d6c05bfc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>necsim::Map&lt; T &gt;::Map</definition>
        <argsstring>()</argsstring>
        <name>Map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="72" column="1" bodyfile="necsim/Map.h" bodystart="72" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_map_1a48a93f15362321bf3b594cb9906aba07" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>necsim::Map&lt; T &gt;::~Map</definition>
        <argsstring>() override</argsstring>
        <name>~Map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="81" column="1" bodyfile="necsim/Map.h" bodystart="81" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_map_1a657584426c9d2d189e2622d028c4c8a0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void necsim::Map&lt; T &gt;::setCPLErrorHandler</definition>
        <argsstring>()</argsstring>
        <name>setCPLErrorHandler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="87" column="1" bodyfile="necsim/Map.h" bodystart="87" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_map_1a3bab2a1f71ba318f4c2a0340425f01aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void necsim::Map&lt; T &gt;::removeCPLErrorHandler</definition>
        <argsstring>()</argsstring>
        <name>removeCPLErrorHandler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="96" column="1" bodyfile="necsim/Map.h" bodystart="96" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_map_1acd05d519d992aaca1d44ef16d833ec23" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void necsim::Map&lt; T &gt;::open</definition>
        <argsstring>(const string &amp;filename_in)</argsstring>
        <name>open</name>
        <param>
          <type>const string &amp;</type>
          <declname>filename_in</declname>
        </param>
        <briefdescription>
<para>Opens the provided filename to the poDataset object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>file to open in read-only mode. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="109" column="1" bodyfile="necsim/Map.h" bodystart="109" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_map_1a577dff0b15b2e695720e00a244b2167f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void necsim::Map&lt; T &gt;::open</definition>
        <argsstring>()</argsstring>
        <name>open</name>
        <briefdescription>
<para>Overloaded open for using the preset file name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="133" column="1" bodyfile="necsim/Map.h" bodystart="133" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_map_1ac01f4588b58dcd1af3b96e8602612beb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool necsim::Map&lt; T &gt;::isOpen</definition>
        <argsstring>()</argsstring>
        <name>isOpen</name>
        <briefdescription>
<para>Checks if the connection to the map file has already been opened. </para>
        </briefdescription>
        <detaileddescription>
<para>All this does is check if poDataset is a null pointer. <simplesect kind="return"><para>true if poDataset is a null pointer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="144" column="1" bodyfile="necsim/Map.h" bodystart="144" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_map_1ace0b02a482ebb173367635ac3c32f9d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void necsim::Map&lt; T &gt;::close</definition>
        <argsstring>()</argsstring>
        <name>close</name>
        <briefdescription>
<para>Destroys the connection to the dataset. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="152" column="1" bodyfile="necsim/Map.h" bodystart="152" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_map_1a3d4c59978ea148dd1d89c21fbe50494e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void necsim::Map&lt; T &gt;::getRasterBand</definition>
        <argsstring>()</argsstring>
        <name>getRasterBand</name>
        <briefdescription>
<para>Sets the raster band to the first raster. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="170" column="1" bodyfile="necsim/Map.h" bodystart="170" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_map_1a5bc5eab8105d01c074d4e1c1fbd4e555" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void necsim::Map&lt; T &gt;::getBlockSizes</definition>
        <argsstring>()</argsstring>
        <name>getBlockSizes</name>
        <briefdescription>
<para>Obtains the x and y dimensions from the tif file for reading in blocks. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="192" column="1" bodyfile="necsim/Map.h" bodystart="192" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_map_1ae8d236fa822879739938831c83f97f4c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void necsim::Map&lt; T &gt;::getMetaData</definition>
        <argsstring>()</argsstring>
        <name>getMetaData</name>
        <briefdescription>
<para>Sets the no data, data type and data type name values from the tif file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="203" column="1" bodyfile="necsim/Map.h" bodystart="203" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_map_1a5daf1f32ac53353cbe61ddbe8f7d2248" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double necsim::Map&lt; T &gt;::getUpperLeftX</definition>
        <argsstring>() const</argsstring>
        <name>getUpperLeftX</name>
        <briefdescription>
<para>Gets the upper left x (longitude) coordinate. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>upper left x of the map </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="295" column="1" bodyfile="necsim/Map.h" bodystart="295" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_map_1ac626ab1ce04f6f47a6f5b87df6fad3ae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double necsim::Map&lt; T &gt;::getUpperLeftY</definition>
        <argsstring>() const</argsstring>
        <name>getUpperLeftY</name>
        <briefdescription>
<para>Gets the upper left y (latitude) coordinate. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>upper left y of the map </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="304" column="1" bodyfile="necsim/Map.h" bodystart="304" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_map_1a240c6967fe89be4fd806b64bf76dc136" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>string necsim::Map&lt; T &gt;::getFileName</definition>
        <argsstring>() const</argsstring>
        <name>getFileName</name>
        <briefdescription>
<para>Gets the name of the file that has been imported from. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the file name </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="313" column="1" bodyfile="necsim/Map.h" bodystart="313" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_map_1a6e753018fee20348447f55cd5ed0f5dd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void necsim::Map&lt; T &gt;::import</definition>
        <argsstring>(const string &amp;filename) override</argsstring>
        <name>import</name>
        <reimplements refid="classnecsim_1_1_matrix_1a378f1358bec37992ba4997f96dcf781f">import</reimplements>
        <param>
          <type>const string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Imports the matrix from a csv file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>runtime_error</parametername>
</parameternamelist>
<parameterdescription>
<para>if type detection for the filename fails. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>the file to import. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="324" column="1" bodyfile="necsim/Map.h" bodystart="324" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_map_1ad3ee93f3c420a537587de4b64e3d7cf5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool necsim::Map&lt; T &gt;::importTif</definition>
        <argsstring>(const string &amp;filename)</argsstring>
        <name>importTif</name>
        <param>
          <type>const string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Imports the matrix from a tif file using the gdal library functions. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>Opens a connection to the file object, which should be closed. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>the path to the file to import. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="337" column="1" bodyfile="necsim/Map.h" bodystart="337" bodyend="390"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_map_1ace424acca570f238fa886f20e704240f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool necsim::Map&lt; T &gt;::openOffsetMap</definition>
        <argsstring>(Map &amp;offset_map)</argsstring>
        <name>openOffsetMap</name>
        <param>
          <type><ref refid="classnecsim_1_1_map" kindref="compound">Map</ref> &amp;</type>
          <declname>offset_map</declname>
        </param>
        <briefdescription>
<para>Opens the offset map and fetches the metadata. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>offset_map</parametername>
</parameternamelist>
<parameterdescription>
<para>the offset map to open (should be the larger map). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the offset map is opened within this function </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="397" column="1" bodyfile="necsim/Map.h" bodystart="397" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_map_1a12125d369ac5d078c4b5f1ec03b6b5cc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void necsim::Map&lt; T &gt;::closeOffsetMap</definition>
        <argsstring>(Map &amp;offset_map, const bool &amp;opened_here)</argsstring>
        <name>closeOffsetMap</name>
        <param>
          <type><ref refid="classnecsim_1_1_map" kindref="compound">Map</ref> &amp;</type>
          <declname>offset_map</declname>
        </param>
        <param>
          <type>const bool &amp;</type>
          <declname>opened_here</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="410" column="1" bodyfile="necsim/Map.h" bodystart="410" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_map_1aa6bd393682e149623f6dc02d33da5ba8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void necsim::Map&lt; T &gt;::calculateOffset</definition>
        <argsstring>(Map &amp;offset_map, long &amp;offset_x, long &amp;offset_y)</argsstring>
        <name>calculateOffset</name>
        <param>
          <type><ref refid="classnecsim_1_1_map" kindref="compound">Map</ref> &amp;</type>
          <declname>offset_map</declname>
        </param>
        <param>
          <type>long &amp;</type>
          <declname>offset_x</declname>
        </param>
        <param>
          <type>long &amp;</type>
          <declname>offset_y</declname>
        </param>
        <briefdescription>
<para>Calculates the offset between the two maps. </para>
        </briefdescription>
        <detaileddescription>
<para>The offset_map should be larger and contain this map, otherwise returned values will be negative</para>
<para><simplesect kind="note"><para>Opens a connection to the tif file (if it has not already been opened), which is then closed. If the connection is already open, then it will not be closed and it is assumed logic elsewhere achieves this.</para>
</simplesect>
<simplesect kind="note"><para>Offsets are returned as rounded integers at the resolution of the smaller map.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>offset_map</parametername>
</parameternamelist>
<parameterdescription>
<para>the offset map to read from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset_x</parametername>
</parameternamelist>
<parameterdescription>
<para>the x offset variable to fill </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset_y</parametername>
</parameternamelist>
<parameterdescription>
<para>the y offset variable to fill </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="432" column="1" bodyfile="necsim/Map.h" bodystart="432" bodyend="438"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_map_1ac3650dac57ae6f7bc6cd8cf8df2e3946" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long necsim::Map&lt; T &gt;::roundedScale</definition>
        <argsstring>(Map &amp;offset_map)</argsstring>
        <name>roundedScale</name>
        <param>
          <type><ref refid="classnecsim_1_1_map" kindref="compound">Map</ref> &amp;</type>
          <declname>offset_map</declname>
        </param>
        <briefdescription>
<para>Calculates the relative scale of this map compared to the offset map. </para>
        </briefdescription>
        <detaileddescription>
<para>The offset map should be larger and contain this map.</para>
<para><simplesect kind="note"><para>Only the x resolution is checked, it is assumed the x and y resolutions of both maps is the same (i.e. each cell on the map is a square.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>offset_map</parametername>
</parameternamelist>
<parameterdescription>
<para>the offset map object to read from </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the relative scale of the offset map </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="451" column="1" bodyfile="necsim/Map.h" bodystart="451" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_map_1a7b13faca1bb9ca70594dc4906318d0d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void necsim::Map&lt; T &gt;::internalImport</definition>
        <argsstring>()</argsstring>
        <name>internalImport</name>
        <briefdescription>
<para>Default importer when we rely on the default gdal method of converting between values. Note that importing doubles to ints results in the values being rounded down. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if a tif file exists and can be imported, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="463" column="1" bodyfile="necsim/Map.h" bodystart="463" bodyend="468"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_map_1a9c1e777a6e57234b5eccc7d4b2c65691" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void necsim::Map&lt; T &gt;::defaultImport</definition>
        <argsstring>()</argsstring>
        <name>defaultImport</name>
        <briefdescription>
<para>Default import routine for any type. Provided as a separate function so implementation can be called from any template class type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="474" column="1" bodyfile="necsim/Map.h" bodystart="474" bodyend="494"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_map_1a90cb4a231a8358ba9ea75563d579ca9d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void necsim::Map&lt; T &gt;::importFromDoubleAndMakeBool</definition>
        <argsstring>()</argsstring>
        <name>importFromDoubleAndMakeBool</name>
        <briefdescription>
<para>Imports from the supplied filename into the GeoTiff object, converting doubles to booleans. The threshold for conversion is x&gt;0.5 -&gt; true, false otherwise. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="500" column="1" bodyfile="necsim/Map.h" bodystart="500" bodyend="530"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_map_1a77f15b22824fe1921e8823b36bf942c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T2</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void necsim::Map&lt; T &gt;::importUsingBuffer</definition>
        <argsstring>(GDALDataType dt_buff)</argsstring>
        <name>importUsingBuffer</name>
        <param>
          <type>GDALDataType</type>
          <declname>dt_buff</declname>
        </param>
        <briefdescription>
<para>Imports from the supplied filename into the GeoTiff object, converting doubles to booleans. The threshold for conversion is x&gt;0.5 -&gt; true, false otherwise. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dt_buff</parametername>
</parameternamelist>
<parameterdescription>
<para>the buffer type for the data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T2</parametername>
</parameternamelist>
<parameterdescription>
<para>the template type for data reading. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="539" column="1" bodyfile="necsim/Map.h" bodystart="539" bodyend="607"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_map_1ae3f05d6e22e17ceabbb4bcf571d2dc8f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void necsim::Map&lt; T &gt;::printNumberComplete</definition>
        <argsstring>(const uint32_t &amp;j, unsigned int &amp;number_printed)</argsstring>
        <name>printNumberComplete</name>
        <param>
          <type>const uint32_t &amp;</type>
          <declname>j</declname>
        </param>
        <param>
          <type>unsigned int &amp;</type>
          <declname>number_printed</declname>
        </param>
        <briefdescription>
<para>Print the percentage complete during import. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>the reference for the counter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>number_printed</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of previously printed lines </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="614" column="1" bodyfile="necsim/Map.h" bodystart="614" bodyend="630"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_map_1a367ba176a8b493eda886097358487ef2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void necsim::Map&lt; T &gt;::checkTifImportFailure</definition>
        <argsstring>()</argsstring>
        <name>checkTifImportFailure</name>
        <briefdescription>
<para>Checks the error code of the CPLErr object and formats the error. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="635" column="1" bodyfile="necsim/Map.h" bodystart="635" bodyend="645"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_map_1a82f4a8b79ef64a57a50370a24194faf7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnecsim_1_1_map" kindref="compound">Map</ref> &amp;</type>
        <definition>Map&amp; necsim::Map&lt; T &gt;::operator=</definition>
        <argsstring>(const Map &amp;m)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classnecsim_1_1_map" kindref="compound">Map</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Assignment operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classnecsim_1_1_map" kindref="compound">Map</ref> object to copy from </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the self <ref refid="classnecsim_1_1_map" kindref="compound">Map</ref> object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="674" column="1" bodyfile="necsim/Map.h" bodystart="674" bodyend="691"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_map_1a5bc956d78380553bbc3a8264677d5da6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void necsim::Map&lt; bool &gt;::internalImport</definition>
        <argsstring>()</argsstring>
        <name>internalImport</name>
        <briefdescription>
<para>Overloaded imported for handling conversion of types to boolean. This function should only be once elsewhere, so inlining is fine, allowing this file to remain header only. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="699" column="1" bodyfile="necsim/Map.h" bodystart="699" bodyend="712"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_map_1ac7031ab3bbd14582244445da4b238c2e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void necsim::Map&lt; int8_t &gt;::internalImport</definition>
        <argsstring>()</argsstring>
        <name>internalImport</name>
        <briefdescription>
<para>Overloaded functions for importing from tifs and matching between gdal and C types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="717" column="1" bodyfile="necsim/Map.h" bodystart="717" bodyend="720"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_map_1a4c3d000965f21ff0b4a2221a530a3da0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void necsim::Map&lt; uint8_t &gt;::internalImport</definition>
        <argsstring>()</argsstring>
        <name>internalImport</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="722" column="1" bodyfile="necsim/Map.h" bodystart="722" bodyend="726"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_map_1ab4b2271928108ff8606d8e8e1bd9d353" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void necsim::Map&lt; int16_t &gt;::internalImport</definition>
        <argsstring>()</argsstring>
        <name>internalImport</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="728" column="1" bodyfile="necsim/Map.h" bodystart="728" bodyend="732"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_map_1a411f462c066e75a612602d605b478b23" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void necsim::Map&lt; uint16_t &gt;::internalImport</definition>
        <argsstring>()</argsstring>
        <name>internalImport</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="734" column="1" bodyfile="necsim/Map.h" bodystart="734" bodyend="738"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_map_1ac8fe573f1e2cc2da75e805d092ad870b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void necsim::Map&lt; int32_t &gt;::internalImport</definition>
        <argsstring>()</argsstring>
        <name>internalImport</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="740" column="1" bodyfile="necsim/Map.h" bodystart="740" bodyend="744"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_map_1a3a542bda02b022f540e46df1302b057e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void necsim::Map&lt; uint32_t &gt;::internalImport</definition>
        <argsstring>()</argsstring>
        <name>internalImport</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="746" column="1" bodyfile="necsim/Map.h" bodystart="746" bodyend="750"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_map_1abab55fac5cc1d15a4a819c6229e6842e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void necsim::Map&lt; float &gt;::internalImport</definition>
        <argsstring>()</argsstring>
        <name>internalImport</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="752" column="1" bodyfile="necsim/Map.h" bodystart="752" bodyend="756"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_map_1a2329fcc40c792d91c65553aaf0cac3ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void necsim::Map&lt; double &gt;::internalImport</definition>
        <argsstring>()</argsstring>
        <name>internalImport</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="758" column="1" bodyfile="necsim/Map.h" bodystart="758" bodyend="762"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_matrix_1ac8d16e95e533a6844633c59bc165c65d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void necsim::Matrix&lt; T &gt;::setSize</definition>
        <argsstring>(unsigned long rows, unsigned long cols)</argsstring>
        <name>setSize</name>
        <param>
          <type>unsigned long</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>cols</declname>
        </param>
        <briefdescription>
<para>Sets the matrix size. Similar concept to that for Rows. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rows</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of rows. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cols</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of columns. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Matrix.h" line="96" column="1" bodyfile="necsim/Matrix.h" bodystart="96" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_matrix_1a12d31769465e7c2a3b4798d078e00a47" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long necsim::Matrix&lt; T &gt;::getCols</definition>
        <argsstring>() const</argsstring>
        <name>getCols</name>
        <briefdescription>
<para>Getter for the number of columns. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the number of columns. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Matrix.h" line="111" column="1" bodyfile="necsim/Matrix.h" bodystart="111" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_matrix_1afc78538f61f0e68558e345e1425cc1e0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long necsim::Matrix&lt; T &gt;::getRows</definition>
        <argsstring>() const</argsstring>
        <name>getRows</name>
        <briefdescription>
<para>Getter for the number of rows. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the number of rows. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Matrix.h" line="120" column="1" bodyfile="necsim/Matrix.h" bodystart="120" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_matrix_1a68936bdfa42e877c791fa74775f38d92" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void necsim::Matrix&lt; T &gt;::fill</definition>
        <argsstring>(T val)</argsstring>
        <name>fill</name>
        <param>
          <type>T</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Fills the matrix with the given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to fill </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Matrix.h" line="129" column="1" bodyfile="necsim/Matrix.h" bodystart="129" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_matrix_1af96d6d558cf9b854c8275b716ab3835c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long necsim::Matrix&lt; T &gt;::index</definition>
        <argsstring>(const unsigned long &amp;row, const unsigned long &amp;col) const</argsstring>
        <name>index</name>
        <param>
          <type>const unsigned long &amp;</type>
          <declname>row</declname>
        </param>
        <param>
          <type>const unsigned long &amp;</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Gets the index of a particular row and column in the matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>row</parametername>
</parameternamelist>
<parameterdescription>
<para>the row number to index </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>col</parametername>
</parameternamelist>
<parameterdescription>
<para>the column number to index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the index of row and column within the matrix </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Matrix.h" line="140" column="1" bodyfile="necsim/Matrix.h" bodystart="140" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_matrix_1af67a3a10dbdcc8d4656ce90104efa8ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; necsim::Matrix&lt; T &gt;::get</definition>
        <argsstring>(const unsigned long &amp;row, const unsigned long &amp;col)</argsstring>
        <name>get</name>
        <param>
          <type>const unsigned long &amp;</type>
          <declname>row</declname>
        </param>
        <param>
          <type>const unsigned long &amp;</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Gets the value at a particular index. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>row</parametername>
</parameternamelist>
<parameterdescription>
<para>the row number to get the value at </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>col</parametername>
</parameternamelist>
<parameterdescription>
<para>the column number to get the value at </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value at the specified row and column </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Matrix.h" line="164" column="1" bodyfile="necsim/Matrix.h" bodystart="164" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_matrix_1a5711966132f3c44abb02623fc2236158" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; necsim::Matrix&lt; T &gt;::get</definition>
        <argsstring>(const unsigned long &amp;row, const unsigned long &amp;col) const</argsstring>
        <name>get</name>
        <param>
          <type>const unsigned long &amp;</type>
          <declname>row</declname>
        </param>
        <param>
          <type>const unsigned long &amp;</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Gets the value at a particular index. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>row</parametername>
</parameternamelist>
<parameterdescription>
<para>the row number to get the value at </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>col</parametername>
</parameternamelist>
<parameterdescription>
<para>the column number to get the value at </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value at the specified row and column </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Matrix.h" line="184" column="1" bodyfile="necsim/Matrix.h" bodystart="184" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_matrix_1a710473cfc0712ec15b55f651c887070c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T necsim::Matrix&lt; T &gt;::getCopy</definition>
        <argsstring>(const unsigned long &amp;row, const unsigned long &amp;col) const</argsstring>
        <name>getCopy</name>
        <param>
          <type>const unsigned long &amp;</type>
          <declname>row</declname>
        </param>
        <param>
          <type>const unsigned long &amp;</type>
          <declname>col</declname>
        </param>
        <briefdescription>
<para>Gets the value at a particular index. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>row</parametername>
</parameternamelist>
<parameterdescription>
<para>the row number to get the value at </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>col</parametername>
</parameternamelist>
<parameterdescription>
<para>the column number to get the value at </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value at the specified row and column </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Matrix.h" line="204" column="1" bodyfile="necsim/Matrix.h" bodystart="204" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_matrix_1a5fee481a8ba9e92592afbc2ff5771966" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>vector&lt; T &gt;::iterator</type>
        <definition>vector&lt;T&gt;::iterator necsim::Matrix&lt; T &gt;::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
<para>Returns iterators for range-based for loops. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>iterator to the start of the vector </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Matrix.h" line="222" column="1" bodyfile="necsim/Matrix.h" bodystart="222" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_matrix_1a729d0525a7a8b3031414d67e4319711a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>vector&lt; T &gt;::const_iterator</type>
        <definition>vector&lt;T&gt;::const_iterator necsim::Matrix&lt; T &gt;::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
<para>Returns iterators for range-based for loops. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>iterator to the start of the vector </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Matrix.h" line="240" column="1" bodyfile="necsim/Matrix.h" bodystart="240" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_matrix_1aa6d1861375360cae3241f647972383f1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>vector&lt; T &gt;::iterator</type>
        <definition>vector&lt;T&gt;::iterator necsim::Matrix&lt; T &gt;::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
<para>Returns end iterators for range-based for loops. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>iterator to the end of the vector </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Matrix.h" line="231" column="1" bodyfile="necsim/Matrix.h" bodystart="231" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_matrix_1a59ae7bb1f814a55b94ef17bd476238c8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>vector&lt; T &gt;::const_iterator</type>
        <definition>vector&lt;T&gt;::const_iterator necsim::Matrix&lt; T &gt;::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
<para>Returns end iterators for range-based for loops. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>iterator to the end of the vector </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Matrix.h" line="249" column="1" bodyfile="necsim/Matrix.h" bodystart="249" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_matrix_1a1f55142f41ccd82bdf85a4210ed73952" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double necsim::Matrix&lt; T &gt;::getMean</definition>
        <argsstring>() const</argsstring>
        <name>getMean</name>
        <briefdescription>
<para>Gets the arithmetic mean of the <ref refid="classnecsim_1_1_matrix" kindref="compound">Matrix</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the mean value in the matrix </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Matrix.h" line="259" column="1" bodyfile="necsim/Matrix.h" bodystart="259" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_matrix_1a5028e8ac425a736e529c1b90c7b99796" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T necsim::Matrix&lt; T &gt;::sum</definition>
        <argsstring>() const</argsstring>
        <name>sum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Matrix.h" line="270" column="1" bodyfile="necsim/Matrix.h" bodystart="270" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_matrix_1acba7b8292dfa4af20766a140318282aa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnecsim_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix necsim::Matrix&lt; T &gt;::operator+</definition>
        <argsstring>(const Matrix &amp;m) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classnecsim_1_1_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Overloading the + operator. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>If matrices are of different sizes, the operation is performed on the 0 to minimum values of each dimension. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>the matrix to add to this matrix. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the matrix object which is the sum of the two matrices. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Matrix.h" line="306" column="1" bodyfile="necsim/Matrix.h" bodystart="306" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_matrix_1a59b2969f521f241a5d0fdc7acfc1c311" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnecsim_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix necsim::Matrix&lt; T &gt;::operator-</definition>
        <argsstring>(const Matrix &amp;m) const</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classnecsim_1_1_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Overloading the - operator. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>If matrices are of different sizes, the operation is performed on the 0 to minimum values of each dimension. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>the matrix to subtract from this matrix. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the matrix object which is the subtraction of the two matrices. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Matrix.h" line="329" column="1" bodyfile="necsim/Matrix.h" bodystart="329" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_matrix_1aef31e4e44f771d9b6c102b124443a183" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnecsim_1_1_matrix" kindref="compound">Matrix</ref> &amp;</type>
        <definition>Matrix&amp; necsim::Matrix&lt; T &gt;::operator+=</definition>
        <argsstring>(const Matrix &amp;m)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classnecsim_1_1_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Overloading the += operator so that the new object is written to the current object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>If matrices are of different sizes, the operation is performed on the 0 to minimum values of each dimension. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classnecsim_1_1_matrix" kindref="compound">Matrix</ref> object to add to this matrix. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Matrix.h" line="350" column="1" bodyfile="necsim/Matrix.h" bodystart="350" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_matrix_1accb2b34850a64c4f10c52b24b09f364c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnecsim_1_1_matrix" kindref="compound">Matrix</ref> &amp;</type>
        <definition>Matrix&amp; necsim::Matrix&lt; T &gt;::operator-=</definition>
        <argsstring>(const Matrix &amp;m)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classnecsim_1_1_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Overloading the -= operator so that the new object is written to the current object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>If matrices are of different sizes, the operation is performed on the 0 to minimum values of each dimension. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classnecsim_1_1_matrix" kindref="compound">Matrix</ref> object to subtract from this matrix. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Matrix.h" line="370" column="1" bodyfile="necsim/Matrix.h" bodystart="370" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_matrix_1acf9a9141dc74553c0a3a43a0b66f008d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnecsim_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix necsim::Matrix&lt; T &gt;::operator *</definition>
        <argsstring>(const double s) const</argsstring>
        <name>operator *</name>
        <param>
          <type>const double</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Overloading the * operator for scaling. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>If matrices are of different sizes, the operation is performed on the 0 to minimum values of each dimension. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>the constant to scale the matrix by. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the scaled matrix. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Matrix.h" line="391" column="1" bodyfile="necsim/Matrix.h" bodystart="391" bodyend="402"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_matrix_1a9fcf04fdd8569f115aa0ccc221b5a449" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnecsim_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix necsim::Matrix&lt; T &gt;::operator *</definition>
        <argsstring>(Matrix &amp;m) const</argsstring>
        <name>operator *</name>
        <param>
          <type><ref refid="classnecsim_1_1_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Overloading the * operator for matrix multiplication. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>If matrices are of different sizes, the operation is performed on the 0 to minimum values of each dimension. Multiplies each value in the matrix with its corresponding value in the other matrix. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>the matrix to multiply with </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the product of each ith,jth value of the matrix. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Matrix.h" line="412" column="1" bodyfile="necsim/Matrix.h" bodystart="412" bodyend="426"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_matrix_1a68762b157397bc31bb013dc8987940d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnecsim_1_1_matrix" kindref="compound">Matrix</ref> &amp;</type>
        <definition>Matrix&amp; necsim::Matrix&lt; T &gt;::operator *=</definition>
        <argsstring>(const double s)</argsstring>
        <name>operator *=</name>
        <param>
          <type>const double</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Overloading the *= operator so that the new object is written to the current object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>If matrices are of different sizes, the operation is performed on the 0 to minimum values of each dimension. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classnecsim_1_1_matrix" kindref="compound">Matrix</ref> object to add to this matrix. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Matrix.h" line="434" column="1" bodyfile="necsim/Matrix.h" bodystart="434" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_matrix_1ab1aaddf1f14fc29383c873087bc63c7e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnecsim_1_1_matrix" kindref="compound">Matrix</ref> &amp;</type>
        <definition>Matrix&amp; necsim::Matrix&lt; T &gt;::operator *=</definition>
        <argsstring>(const Matrix &amp;m)</argsstring>
        <name>operator *=</name>
        <param>
          <type>const <ref refid="classnecsim_1_1_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Overloading the *= operator so that the new object is written to the current object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>If matrices are of different sizes, the operation is performed on the 0 to minimum values of each dimension. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classnecsim_1_1_matrix" kindref="compound">Matrix</ref> object to add to this matrix. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Matrix.h" line="452" column="1" bodyfile="necsim/Matrix.h" bodystart="452" bodyend="464"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_matrix_1a1edc0dac773f9e04e7e495b5dc814899" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnecsim_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix necsim::Matrix&lt; T &gt;::operator/</definition>
        <argsstring>(const double s) const</argsstring>
        <name>operator/</name>
        <param>
          <type>const double</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Overloading the / operator for scaling. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>If matrices are of different sizes, the operation is performed on the 0 to minimum values of each dimension. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>the constant to scale the matrix by. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the scaled matrix. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Matrix.h" line="473" column="1" bodyfile="necsim/Matrix.h" bodystart="473" bodyend="484"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_matrix_1a186c9f767c0f07f356f24a62dad928c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnecsim_1_1_matrix" kindref="compound">Matrix</ref> &amp;</type>
        <definition>Matrix&amp; necsim::Matrix&lt; T &gt;::operator/=</definition>
        <argsstring>(const double s)</argsstring>
        <name>operator/=</name>
        <param>
          <type>const double</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Overloading the /= operator so that the new object is written to the current object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>If matrices are of different sizes, the operation is performed on the 0 to minimum values of each dimension. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classnecsim_1_1_matrix" kindref="compound">Matrix</ref> object to add to this matrix. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Matrix.h" line="492" column="1" bodyfile="necsim/Matrix.h" bodystart="492" bodyend="502"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_matrix_1af704a00731d540637b73f4fee528155a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnecsim_1_1_matrix" kindref="compound">Matrix</ref> &amp;</type>
        <definition>Matrix&amp; necsim::Matrix&lt; T &gt;::operator/=</definition>
        <argsstring>(const Matrix &amp;m)</argsstring>
        <name>operator/=</name>
        <param>
          <type>const <ref refid="classnecsim_1_1_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Overloading the /= operator so that the new object is written to the current object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>If matrices are of different sizes, the operation is performed on the 0 to minimum values of each dimension. </para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classnecsim_1_1_matrix" kindref="compound">Matrix</ref> object to add to this matrix. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Matrix.h" line="510" column="1" bodyfile="necsim/Matrix.h" bodystart="510" bodyend="522"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_matrix_1aa7b71c96c4c33ea80ddc175a2d575418" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void necsim::Matrix&lt; T &gt;::setValue</definition>
        <argsstring>(const unsigned long &amp;row, const unsigned long &amp;col, const char *value)</argsstring>
        <name>setValue</name>
        <param>
          <type>const unsigned long &amp;</type>
          <declname>row</declname>
        </param>
        <param>
          <type>const unsigned long &amp;</type>
          <declname>col</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the value at the specified indices, including handling type conversion from char to the template class. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>row</parametername>
</parameternamelist>
<parameterdescription>
<para>the row index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>col</parametername>
</parameternamelist>
<parameterdescription>
<para>the column index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Matrix.h" line="595" column="1" bodyfile="necsim/Matrix.h" bodystart="595" bodyend="598"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_matrix_1acfd741c2de6c37ea69b04159e09b9662" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void necsim::Matrix&lt; T &gt;::setValue</definition>
        <argsstring>(const unsigned long &amp;row, const unsigned long &amp;col, const T &amp;value)</argsstring>
        <name>setValue</name>
        <param>
          <type>const unsigned long &amp;</type>
          <declname>row</declname>
        </param>
        <param>
          <type>const unsigned long &amp;</type>
          <declname>col</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the value at the specified indices, including handling type conversion from char to the template class. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>row</parametername>
</parameternamelist>
<parameterdescription>
<para>the row index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>col</parametername>
</parameternamelist>
<parameterdescription>
<para>the column index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Matrix.h" line="607" column="1" bodyfile="necsim/Matrix.h" bodystart="607" bodyend="610"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_matrix_1a1d4a5a6210d42338b41daad5112bd3df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool necsim::Matrix&lt; T &gt;::importCsv</definition>
        <argsstring>(const string &amp;filename)</argsstring>
        <name>importCsv</name>
        <param>
          <type>const string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Imports the matrix from a csv file using the fast-csv-parser method. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>the path to the file to import.Imports the matrix from a csv file using the standard, slower method. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="deprecated_1_deprecated000002"><xreftitle>Deprecated</xreftitle><xrefdescription><para>this function should not be used any more as it is much slower. </para>
</xrefdescription></xrefsect><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>the path to the file to import. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the csv can be imported. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Matrix.h" line="711" column="1" bodyfile="necsim/Matrix.h" bodystart="711" bodyend="753"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classnecsim_1_1_map_1a5f8b100f4f0ca3215429cc9c46cdd90a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend ostream &amp;</type>
        <definition>ostream&amp; operator&gt;&gt;</definition>
        <argsstring>(ostream &amp;os, const Map &amp;m)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classnecsim_1_1_map" kindref="compound">Map</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Output operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>os</parametername>
</parameternamelist>
<parameterdescription>
<para>the output stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>the object to write out </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the modified output stream </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="653" column="1" bodyfile="necsim/Map.h" bodystart="653" bodyend="656"/>
      </memberdef>
      <memberdef kind="friend" id="classnecsim_1_1_map_1a2cb87ce0bbf263326a632b9537725d96" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend istream &amp;</type>
        <definition>istream&amp; operator&lt;&lt;</definition>
        <argsstring>(istream &amp;is, Map &amp;m)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="classnecsim_1_1_map" kindref="compound">Map</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Input operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>is</parametername>
</parameternamelist>
<parameterdescription>
<para>the input stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>the object to write in </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the modified input stream </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Map.h" line="664" column="1" bodyfile="necsim/Map.h" bodystart="664" bodyend="667"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Read a a tif file to a matrix and obtain spatial metadata. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the <ref refid="classnecsim_1_1_matrix" kindref="compound">Matrix</ref> to create. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="171">
        <label>necsim::Map&lt; T &gt;</label>
        <link refid="classnecsim_1_1_map"/>
        <childnode refid="172" relation="public-inheritance">
        </childnode>
      </node>
      <node id="172">
        <label>necsim::Matrix&lt; T &gt;</label>
        <link refid="classnecsim_1_1_matrix"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="173">
        <label>necsim::Map&lt; T &gt;</label>
        <link refid="classnecsim_1_1_map"/>
        <childnode refid="174" relation="public-inheritance">
        </childnode>
        <childnode refid="175" relation="usage">
          <edgelabel>file_name</edgelabel>
        </childnode>
        <childnode refid="177" relation="usage">
          <edgelabel>po_dataset</edgelabel>
        </childnode>
        <childnode refid="178" relation="usage">
          <edgelabel>po_band</edgelabel>
        </childnode>
      </node>
      <node id="176">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="174">
        <label>necsim::Matrix&lt; T &gt;</label>
        <link refid="classnecsim_1_1_matrix"/>
      </node>
      <node id="178">
        <label>std::shared_ptr&lt; GDALRasterBand * &gt;</label>
      </node>
      <node id="177">
        <label>std::shared_ptr&lt; GDALDataset * &gt;</label>
      </node>
      <node id="175">
        <label>std::string</label>
        <childnode refid="176" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="necsim/Map.h" line="40" column="1" bodyfile="necsim/Map.h" bodystart="39" bodyend="693"/>
    <listofallmembers>
      <member refid="classnecsim_1_1_matrix_1a5fee481a8ba9e92592afbc2ff5771966" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>begin</name></member>
      <member refid="classnecsim_1_1_matrix_1a729d0525a7a8b3031414d67e4319711a" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>begin</name></member>
      <member refid="classnecsim_1_1_map_1a7c81c2e78c974cb16d2393e03edc02de" prot="protected" virt="non-virtual"><scope>necsim::Map</scope><name>block_x_size</name></member>
      <member refid="classnecsim_1_1_map_1a60fbda0dbd54c682b2fcbb5dfd77b3e9" prot="protected" virt="non-virtual"><scope>necsim::Map</scope><name>block_y_size</name></member>
      <member refid="classnecsim_1_1_map_1aa6bd393682e149623f6dc02d33da5ba8" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>calculateOffset</name></member>
      <member refid="classnecsim_1_1_map_1a367ba176a8b493eda886097358487ef2" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>checkTifImportFailure</name></member>
      <member refid="classnecsim_1_1_map_1ace0b02a482ebb173367635ac3c32f9d3" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>close</name></member>
      <member refid="classnecsim_1_1_map_1a12125d369ac5d078c4b5f1ec03b6b5cc" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>closeOffsetMap</name></member>
      <member refid="classnecsim_1_1_map_1a4c352dbab8cb0620ebe50b4499b45729" prot="protected" virt="non-virtual"><scope>necsim::Map</scope><name>cpl_error</name></member>
      <member refid="classnecsim_1_1_map_1a320d3c94734b3e4fee7008d34cf2b0d6" prot="protected" virt="non-virtual"><scope>necsim::Map</scope><name>cpl_error_set</name></member>
      <member refid="classnecsim_1_1_map_1a9c1e777a6e57234b5eccc7d4b2c65691" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>defaultImport</name></member>
      <member refid="classnecsim_1_1_matrix_1aa6d1861375360cae3241f647972383f1" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>end</name></member>
      <member refid="classnecsim_1_1_matrix_1a59ae7bb1f814a55b94ef17bd476238c8" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>end</name></member>
      <member refid="classnecsim_1_1_map_1a80bebe1907879e3836815c0aa9eda366" prot="protected" virt="non-virtual"><scope>necsim::Map</scope><name>file_name</name></member>
      <member refid="classnecsim_1_1_matrix_1a68936bdfa42e877c791fa74775f38d92" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>fill</name></member>
      <member refid="classnecsim_1_1_map_1a5741de4f6a99d672825eda0e1569a8c8" prot="protected" virt="non-virtual"><scope>necsim::Map</scope><name>gdal_data_type</name></member>
      <member refid="classnecsim_1_1_matrix_1af67a3a10dbdcc8d4656ce90104efa8ba" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>get</name></member>
      <member refid="classnecsim_1_1_matrix_1a5711966132f3c44abb02623fc2236158" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>get</name></member>
      <member refid="classnecsim_1_1_map_1a5bc5eab8105d01c074d4e1c1fbd4e555" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>getBlockSizes</name></member>
      <member refid="classnecsim_1_1_matrix_1a12d31769465e7c2a3b4798d078e00a47" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>getCols</name></member>
      <member refid="classnecsim_1_1_matrix_1a710473cfc0712ec15b55f651c887070c" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>getCopy</name></member>
      <member refid="classnecsim_1_1_map_1a240c6967fe89be4fd806b64bf76dc136" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>getFileName</name></member>
      <member refid="classnecsim_1_1_matrix_1a1f55142f41ccd82bdf85a4210ed73952" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>getMean</name></member>
      <member refid="classnecsim_1_1_map_1ae8d236fa822879739938831c83f97f4c" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>getMetaData</name></member>
      <member refid="classnecsim_1_1_map_1a3d4c59978ea148dd1d89c21fbe50494e" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>getRasterBand</name></member>
      <member refid="classnecsim_1_1_matrix_1afc78538f61f0e68558e345e1425cc1e0" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>getRows</name></member>
      <member refid="classnecsim_1_1_map_1a5daf1f32ac53353cbe61ddbe8f7d2248" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>getUpperLeftX</name></member>
      <member refid="classnecsim_1_1_map_1ac626ab1ce04f6f47a6f5b87df6fad3ae" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>getUpperLeftY</name></member>
      <member refid="classnecsim_1_1_map_1a6e753018fee20348447f55cd5ed0f5dd" prot="public" virt="virtual"><scope>necsim::Map</scope><name>import</name></member>
      <member refid="classnecsim_1_1_matrix_1a1d4a5a6210d42338b41daad5112bd3df" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>importCsv</name></member>
      <member refid="classnecsim_1_1_map_1a90cb4a231a8358ba9ea75563d579ca9d" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>importFromDoubleAndMakeBool</name></member>
      <member refid="classnecsim_1_1_map_1ad3ee93f3c420a537587de4b64e3d7cf5" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>importTif</name></member>
      <member refid="classnecsim_1_1_map_1a77f15b22824fe1921e8823b36bf942c5" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>importUsingBuffer</name></member>
      <member refid="classnecsim_1_1_matrix_1af96d6d558cf9b854c8275b716ab3835c" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>index</name></member>
      <member refid="classnecsim_1_1_map_1a7b13faca1bb9ca70594dc4906318d0d8" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>internalImport</name></member>
      <member refid="classnecsim_1_1_map_1a5bc956d78380553bbc3a8264677d5da6" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>internalImport</name></member>
      <member refid="classnecsim_1_1_map_1ac7031ab3bbd14582244445da4b238c2e" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>internalImport</name></member>
      <member refid="classnecsim_1_1_map_1a4c3d000965f21ff0b4a2221a530a3da0" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>internalImport</name></member>
      <member refid="classnecsim_1_1_map_1ab4b2271928108ff8606d8e8e1bd9d353" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>internalImport</name></member>
      <member refid="classnecsim_1_1_map_1a411f462c066e75a612602d605b478b23" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>internalImport</name></member>
      <member refid="classnecsim_1_1_map_1ac8fe573f1e2cc2da75e805d092ad870b" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>internalImport</name></member>
      <member refid="classnecsim_1_1_map_1a3a542bda02b022f540e46df1302b057e" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>internalImport</name></member>
      <member refid="classnecsim_1_1_map_1abab55fac5cc1d15a4a819c6229e6842e" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>internalImport</name></member>
      <member refid="classnecsim_1_1_map_1a2329fcc40c792d91c65553aaf0cac3ca" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>internalImport</name></member>
      <member refid="classnecsim_1_1_map_1ac01f4588b58dcd1af3b96e8602612beb" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>isOpen</name></member>
      <member refid="classnecsim_1_1_map_1ab163122277162f2e324a8dc1d6c05bfc" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>Map</name></member>
      <member refid="classnecsim_1_1_matrix_1a3448e6eb1becb8b4ae913096b6b5a14d" prot="protected" virt="non-virtual"><scope>necsim::Map</scope><name>matrix</name></member>
      <member refid="classnecsim_1_1_matrix_1a213bef5520b5ebbe90e91e3ce2541ba7" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>Matrix</name></member>
      <member refid="classnecsim_1_1_matrix_1ae16eecda8e88ca6aaa6e9873ffc25c6f" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>Matrix</name></member>
      <member refid="classnecsim_1_1_map_1a0934d85df9105cfec7aa0b1fa133efa0" prot="protected" virt="non-virtual"><scope>necsim::Map</scope><name>no_data_value</name></member>
      <member refid="classnecsim_1_1_matrix_1ad22e95f402d410d965c4d4c9aa61b5f6" prot="protected" virt="non-virtual"><scope>necsim::Map</scope><name>num_cols</name></member>
      <member refid="classnecsim_1_1_matrix_1afa8091e7e9ad63dd1aec96955b369fda" prot="protected" virt="non-virtual"><scope>necsim::Map</scope><name>num_rows</name></member>
      <member refid="classnecsim_1_1_map_1acd05d519d992aaca1d44ef16d833ec23" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>open</name></member>
      <member refid="classnecsim_1_1_map_1a577dff0b15b2e695720e00a244b2167f" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>open</name></member>
      <member refid="classnecsim_1_1_map_1ace424acca570f238fa886f20e704240f" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>openOffsetMap</name></member>
      <member refid="classnecsim_1_1_matrix_1acf9a9141dc74553c0a3a43a0b66f008d" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>operator *</name></member>
      <member refid="classnecsim_1_1_matrix_1a9fcf04fdd8569f115aa0ccc221b5a449" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>operator *</name></member>
      <member refid="classnecsim_1_1_matrix_1a68762b157397bc31bb013dc8987940d8" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>operator *=</name></member>
      <member refid="classnecsim_1_1_matrix_1ab1aaddf1f14fc29383c873087bc63c7e" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>operator *=</name></member>
      <member refid="classnecsim_1_1_matrix_1acba7b8292dfa4af20766a140318282aa" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>operator+</name></member>
      <member refid="classnecsim_1_1_matrix_1aef31e4e44f771d9b6c102b124443a183" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>operator+=</name></member>
      <member refid="classnecsim_1_1_matrix_1a59b2969f521f241a5d0fdc7acfc1c311" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>operator-</name></member>
      <member refid="classnecsim_1_1_matrix_1accb2b34850a64c4f10c52b24b09f364c" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>operator-=</name></member>
      <member refid="classnecsim_1_1_matrix_1a1edc0dac773f9e04e7e495b5dc814899" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>operator/</name></member>
      <member refid="classnecsim_1_1_matrix_1a186c9f767c0f07f356f24a62dad928c7" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>operator/=</name></member>
      <member refid="classnecsim_1_1_matrix_1af704a00731d540637b73f4fee528155a" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>operator/=</name></member>
      <member refid="classnecsim_1_1_map_1a2cb87ce0bbf263326a632b9537725d96" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>operator&lt;&lt;</name></member>
      <member refid="classnecsim_1_1_map_1a82f4a8b79ef64a57a50370a24194faf7" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>operator=</name></member>
      <member refid="classnecsim_1_1_matrix_1a9973f911878111de8a659c80ce86ccab" prot="public" virt="non-virtual" ambiguityscope="necsim::Matrix::"><scope>necsim::Map</scope><name>operator=</name></member>
      <member refid="classnecsim_1_1_map_1a5f8b100f4f0ca3215429cc9c46cdd90a" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>operator&gt;&gt;</name></member>
      <member refid="classnecsim_1_1_map_1abd04c732201595f898f9fd59b0fdd948" prot="protected" virt="non-virtual"><scope>necsim::Map</scope><name>po_band</name></member>
      <member refid="classnecsim_1_1_map_1a293d6f98bedeadd3e00fa62abfbe32c4" prot="protected" virt="non-virtual"><scope>necsim::Map</scope><name>po_dataset</name></member>
      <member refid="classnecsim_1_1_map_1ae3f05d6e22e17ceabbb4bcf571d2dc8f" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>printNumberComplete</name></member>
      <member refid="classnecsim_1_1_map_1a3bab2a1f71ba318f4c2a0340425f01aa" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>removeCPLErrorHandler</name></member>
      <member refid="classnecsim_1_1_map_1ac3650dac57ae6f7bc6cd8cf8df2e3946" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>roundedScale</name></member>
      <member refid="classnecsim_1_1_map_1a657584426c9d2d189e2622d028c4c8a0" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>setCPLErrorHandler</name></member>
      <member refid="classnecsim_1_1_matrix_1ac8d16e95e533a6844633c59bc165c65d" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>setSize</name></member>
      <member refid="classnecsim_1_1_matrix_1aa7b71c96c4c33ea80ddc175a2d575418" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>setValue</name></member>
      <member refid="classnecsim_1_1_matrix_1acfd741c2de6c37ea69b04159e09b9662" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>setValue</name></member>
      <member refid="classnecsim_1_1_matrix_1a5028e8ac425a736e529c1b90c7b99796" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>sum</name></member>
      <member refid="classnecsim_1_1_map_1a8db85d38a03785273893b0f224ec4dc2" prot="protected" virt="non-virtual"><scope>necsim::Map</scope><name>upper_left_x</name></member>
      <member refid="classnecsim_1_1_map_1a56a84b8f5c5c9bf51bb95757b1c5667b" prot="protected" virt="non-virtual"><scope>necsim::Map</scope><name>upper_left_y</name></member>
      <member refid="classnecsim_1_1_map_1acb2b02e166a757d8483ab9a0ad6f37e4" prot="protected" virt="non-virtual"><scope>necsim::Map</scope><name>x_res</name></member>
      <member refid="classnecsim_1_1_map_1a9103e2e576418741623e232d8b054adb" prot="protected" virt="non-virtual"><scope>necsim::Map</scope><name>y_res</name></member>
      <member refid="classnecsim_1_1_map_1a48a93f15362321bf3b594cb9906aba07" prot="public" virt="non-virtual"><scope>necsim::Map</scope><name>~Map</name></member>
      <member refid="classnecsim_1_1_matrix_1a1c00c456ea7c37e06d950b30b5d0262f" prot="public" virt="virtual"><scope>necsim::Map</scope><name>~Matrix</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
