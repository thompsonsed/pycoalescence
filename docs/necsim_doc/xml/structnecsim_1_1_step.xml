<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="structnecsim_1_1_step" kind="class" language="C++" prot="public">
    <compoundname>necsim::Step</compoundname>
    <basecompoundref refid="structnecsim_1_1_map_location" prot="public" virt="virtual">necsim::MapLocation</basecompoundref>
    <includes refid="_step_8h" local="no">Step.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structnecsim_1_1_step_1a523c43fb39ff2c27e02d6f08361ca98e" prot="public" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long necsim::Step::chosen</definition>
        <argsstring></argsstring>
        <name>chosen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Step.h" line="27" column="1" bodyfile="necsim/Step.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnecsim_1_1_step_1ac8ceaa3efec93f2152a12e4b9e66cc32" prot="public" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long necsim::Step::coalchosen</definition>
        <argsstring></argsstring>
        <name>coalchosen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Step.h" line="27" column="1" bodyfile="necsim/Step.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnecsim_1_1_step_1a231cbe26032971f15ad8e88edfa9d87b" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool necsim::Step::coal</definition>
        <argsstring></argsstring>
        <name>coal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Step.h" line="28" column="1" bodyfile="necsim/Step.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnecsim_1_1_step_1a3eae7c8fb8638ab0c8cdb3acc8920da3" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool necsim::Step::bContinueSim</definition>
        <argsstring></argsstring>
        <name>bContinueSim</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Step.h" line="28" column="1" bodyfile="necsim/Step.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnecsim_1_1_step_1a1109aea10fd4444f0cba1af3d1abac1e" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int necsim::Step::time_reference</definition>
        <argsstring></argsstring>
        <name>time_reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Step.h" line="29" column="1" bodyfile="necsim/Step.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnecsim_1_1_map_location_1ab217f617198dac5429d7c8fa8dad4acc" prot="public" static="no" mutable="no">
        <type>long</type>
        <definition>long necsim::MapLocation::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/MapLocation.h" line="12" column="1" bodyfile="necsim/MapLocation.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnecsim_1_1_map_location_1adf2859c3cf8fad4efd4c48ef3e00c9bc" prot="public" static="no" mutable="no">
        <type>long</type>
        <definition>long necsim::MapLocation::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/MapLocation.h" line="13" column="1" bodyfile="necsim/MapLocation.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnecsim_1_1_map_location_1a6394b8b8d9a753d3b8744d99fce6e08f" prot="public" static="no" mutable="no">
        <type>long</type>
        <definition>long necsim::MapLocation::xwrap</definition>
        <argsstring></argsstring>
        <name>xwrap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/MapLocation.h" line="14" column="1" bodyfile="necsim/MapLocation.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnecsim_1_1_map_location_1ab9e0b2d070f4ebca240e9538e07d3893" prot="public" static="no" mutable="no">
        <type>long</type>
        <definition>long necsim::MapLocation::ywrap</definition>
        <argsstring></argsstring>
        <name>ywrap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/MapLocation.h" line="15" column="1" bodyfile="necsim/MapLocation.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structnecsim_1_1_step_1ad01b4a664925f18a463ce354be80499a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>necsim::Step::Step</definition>
        <argsstring>()</argsstring>
        <name>Step</name>
        <briefdescription>
<para><ref refid="structnecsim_1_1_step" kindref="compound">Step</ref> constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Step.h" line="38" column="1" bodyfile="necsim/Step.h" bodystart="38" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="structnecsim_1_1_step_1a36da75b9cb19063a858f49f7cfa2988e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>necsim::Step::Step</definition>
        <argsstring>(const Cell &amp;cell)</argsstring>
        <name>Step</name>
        <param>
          <type>const <ref refid="structnecsim_1_1_cell" kindref="compound">Cell</ref> &amp;</type>
          <declname>cell</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Step.h" line="50" column="1" bodyfile="necsim/Step.h" bodystart="50" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="structnecsim_1_1_step_1a30603a8a2323b2308cf6c2d54f73cf2b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void necsim::Step::wipeData</definition>
        <argsstring>()</argsstring>
        <name>wipeData</name>
        <briefdescription>
<para>Removes all stored data from the step. This should be run at the start of a single coalescence step. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Step.h" line="64" column="1" bodyfile="necsim/Step.h" bodystart="64" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="structnecsim_1_1_map_location_1a9684c61f1c6d6d0a6327de555e45ecab" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool necsim::MapLocation::isOnGrid</definition>
        <argsstring>() const</argsstring>
        <name>isOnGrid</name>
        <briefdescription>
<para>Checks if the location is directly on the grid without wrapping (i.e. xwrap and ywrap are 0). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if on the grid </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/MapLocation.h" line="27" column="1" bodyfile="necsim/MapLocation.cpp" bodystart="8" bodyend="11"/>
      </memberdef>
      <memberdef kind="function" id="structnecsim_1_1_map_location_1a1184259a2a3fd8e13319ed009b25c30f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool necsim::MapLocation::operator==</definition>
        <argsstring>(MapLocation const &amp;m) const</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="structnecsim_1_1_map_location" kindref="compound">MapLocation</ref> const &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Equality operator for <ref refid="structnecsim_1_1_map_location" kindref="compound">MapLocation</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="structnecsim_1_1_map_location" kindref="compound">MapLocation</ref> object to compare against </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the x, y, xwrap and ywrap are identical </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/MapLocation.h" line="34" column="1" bodyfile="necsim/MapLocation.cpp" bodystart="13" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="structnecsim_1_1_map_location_1a980d585a7c0f81a5559b528367df5d42" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool necsim::MapLocation::operator!=</definition>
        <argsstring>(MapLocation const &amp;m) const</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="structnecsim_1_1_map_location" kindref="compound">MapLocation</ref> const &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Inequality operator for <ref refid="structnecsim_1_1_map_location" kindref="compound">MapLocation</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="structnecsim_1_1_map_location" kindref="compound">MapLocation</ref> object to compare against </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if locations are not identical </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/MapLocation.h" line="41" column="1" bodyfile="necsim/MapLocation.cpp" bodystart="18" bodyend="21"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Stores the elements associated with a single step in a coalescence simulation. </para>
    </briefdescription>
    <detaileddescription>
<para>This object should only contain transient variables that are used within a single simulation step and therefore should not be important for pausing/resuming simulations. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="595">
        <label>necsim::MapLocation</label>
        <link refid="structnecsim_1_1_map_location"/>
      </node>
      <node id="594">
        <label>necsim::Step</label>
        <link refid="structnecsim_1_1_step"/>
        <childnode refid="595" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="597">
        <label>necsim::MapLocation</label>
        <link refid="structnecsim_1_1_map_location"/>
      </node>
      <node id="596">
        <label>necsim::Step</label>
        <link refid="structnecsim_1_1_step"/>
        <childnode refid="597" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="necsim/Step.h" line="26" column="1" bodyfile="necsim/Step.h" bodystart="25" bodyend="75"/>
    <listofallmembers>
      <member refid="structnecsim_1_1_step_1a3eae7c8fb8638ab0c8cdb3acc8920da3" prot="public" virt="non-virtual"><scope>necsim::Step</scope><name>bContinueSim</name></member>
      <member refid="structnecsim_1_1_step_1a523c43fb39ff2c27e02d6f08361ca98e" prot="public" virt="non-virtual"><scope>necsim::Step</scope><name>chosen</name></member>
      <member refid="structnecsim_1_1_step_1a231cbe26032971f15ad8e88edfa9d87b" prot="public" virt="non-virtual"><scope>necsim::Step</scope><name>coal</name></member>
      <member refid="structnecsim_1_1_step_1ac8ceaa3efec93f2152a12e4b9e66cc32" prot="public" virt="non-virtual"><scope>necsim::Step</scope><name>coalchosen</name></member>
      <member refid="structnecsim_1_1_map_location_1a9684c61f1c6d6d0a6327de555e45ecab" prot="public" virt="non-virtual"><scope>necsim::Step</scope><name>isOnGrid</name></member>
      <member refid="structnecsim_1_1_map_location_1a27d39cd5a988fc584c957a6cbe0b8c13" prot="public" virt="non-virtual"><scope>necsim::Step</scope><name>MapLocation</name></member>
      <member refid="structnecsim_1_1_map_location_1a7616b39abda2bd17b2b56b6560edc835" prot="public" virt="non-virtual"><scope>necsim::Step</scope><name>MapLocation</name></member>
      <member refid="structnecsim_1_1_map_location_1a980d585a7c0f81a5559b528367df5d42" prot="public" virt="non-virtual"><scope>necsim::Step</scope><name>operator!=</name></member>
      <member refid="structnecsim_1_1_map_location_1a1184259a2a3fd8e13319ed009b25c30f" prot="public" virt="non-virtual"><scope>necsim::Step</scope><name>operator==</name></member>
      <member refid="structnecsim_1_1_step_1ad01b4a664925f18a463ce354be80499a" prot="public" virt="non-virtual"><scope>necsim::Step</scope><name>Step</name></member>
      <member refid="structnecsim_1_1_step_1a36da75b9cb19063a858f49f7cfa2988e" prot="public" virt="non-virtual"><scope>necsim::Step</scope><name>Step</name></member>
      <member refid="structnecsim_1_1_step_1a1109aea10fd4444f0cba1af3d1abac1e" prot="public" virt="non-virtual"><scope>necsim::Step</scope><name>time_reference</name></member>
      <member refid="structnecsim_1_1_step_1a30603a8a2323b2308cf6c2d54f73cf2b" prot="public" virt="non-virtual"><scope>necsim::Step</scope><name>wipeData</name></member>
      <member refid="structnecsim_1_1_map_location_1ab217f617198dac5429d7c8fa8dad4acc" prot="public" virt="non-virtual"><scope>necsim::Step</scope><name>x</name></member>
      <member refid="structnecsim_1_1_map_location_1a6394b8b8d9a753d3b8744d99fce6e08f" prot="public" virt="non-virtual"><scope>necsim::Step</scope><name>xwrap</name></member>
      <member refid="structnecsim_1_1_map_location_1adf2859c3cf8fad4efd4c48ef3e00c9bc" prot="public" virt="non-virtual"><scope>necsim::Step</scope><name>y</name></member>
      <member refid="structnecsim_1_1_map_location_1ab9e0b2d070f4ebca240e9538e07d3893" prot="public" virt="non-virtual"><scope>necsim::Step</scope><name>ywrap</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
