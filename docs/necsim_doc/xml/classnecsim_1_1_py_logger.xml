<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classnecsim_1_1_py_logger" kind="class" language="C++" prot="public">
    <compoundname>necsim::PyLogger</compoundname>
    <basecompoundref refid="classnecsim_1_1_logger" prot="public" virt="non-virtual">necsim::Logger</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnecsim_1_1_py_logger_1a66698a56d503687568a15bf263429408" prot="private" static="no" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* necsim::PyLogger::py_logger</definition>
        <argsstring></argsstring>
        <name>py_logger</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="PyLogger.h" line="25" column="1" bodyfile="PyLogger.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnecsim_1_1_py_logger_1a2d951a7da5e3249e316a5a7514c86534" prot="private" static="no" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* necsim::PyLogger::py_log_function</definition>
        <argsstring></argsstring>
        <name>py_log_function</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="PyLogger.h" line="26" column="1" bodyfile="PyLogger.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnecsim_1_1_py_logger_1a8d2d92a2583df0b0f096d0f3d4c77f9d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool necsim::PyLogger::logger_set</definition>
        <argsstring></argsstring>
        <name>logger_set</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="PyLogger.h" line="27" column="1" bodyfile="PyLogger.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnecsim_1_1_py_logger_1a98814ae8c4509991349fbd7056066edf" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool necsim::PyLogger::log_function_set</definition>
        <argsstring></argsstring>
        <name>log_function_set</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="PyLogger.h" line="28" column="1" bodyfile="PyLogger.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnecsim_1_1_py_logger_1a24714fbe699d52f086840c584af1b7f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>necsim::PyLogger::PyLogger</definition>
        <argsstring>()</argsstring>
        <name>PyLogger</name>
        <briefdescription>
<para>Default constructor for <ref refid="classnecsim_1_1_py_logger" kindref="compound">PyLogger</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="PyLogger.h" line="34" column="1" bodyfile="PyLogger.h" bodystart="34" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_py_logger_1a6f71b45f2238304664ebc1f2f5166299" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>necsim::PyLogger::~PyLogger</definition>
        <argsstring>() override</argsstring>
        <name>~PyLogger</name>
        <briefdescription>
<para>Safely deletes the Python references. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="PyLogger.h" line="43" column="1" bodyfile="PyLogger.h" bodystart="43" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_py_logger_1a79ea4fad083911c6477f499470508fae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void necsim::PyLogger::setLogger</definition>
        <argsstring>(PyObject *logger)</argsstring>
        <name>setLogger</name>
        <param>
          <type>PyObject *</type>
          <declname>logger</declname>
        </param>
        <briefdescription>
<para>Sets the logger object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>logger</parametername>
</parameternamelist>
<parameterdescription>
<para>the log object that is written out to </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="PyLogger.h" line="53" column="1" bodyfile="PyLogger.cpp" bodystart="18" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_py_logger_1a8064dc012ebdced4ee22375cceac27c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void necsim::PyLogger::setLogFunction</definition>
        <argsstring>(PyObject *log_function)</argsstring>
        <name>setLogFunction</name>
        <param>
          <type>PyObject *</type>
          <declname>log_function</declname>
        </param>
        <briefdescription>
<para>Sets the logger function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>log_function</parametername>
</parameternamelist>
<parameterdescription>
<para>the function that will be used for writing out logs </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="PyLogger.h" line="59" column="1" bodyfile="PyLogger.cpp" bodystart="30" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_py_logger_1a9a1c62aa0a96e534363589f3e72759c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool necsim::PyLogger::isSetup</definition>
        <argsstring>()</argsstring>
        <name>isSetup</name>
        <briefdescription>
<para>Checks if the logger has been setup. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if the logger object and the logger function have been set </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="PyLogger.h" line="65" column="1" bodyfile="PyLogger.cpp" bodystart="43" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_py_logger_1aa7dd5eab89c9f5ff01015b4ebc651da6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void necsim::PyLogger::writeInfo</definition>
        <argsstring>(string message) override</argsstring>
        <name>writeInfo</name>
        <param>
          <type>string</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Writes a message to the log object with level 20. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message to write out </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="PyLogger.h" line="71" column="1" bodyfile="PyLogger.cpp" bodystart="52" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_py_logger_1abffc6ead4def6298b5a8b4593472f441" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void necsim::PyLogger::writeWarning</definition>
        <argsstring>(string message) override</argsstring>
        <name>writeWarning</name>
        <param>
          <type>string</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Writes a message to the log object with level 30. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message to write out </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="PyLogger.h" line="77" column="1" bodyfile="PyLogger.cpp" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_py_logger_1a8efe2f65324d090262da0e89eb8798f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void necsim::PyLogger::writeError</definition>
        <argsstring>(string message) override</argsstring>
        <name>writeError</name>
        <param>
          <type>string</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Writes a message to the log object with level 40. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message to write out </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="PyLogger.h" line="83" column="1" bodyfile="PyLogger.cpp" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_py_logger_1a113ba509aefa58e6c74ee7f5d09e73f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void necsim::PyLogger::writeCritical</definition>
        <argsstring>(string message) override</argsstring>
        <name>writeCritical</name>
        <param>
          <type>string</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Writes a message to the log object with level 50. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message to write out </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="PyLogger.h" line="89" column="1" bodyfile="PyLogger.cpp" bodystart="68" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_py_logger_1ad634ee1d54bcec0c17d9bde780eedb01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void necsim::PyLogger::write</definition>
        <argsstring>(const int &amp;level, string message)</argsstring>
        <name>write</name>
        <param>
          <type>const int &amp;</type>
          <declname>level</declname>
        </param>
        <param>
          <type>string</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Writes a message to the log object with the supplied leve. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>the logging level to write out at </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message to write out </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="PyLogger.h" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_py_logger_1a8cfa614feb0f79e1a51d65731faaf541" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void necsim::PyLogger::write</definition>
        <argsstring>(const int &amp;level, stringstream &amp;message)</argsstring>
        <name>write</name>
        <param>
          <type>const int &amp;</type>
          <declname>level</declname>
        </param>
        <param>
          <type>stringstream &amp;</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Writes a message to the log object with the supplied leve. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>the logging level to write out at </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message to write out </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="PyLogger.h" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_logger_1a01a5c830a92c2f42e1c0b1a575b8a44f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void necsim::Logger::writeInfo</definition>
        <argsstring>(string message)</argsstring>
        <name>writeInfo</name>
        <param>
          <type>string</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Logs an information message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message to write out </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Logger.h" line="41" column="1" bodyfile="necsim/Logger.cpp" bodystart="18" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_logger_1a5c9f84861823b6ac1cb6e9f97cbb1291" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void necsim::Logger::writeWarning</definition>
        <argsstring>(string message)</argsstring>
        <name>writeWarning</name>
        <param>
          <type>string</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Logs a warning message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message to write out </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Logger.h" line="47" column="1" bodyfile="necsim/Logger.cpp" bodystart="28" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_logger_1a96c9f01a6de5bb7d2009155dd203f14c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void necsim::Logger::writeError</definition>
        <argsstring>(string message)</argsstring>
        <name>writeError</name>
        <param>
          <type>string</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Logs an error message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message to write out </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Logger.h" line="53" column="1" bodyfile="necsim/Logger.cpp" bodystart="38" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classnecsim_1_1_logger_1a8e6264d58ead1b02850dd5a7c7e9ca73" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void necsim::Logger::writeCritical</definition>
        <argsstring>(string message)</argsstring>
        <name>writeCritical</name>
        <param>
          <type>string</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Logs a critical message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>the message to write out </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Logger.h" line="59" column="1" bodyfile="necsim/Logger.cpp" bodystart="48" bodyend="56"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="398">
        <label>necsim::Logger</label>
        <link refid="classnecsim_1_1_logger"/>
      </node>
      <node id="397">
        <label>necsim::PyLogger</label>
        <link refid="classnecsim_1_1_py_logger"/>
        <childnode refid="398" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="400">
        <label>necsim::Logger</label>
        <link refid="classnecsim_1_1_logger"/>
      </node>
      <node id="399">
        <label>necsim::PyLogger</label>
        <link refid="classnecsim_1_1_py_logger"/>
        <childnode refid="400" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="PyLogger.h" line="23" column="1" bodyfile="PyLogger.h" bodystart="22" bodyend="105"/>
    <listofallmembers>
      <member refid="classnecsim_1_1_py_logger_1a9a1c62aa0a96e534363589f3e72759c1" prot="public" virt="non-virtual"><scope>necsim::PyLogger</scope><name>isSetup</name></member>
      <member refid="classnecsim_1_1_py_logger_1a98814ae8c4509991349fbd7056066edf" prot="private" virt="non-virtual"><scope>necsim::PyLogger</scope><name>log_function_set</name></member>
      <member refid="classnecsim_1_1_logger_1a9c78013d00df3cda0088ad4920323d06" prot="public" virt="non-virtual"><scope>necsim::PyLogger</scope><name>Logger</name></member>
      <member refid="classnecsim_1_1_py_logger_1a8d2d92a2583df0b0f096d0f3d4c77f9d" prot="private" virt="non-virtual"><scope>necsim::PyLogger</scope><name>logger_set</name></member>
      <member refid="classnecsim_1_1_py_logger_1a2d951a7da5e3249e316a5a7514c86534" prot="private" virt="non-virtual"><scope>necsim::PyLogger</scope><name>py_log_function</name></member>
      <member refid="classnecsim_1_1_py_logger_1a66698a56d503687568a15bf263429408" prot="private" virt="non-virtual"><scope>necsim::PyLogger</scope><name>py_logger</name></member>
      <member refid="classnecsim_1_1_py_logger_1a24714fbe699d52f086840c584af1b7f9" prot="public" virt="non-virtual"><scope>necsim::PyLogger</scope><name>PyLogger</name></member>
      <member refid="classnecsim_1_1_py_logger_1a8064dc012ebdced4ee22375cceac27c2" prot="public" virt="non-virtual"><scope>necsim::PyLogger</scope><name>setLogFunction</name></member>
      <member refid="classnecsim_1_1_py_logger_1a79ea4fad083911c6477f499470508fae" prot="public" virt="non-virtual"><scope>necsim::PyLogger</scope><name>setLogger</name></member>
      <member refid="classnecsim_1_1_py_logger_1ad634ee1d54bcec0c17d9bde780eedb01" prot="public" virt="non-virtual"><scope>necsim::PyLogger</scope><name>write</name></member>
      <member refid="classnecsim_1_1_py_logger_1a8cfa614feb0f79e1a51d65731faaf541" prot="public" virt="non-virtual"><scope>necsim::PyLogger</scope><name>write</name></member>
      <member refid="classnecsim_1_1_py_logger_1a113ba509aefa58e6c74ee7f5d09e73f2" prot="public" virt="non-virtual"><scope>necsim::PyLogger</scope><name>writeCritical</name></member>
      <member refid="classnecsim_1_1_logger_1a8e6264d58ead1b02850dd5a7c7e9ca73" prot="public" virt="virtual" ambiguityscope="necsim::Logger::"><scope>necsim::PyLogger</scope><name>writeCritical</name></member>
      <member refid="classnecsim_1_1_py_logger_1a8efe2f65324d090262da0e89eb8798f9" prot="public" virt="non-virtual"><scope>necsim::PyLogger</scope><name>writeError</name></member>
      <member refid="classnecsim_1_1_logger_1a96c9f01a6de5bb7d2009155dd203f14c" prot="public" virt="virtual" ambiguityscope="necsim::Logger::"><scope>necsim::PyLogger</scope><name>writeError</name></member>
      <member refid="classnecsim_1_1_py_logger_1aa7dd5eab89c9f5ff01015b4ebc651da6" prot="public" virt="non-virtual"><scope>necsim::PyLogger</scope><name>writeInfo</name></member>
      <member refid="classnecsim_1_1_logger_1a01a5c830a92c2f42e1c0b1a575b8a44f" prot="public" virt="virtual" ambiguityscope="necsim::Logger::"><scope>necsim::PyLogger</scope><name>writeInfo</name></member>
      <member refid="classnecsim_1_1_py_logger_1abffc6ead4def6298b5a8b4593472f441" prot="public" virt="non-virtual"><scope>necsim::PyLogger</scope><name>writeWarning</name></member>
      <member refid="classnecsim_1_1_logger_1a5c9f84861823b6ac1cb6e9f97cbb1291" prot="public" virt="virtual" ambiguityscope="necsim::Logger::"><scope>necsim::PyLogger</scope><name>writeWarning</name></member>
      <member refid="classnecsim_1_1_logger_1a8198c83ecb7fc0cf34883810a873ee12" prot="public" virt="virtual"><scope>necsim::PyLogger</scope><name>~Logger</name></member>
      <member refid="classnecsim_1_1_py_logger_1a6f71b45f2238304664ebc1f2f5166299" prot="public" virt="non-virtual"><scope>necsim::PyLogger</scope><name>~PyLogger</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
