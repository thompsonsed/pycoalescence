<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="struct_communities_array" kind="class" language="C++" prot="public">
    <compoundname>CommunitiesArray</compoundname>
    <includes refid="_community_8h" local="no">Community.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_communities_array_1a51cb89209da53cdfdc40e0489103a086" prot="public" static="no" mutable="no">
        <type>vector&lt; <ref refid="struct_community_parameters" kindref="compound">CommunityParameters</ref> &gt;</type>
        <definition>vector&lt;CommunityParameters&gt; CommunitiesArray::communityParameters</definition>
        <argsstring></argsstring>
        <name>communityParameters</name>
        <briefdescription>
<para>The array of <ref refid="struct_community_parameters" kindref="compound">CommunityParameters</ref> which have been stored. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Community.h" line="139" column="1" bodyfile="necsim/Community.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_communities_array_1a03dac0fa7caadfbcd54bff684d3e72fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CommunitiesArray::pushBack</definition>
        <argsstring>(unsigned long reference, long double speciation_rate, long double time, bool fragment, unsigned long metacommunity_reference, const ProtractedSpeciationParameters &amp;protracted_params)</argsstring>
        <name>pushBack</name>
        <param>
          <type>unsigned long</type>
          <declname>reference</declname>
        </param>
        <param>
          <type>long double</type>
          <declname>speciation_rate</declname>
        </param>
        <param>
          <type>long double</type>
          <declname>time</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fragment</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>metacommunity_reference</declname>
        </param>
        <param>
          <type>const <ref refid="struct_protracted_speciation_parameters" kindref="compound">ProtractedSpeciationParameters</ref> &amp;</type>
          <declname>protracted_params</declname>
        </param>
        <briefdescription>
<para>Adds an extra <ref refid="struct_community_parameters" kindref="compound">CommunityParameters</ref> object to the calc_array vector with the supplied variables. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reference</parametername>
</parameternamelist>
<parameterdescription>
<para>the reference for this set of community parameters </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>speciation_rate</parametername>
</parameternamelist>
<parameterdescription>
<para>the speciation rate of the past calculation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>the time of the past calculation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment</parametername>
</parameternamelist>
<parameterdescription>
<para>bool of whether fragments were used in the past calculation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>metacommunity_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>reference for the metacommunity parameters, or 0 if no metacommunity </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>protracted_params</parametername>
</parameternamelist>
<parameterdescription>
<para>protracted speciation parameters to add </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Community.h" line="150" column="1" bodyfile="necsim/Community.cpp" bodystart="83" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="struct_communities_array_1a0abeec9457993dffd047a78db4e4b289" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CommunitiesArray::pushBack</definition>
        <argsstring>(CommunityParameters tmp_param)</argsstring>
        <name>pushBack</name>
        <param>
          <type><ref refid="struct_community_parameters" kindref="compound">CommunityParameters</ref></type>
          <declname>tmp_param</declname>
        </param>
        <briefdescription>
<para>Adds the provided <ref refid="struct_community_parameters" kindref="compound">CommunityParameters</ref> object to the calc_array vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tmp_param</parametername>
</parameternamelist>
<parameterdescription>
<para>the set of community parameters to add </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Community.h" line="158" column="1" bodyfile="necsim/Community.cpp" bodystart="91" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="struct_communities_array_1ad2f4547bda62b1bfeca6d94696436989" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_community_parameters" kindref="compound">CommunityParameters</ref> &amp;</type>
        <definition>CommunityParameters &amp; CommunitiesArray::addNew</definition>
        <argsstring>(long double speciation_rate, long double time, bool fragment, unsigned long metacommunity_reference, const ProtractedSpeciationParameters &amp;protracted_params)</argsstring>
        <name>addNew</name>
        <param>
          <type>long double</type>
          <declname>speciation_rate</declname>
        </param>
        <param>
          <type>long double</type>
          <declname>time</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fragment</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>metacommunity_reference</declname>
        </param>
        <param>
          <type>const <ref refid="struct_protracted_speciation_parameters" kindref="compound">ProtractedSpeciationParameters</ref> &amp;</type>
          <declname>protracted_params</declname>
        </param>
        <briefdescription>
<para>Adds a new communities calculation paremeters reference, with a new unique reference. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>speciation_rate</parametername>
</parameternamelist>
<parameterdescription>
<para>the speciation rate of the new calculation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>the time used in the new calculation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment</parametername>
</parameternamelist>
<parameterdescription>
<para>true if fragments were used in the new calculation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>metacommunity_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>the reference to the set of metacommunity parameters (0 for none) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>protracted_params</parametername>
</parameternamelist>
<parameterdescription>
<para>protracted speciation parameters to add </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>reference to the new <ref refid="struct_community_parameters" kindref="compound">CommunityParameters</ref> object added </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Community.h" line="169" column="1" bodyfile="necsim/Community.cpp" bodystart="96" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="struct_communities_array_1a0bd0be60b599588b3855f4872b63a3de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CommunitiesArray::hasPair</definition>
        <argsstring>(long double speciation_rate, double time, bool fragment, unsigned long metacommunity_reference, const ProtractedSpeciationParameters &amp;protracted_params)</argsstring>
        <name>hasPair</name>
        <param>
          <type>long double</type>
          <declname>speciation_rate</declname>
        </param>
        <param>
          <type>double</type>
          <declname>time</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fragment</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>metacommunity_reference</declname>
        </param>
        <param>
          <type>const <ref refid="struct_protracted_speciation_parameters" kindref="compound">ProtractedSpeciationParameters</ref> &amp;</type>
          <declname>protracted_params</declname>
        </param>
        <briefdescription>
<para>Checks whether the calculation with the supplied variables has already been performed. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>speciation_rate</parametername>
</parameternamelist>
<parameterdescription>
<para>the speciation rate to check for </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>the time to check for </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment</parametername>
</parameternamelist>
<parameterdescription>
<para>bool for checking if fragments were used </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>metacommunity_reference</parametername>
</parameternamelist>
<parameterdescription>
<para>the reference to the set of metacommunity parameters (0 for none) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>protracted_params</parametername>
</parameternamelist>
<parameterdescription>
<para>protracted speciation parameters to add </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the reference exists in past community parameters </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Community.h" line="184" column="1" bodyfile="necsim/Community.cpp" bodystart="131" bodyend="143"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A structure for containing an array of previous calculation information, including which fragments have been already calculated for. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="469">
        <label>std::vector&lt; CommunityParameters &gt;</label>
        <childnode refid="470" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="470">
        <label>CommunityParameters</label>
        <link refid="struct_community_parameters"/>
        <childnode refid="471" relation="usage">
          <edgelabel>protracted_parameters</edgelabel>
        </childnode>
      </node>
      <node id="471">
        <label>ProtractedSpeciationParameters</label>
        <link refid="struct_protracted_speciation_parameters"/>
      </node>
      <node id="468">
        <label>CommunitiesArray</label>
        <link refid="struct_communities_array"/>
        <childnode refid="469" relation="usage">
          <edgelabel>communityParameters</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="necsim/Community.h" line="135" column="1" bodyfile="necsim/Community.h" bodystart="134" bodyend="188"/>
    <listofallmembers>
      <member refid="struct_communities_array_1ad2f4547bda62b1bfeca6d94696436989" prot="public" virt="non-virtual"><scope>CommunitiesArray</scope><name>addNew</name></member>
      <member refid="struct_communities_array_1a51cb89209da53cdfdc40e0489103a086" prot="public" virt="non-virtual"><scope>CommunitiesArray</scope><name>communityParameters</name></member>
      <member refid="struct_communities_array_1a0bd0be60b599588b3855f4872b63a3de" prot="public" virt="non-virtual"><scope>CommunitiesArray</scope><name>hasPair</name></member>
      <member refid="struct_communities_array_1a03dac0fa7caadfbcd54bff684d3e72fe" prot="public" virt="non-virtual"><scope>CommunitiesArray</scope><name>pushBack</name></member>
      <member refid="struct_communities_array_1a0abeec9457993dffd047a78db4e4b289" prot="public" virt="non-virtual"><scope>CommunitiesArray</scope><name>pushBack</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
