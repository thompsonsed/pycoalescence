<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="structnecsim_1_1_map_location" kind="struct" language="C++" prot="public">
    <compoundname>necsim::MapLocation</compoundname>
    <derivedcompoundref refid="classnecsim_1_1_data_point" prot="public" virt="virtual">necsim::DataPoint</derivedcompoundref>
    <derivedcompoundref refid="structnecsim_1_1_step" prot="public" virt="virtual">necsim::Step</derivedcompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structnecsim_1_1_map_location_1ab217f617198dac5429d7c8fa8dad4acc" prot="public" static="no" mutable="no">
        <type>long</type>
        <definition>long necsim::MapLocation::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/MapLocation.h" line="12" column="1" bodyfile="necsim/MapLocation.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnecsim_1_1_map_location_1adf2859c3cf8fad4efd4c48ef3e00c9bc" prot="public" static="no" mutable="no">
        <type>long</type>
        <definition>long necsim::MapLocation::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/MapLocation.h" line="13" column="1" bodyfile="necsim/MapLocation.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnecsim_1_1_map_location_1a6394b8b8d9a753d3b8744d99fce6e08f" prot="public" static="no" mutable="no">
        <type>long</type>
        <definition>long necsim::MapLocation::xwrap</definition>
        <argsstring></argsstring>
        <name>xwrap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/MapLocation.h" line="14" column="1" bodyfile="necsim/MapLocation.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnecsim_1_1_map_location_1ab9e0b2d070f4ebca240e9538e07d3893" prot="public" static="no" mutable="no">
        <type>long</type>
        <definition>long necsim::MapLocation::ywrap</definition>
        <argsstring></argsstring>
        <name>ywrap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/MapLocation.h" line="15" column="1" bodyfile="necsim/MapLocation.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structnecsim_1_1_map_location_1a27d39cd5a988fc584c957a6cbe0b8c13" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>necsim::MapLocation::MapLocation</definition>
        <argsstring>()</argsstring>
        <name>MapLocation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/MapLocation.h" line="17" column="1" bodyfile="necsim/MapLocation.h" bodystart="17" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="structnecsim_1_1_map_location_1a7616b39abda2bd17b2b56b6560edc835" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>necsim::MapLocation::MapLocation</definition>
        <argsstring>(long x, long y, long xwrap, long ywrap)</argsstring>
        <name>MapLocation</name>
        <param>
          <type>long</type>
          <declname>x</declname>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
        </param>
        <param>
          <type>long</type>
          <declname>xwrap</declname>
        </param>
        <param>
          <type>long</type>
          <declname>ywrap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/MapLocation.h" line="20" column="1" bodyfile="necsim/MapLocation.h" bodystart="20" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="structnecsim_1_1_map_location_1a9684c61f1c6d6d0a6327de555e45ecab" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool necsim::MapLocation::isOnGrid</definition>
        <argsstring>() const</argsstring>
        <name>isOnGrid</name>
        <briefdescription>
<para>Checks if the location is directly on the grid without wrapping (i.e. xwrap and ywrap are 0). </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if on the grid </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/MapLocation.h" line="27" column="1" bodyfile="necsim/MapLocation.cpp" bodystart="8" bodyend="11"/>
      </memberdef>
      <memberdef kind="function" id="structnecsim_1_1_map_location_1a1184259a2a3fd8e13319ed009b25c30f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool necsim::MapLocation::operator==</definition>
        <argsstring>(MapLocation const &amp;m) const</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="structnecsim_1_1_map_location" kindref="compound">MapLocation</ref> const &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Equality operator for <ref refid="structnecsim_1_1_map_location" kindref="compound">MapLocation</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="structnecsim_1_1_map_location" kindref="compound">MapLocation</ref> object to compare against </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the x, y, xwrap and ywrap are identical </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/MapLocation.h" line="34" column="1" bodyfile="necsim/MapLocation.cpp" bodystart="13" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="structnecsim_1_1_map_location_1a980d585a7c0f81a5559b528367df5d42" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool necsim::MapLocation::operator!=</definition>
        <argsstring>(MapLocation const &amp;m) const</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="structnecsim_1_1_map_location" kindref="compound">MapLocation</ref> const &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Inequality operator for <ref refid="structnecsim_1_1_map_location" kindref="compound">MapLocation</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="structnecsim_1_1_map_location" kindref="compound">MapLocation</ref> object to compare against </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if locations are not identical </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/MapLocation.h" line="41" column="1" bodyfile="necsim/MapLocation.cpp" bodystart="18" bodyend="21"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structnecsim_1_1_map_location_1a60193b37ab871e0d1a42569fb9952259" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const MapLocation &amp;m)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="structnecsim_1_1_map_location" kindref="compound">MapLocation</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Output operator for <ref refid="structnecsim_1_1_map_location" kindref="compound">MapLocation</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>os</parametername>
</parameternamelist>
<parameterdescription>
<para>the output stream to write to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>the object to write out </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the output stream </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/MapLocation.h" line="49" column="1" bodyfile="necsim/MapLocation.cpp" bodystart="23" bodyend="27"/>
      </memberdef>
      <memberdef kind="friend" id="structnecsim_1_1_map_location_1ae36e4836d3a87af40c13dceb8244d12d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend std::istream &amp;</type>
        <definition>std::istream&amp; operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;is, MapLocation &amp;m)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="structnecsim_1_1_map_location" kindref="compound">MapLocation</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Input operator for <ref refid="structnecsim_1_1_map_location" kindref="compound">MapLocation</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>is</parametername>
</parameternamelist>
<parameterdescription>
<para>the input stream to read from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>m</parametername>
</parameternamelist>
<parameterdescription>
<para>the object to read to </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the input stream </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/MapLocation.h" line="57" column="1" bodyfile="necsim/MapLocation.cpp" bodystart="29" bodyend="34"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="180">
        <label>necsim::DataPoint</label>
        <link refid="classnecsim_1_1_data_point"/>
        <childnode refid="179" relation="public-inheritance">
        </childnode>
      </node>
      <node id="179">
        <label>necsim::MapLocation</label>
        <link refid="structnecsim_1_1_map_location"/>
      </node>
      <node id="181">
        <label>necsim::Step</label>
        <link refid="structnecsim_1_1_step"/>
        <childnode refid="179" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="necsim/MapLocation.h" line="11" column="1" bodyfile="necsim/MapLocation.h" bodystart="10" bodyend="58"/>
    <listofallmembers>
      <member refid="structnecsim_1_1_map_location_1a9684c61f1c6d6d0a6327de555e45ecab" prot="public" virt="non-virtual"><scope>necsim::MapLocation</scope><name>isOnGrid</name></member>
      <member refid="structnecsim_1_1_map_location_1a27d39cd5a988fc584c957a6cbe0b8c13" prot="public" virt="non-virtual"><scope>necsim::MapLocation</scope><name>MapLocation</name></member>
      <member refid="structnecsim_1_1_map_location_1a7616b39abda2bd17b2b56b6560edc835" prot="public" virt="non-virtual"><scope>necsim::MapLocation</scope><name>MapLocation</name></member>
      <member refid="structnecsim_1_1_map_location_1a980d585a7c0f81a5559b528367df5d42" prot="public" virt="non-virtual"><scope>necsim::MapLocation</scope><name>operator!=</name></member>
      <member refid="structnecsim_1_1_map_location_1a60193b37ab871e0d1a42569fb9952259" prot="public" virt="non-virtual"><scope>necsim::MapLocation</scope><name>operator&lt;&lt;</name></member>
      <member refid="structnecsim_1_1_map_location_1a1184259a2a3fd8e13319ed009b25c30f" prot="public" virt="non-virtual"><scope>necsim::MapLocation</scope><name>operator==</name></member>
      <member refid="structnecsim_1_1_map_location_1ae36e4836d3a87af40c13dceb8244d12d" prot="public" virt="non-virtual"><scope>necsim::MapLocation</scope><name>operator&gt;&gt;</name></member>
      <member refid="structnecsim_1_1_map_location_1ab217f617198dac5429d7c8fa8dad4acc" prot="public" virt="non-virtual"><scope>necsim::MapLocation</scope><name>x</name></member>
      <member refid="structnecsim_1_1_map_location_1a6394b8b8d9a753d3b8744d99fce6e08f" prot="public" virt="non-virtual"><scope>necsim::MapLocation</scope><name>xwrap</name></member>
      <member refid="structnecsim_1_1_map_location_1adf2859c3cf8fad4efd4c48ef3e00c9bc" prot="public" virt="non-virtual"><scope>necsim::MapLocation</scope><name>y</name></member>
      <member refid="structnecsim_1_1_map_location_1ab9e0b2d070f4ebca240e9538e07d3893" prot="public" virt="non-virtual"><scope>necsim::MapLocation</scope><name>ywrap</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
