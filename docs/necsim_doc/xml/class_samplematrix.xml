<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_samplematrix" kind="class" language="C++" prot="public">
    <compoundname>Samplematrix</compoundname>
    <basecompoundref refid="class_data_mask" prot="public" virt="non-virtual">DataMask</basecompoundref>
    <includes refid="_community_8h" local="no">Community.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_samplematrix_1ad4ec0b796e829f1403f62aafe45b1c8c" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Samplematrix::bIsNull</definition>
        <argsstring></argsstring>
        <name>bIsNull</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Community.h" line="323" column="1" bodyfile="necsim/Community.h" bodystart="323" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_samplematrix_1ac12f910e85d6cb8935e5e2c912eca3bc" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Samplematrix::bIsFragment</definition>
        <argsstring></argsstring>
        <name>bIsFragment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Community.h" line="324" column="1" bodyfile="necsim/Community.h" bodystart="324" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_samplematrix_1a1c7fab4b2b5c98c5c7f3cc1fd4aefd4c" prot="private" static="no" mutable="no">
        <type><ref refid="struct_fragment" kindref="compound">Fragment</ref></type>
        <definition>Fragment Samplematrix::fragment</definition>
        <argsstring></argsstring>
        <name>fragment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Community.h" line="325" column="1" bodyfile="necsim/Community.h" bodystart="325" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_samplematrix_1abe3fb4ca1e24678f2720f451cee80492" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Samplematrix::Samplematrix</definition>
        <argsstring>()</argsstring>
        <name>Samplematrix</name>
        <briefdescription>
<para>Inherit construction from the <ref refid="class_matrix" kindref="compound">Matrix</ref> class, but also set the booleans. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Community.h" line="330" column="1" bodyfile="necsim/Community.cpp" bodystart="248" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="class_samplematrix_1a834c750ab142d1ed2241fb9ab559b704" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Samplematrix::getTestVal</definition>
        <argsstring>(unsigned long xval, unsigned long yval, long xwrap, long ywrap)</argsstring>
        <name>getTestVal</name>
        <param>
          <type>unsigned long</type>
          <declname>xval</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>yval</declname>
        </param>
        <param>
          <type>long</type>
          <declname>xwrap</declname>
        </param>
        <param>
          <type>long</type>
          <declname>ywrap</declname>
        </param>
        <briefdescription>
<para>Returns the value at the x,y position. This is used for testing purposes only. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xval</parametername>
</parameternamelist>
<parameterdescription>
<para>the x coordinate. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yval</parametername>
</parameternamelist>
<parameterdescription>
<para>the y coordinate </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xwrap</parametername>
</parameternamelist>
<parameterdescription>
<para>the x wrapping </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ywrap</parametername>
</parameternamelist>
<parameterdescription>
<para>the y wrapping </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value at x,y. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Community.h" line="341" column="1" bodyfile="necsim/Community.cpp" bodystart="254" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="class_samplematrix_1a8b494886260857ffdc9f52f47661a628" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Samplematrix::getMaskVal</definition>
        <argsstring>(unsigned long x1, unsigned long y1, long x_wrap, long y_wrap)</argsstring>
        <name>getMaskVal</name>
        <param>
          <type>unsigned long</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x_wrap</declname>
        </param>
        <param>
          <type>long</type>
          <declname>y_wrap</declname>
        </param>
        <briefdescription>
<para>Returns the value at the x,y position, with the given x and y wrap. Also checks whether or not the map is set to null, or whether the value comes from within a fragment. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x1</parametername>
</parameternamelist>
<parameterdescription>
<para>the x coordinate. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y1</parametername>
</parameternamelist>
<parameterdescription>
<para>the y coordinate </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value at x,y. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Community.h" line="350" column="1" bodyfile="necsim/Community.cpp" bodystart="259" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="class_samplematrix_1adbc1732a726c387965f63d4484bd4c25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Samplematrix::setFragment</definition>
        <argsstring>(Fragment &amp;fragment_in)</argsstring>
        <name>setFragment</name>
        <param>
          <type><ref refid="struct_fragment" kindref="compound">Fragment</ref> &amp;</type>
          <declname>fragment_in</declname>
        </param>
        <briefdescription>
<para>Set the fragment for the samplemask to some calculated fragment. This can be set multiple times. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fragment_in</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="struct_fragment" kindref="compound">Fragment</ref> to set the samplemask to. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Community.h" line="357" column="1" bodyfile="necsim/Community.cpp" bodystart="276" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="class_samplematrix_1a9b796f2279f1716c2a555ff3d641ea0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Samplematrix::removeFragment</definition>
        <argsstring>()</argsstring>
        <name>removeFragment</name>
        <briefdescription>
<para>Removes the fragment. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Community.h" line="362" column="1" bodyfile="necsim/Community.cpp" bodystart="283" bodyend="286"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A child of the <ref refid="class_matrix" kindref="compound">Matrix</ref> class as booleans. Used for determining where to sample species from. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="562">
        <label>Samplematrix</label>
        <link refid="class_samplematrix"/>
        <childnode refid="563" relation="public-inheritance">
        </childnode>
      </node>
      <node id="563">
        <label>DataMask</label>
        <link refid="class_data_mask"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="567">
        <label>Row&lt; double &gt;</label>
        <link refid="class_row"/>
      </node>
      <node id="569">
        <label>Row&lt; bool &gt;</label>
        <link refid="class_row"/>
      </node>
      <node id="571">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="564">
        <label>Samplematrix</label>
        <link refid="class_samplematrix"/>
        <childnode refid="565" relation="public-inheritance">
        </childnode>
      </node>
      <node id="568">
        <label>Matrix&lt; bool &gt;</label>
        <link refid="class_matrix"/>
        <childnode refid="569" relation="usage">
          <edgelabel>matrix</edgelabel>
        </childnode>
      </node>
      <node id="565">
        <label>DataMask</label>
        <link refid="class_data_mask"/>
        <childnode refid="566" relation="usage">
          <edgelabel>sample_mask_exact</edgelabel>
        </childnode>
        <childnode refid="568" relation="usage">
          <edgelabel>sample_mask</edgelabel>
        </childnode>
        <childnode refid="570" relation="usage">
          <edgelabel>inputfile</edgelabel>
        </childnode>
      </node>
      <node id="566">
        <label>Matrix&lt; double &gt;</label>
        <link refid="class_matrix"/>
        <childnode refid="567" relation="usage">
          <edgelabel>matrix</edgelabel>
        </childnode>
      </node>
      <node id="570">
        <label>std::string</label>
        <childnode refid="571" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="necsim/Community.h" line="321" column="1" bodyfile="necsim/Community.h" bodystart="320" bodyend="363"/>
    <listofallmembers>
      <member refid="class_data_mask_1af5d895b50f04eceac1e473dee6f36703" prot="protected" virt="non-virtual"><scope>Samplematrix</scope><name>bDefault</name></member>
      <member refid="class_samplematrix_1ac12f910e85d6cb8935e5e2c912eca3bc" prot="private" virt="non-virtual"><scope>Samplematrix</scope><name>bIsFragment</name></member>
      <member refid="class_samplematrix_1ad4ec0b796e829f1403f62aafe45b1c8c" prot="private" virt="non-virtual"><scope>Samplematrix</scope><name>bIsNull</name></member>
      <member refid="class_data_mask_1a2d152bcb13820a9061ea85c984e042a7" prot="public" virt="non-virtual"><scope>Samplematrix</scope><name>clearSpatialMask</name></member>
      <member refid="class_data_mask_1a9de1eec774b8307f63357d2eff514b93" prot="public" virt="non-virtual"><scope>Samplematrix</scope><name>convertBoolean</name></member>
      <member refid="class_data_mask_1ae89a953b8200f027d44dc74fa748852b" prot="public" virt="non-virtual"><scope>Samplematrix</scope><name>DataMask</name></member>
      <member refid="class_data_mask_1a85f7b85bb4ac54aa884a8a06f1d35d1b" prot="public" virt="non-virtual"><scope>Samplematrix</scope><name>doImport</name></member>
      <member refid="class_data_mask_1a0ed51de5661fc3046d085e044a7efd4a" prot="protected" virt="non-virtual"><scope>Samplematrix</scope><name>fptr</name></member>
      <member refid="class_samplematrix_1a1c7fab4b2b5c98c5c7f3cc1fd4aefd4c" prot="private" virt="non-virtual"><scope>Samplematrix</scope><name>fragment</name></member>
      <member refid="class_data_mask_1a31cb42c363219967a7867340a7110e9f" prot="public" virt="non-virtual"><scope>Samplematrix</scope><name>getBoolProportion</name></member>
      <member refid="class_data_mask_1a093364b6da9442f7c4945b5a06cfe3af" prot="public" virt="non-virtual"><scope>Samplematrix</scope><name>getDefault</name></member>
      <member refid="class_data_mask_1a2738d996bf7ee99d44a2833b2bed15ef" prot="public" virt="non-virtual"><scope>Samplematrix</scope><name>getExactValue</name></member>
      <member refid="class_samplematrix_1a8b494886260857ffdc9f52f47661a628" prot="public" virt="non-virtual"><scope>Samplematrix</scope><name>getMaskVal</name></member>
      <member refid="class_data_mask_1af7a7cb35d309d37f42c7a3720a02b400" prot="public" virt="non-virtual"><scope>Samplematrix</scope><name>getNullProportion</name></member>
      <member refid="class_data_mask_1a67c92c63f3397de5312c573281515c1c" prot="protected" virt="non-virtual"><scope>Samplematrix</scope><name>getProportionfptr</name></member>
      <member refid="class_data_mask_1a682324892b67910b1dd2fa86a98c0873" prot="public" virt="non-virtual"><scope>Samplematrix</scope><name>getSampleProportion</name></member>
      <member refid="class_samplematrix_1a834c750ab142d1ed2241fb9ab559b704" prot="public" virt="non-virtual"><scope>Samplematrix</scope><name>getTestVal</name></member>
      <member refid="class_data_mask_1ace6578db5b096b0c24112cc438cfa90d" prot="public" virt="non-virtual"><scope>Samplematrix</scope><name>getVal</name></member>
      <member refid="class_data_mask_1a819eacf6968b0384a0221599dac09122" prot="public" virt="non-virtual"><scope>Samplematrix</scope><name>importBooleanMask</name></member>
      <member refid="class_data_mask_1ac756e21b1c8d9412d565fb020eec9a06" prot="public" virt="non-virtual"><scope>Samplematrix</scope><name>importSampleMask</name></member>
      <member refid="class_data_mask_1acde16cc845a6102a8b2ee0aa9b8917cb" prot="protected" virt="non-virtual"><scope>Samplematrix</scope><name>inputfile</name></member>
      <member refid="class_data_mask_1ab971fd5a14a17e850cd92c79c3a1543e" prot="protected" virt="non-virtual"><scope>Samplematrix</scope><name>mask_x_dim</name></member>
      <member refid="class_data_mask_1a5ab1bf33e9b9fac964c8c2576fc5edca" prot="protected" virt="non-virtual"><scope>Samplematrix</scope><name>mask_y_dim</name></member>
      <member refid="class_data_mask_1ab96af629241f61a4d7122c6b7a91a3ef" prot="public" virt="non-virtual"><scope>Samplematrix</scope><name>recalculate_coordinates</name></member>
      <member refid="class_samplematrix_1a9b796f2279f1716c2a555ff3d641ea0b" prot="public" virt="non-virtual"><scope>Samplematrix</scope><name>removeFragment</name></member>
      <member refid="class_data_mask_1ac4852ba45532f4ec91751df868b11303" prot="public" virt="non-virtual"><scope>Samplematrix</scope><name>sample_mask</name></member>
      <member refid="class_data_mask_1a28b2136c9666ec5188dd3301e1db602a" prot="public" virt="non-virtual"><scope>Samplematrix</scope><name>sample_mask_exact</name></member>
      <member refid="class_samplematrix_1abe3fb4ca1e24678f2720f451cee80492" prot="public" virt="non-virtual"><scope>Samplematrix</scope><name>Samplematrix</name></member>
      <member refid="class_samplematrix_1adbc1732a726c387965f63d4484bd4c25" prot="public" virt="non-virtual"><scope>Samplematrix</scope><name>setFragment</name></member>
      <member refid="class_data_mask_1a73922a90e7f491ec3dcf90fdd400fdf8" prot="public" virt="non-virtual"><scope>Samplematrix</scope><name>setup</name></member>
      <member refid="class_data_mask_1aba77e907211dea06a4a52ad3036716b0" prot="protected" virt="non-virtual"><scope>Samplematrix</scope><name>x_dim</name></member>
      <member refid="class_data_mask_1a70178c907b2dc072b62f4bfb8f690823" prot="protected" virt="non-virtual"><scope>Samplematrix</scope><name>x_offset</name></member>
      <member refid="class_data_mask_1aa2c689edd7b8bd84bb60e836aac4e378" prot="protected" virt="non-virtual"><scope>Samplematrix</scope><name>y_dim</name></member>
      <member refid="class_data_mask_1ab4508058d8563d90bfc606a648cedb2f" prot="protected" virt="non-virtual"><scope>Samplematrix</scope><name>y_offset</name></member>
      <member refid="class_data_mask_1aa45741c95c5ab3881d6606c0ad5b6560" prot="public" virt="non-virtual"><scope>Samplematrix</scope><name>~DataMask</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
