<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_tree_node" kind="class" language="C++" prot="public">
    <compoundname>TreeNode</compoundname>
    <includes refid="_tree_node_8h" local="no">TreeNode.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_tree_node_1a18402326919cf4e3937344b82f660dcc" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool TreeNode::tip</definition>
        <argsstring></argsstring>
        <name>tip</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="34" column="1" bodyfile="necsim/TreeNode.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_node_1a8aa3c04a73a236b9bad07b71d0b5af21" prot="private" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long TreeNode::parent</definition>
        <argsstring></argsstring>
        <name>parent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="38" column="1" bodyfile="necsim/TreeNode.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_node_1ae6c0ccf5cd24379fdf73d1603145b4ba" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool TreeNode::speciated</definition>
        <argsstring></argsstring>
        <name>speciated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="43" column="1" bodyfile="necsim/TreeNode.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_node_1a7f0b12c12b6352454862232bbce03cd4" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool TreeNode::does_exist</definition>
        <argsstring></argsstring>
        <name>does_exist</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="45" column="1" bodyfile="necsim/TreeNode.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_node_1a39d1eaadffe08b1f2ea9044a12c66f93" prot="private" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long TreeNode::species_id</definition>
        <argsstring></argsstring>
        <name>species_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="47" column="1" bodyfile="necsim/TreeNode.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_node_1aeacb5355aa5c9045093212f2717de908" prot="private" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long TreeNode::xpos</definition>
        <argsstring></argsstring>
        <name>xpos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="49" column="1" bodyfile="necsim/TreeNode.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_node_1a5d89b94f9b75d4734fcf33907094f14f" prot="private" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long TreeNode::ypos</definition>
        <argsstring></argsstring>
        <name>ypos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="51" column="1" bodyfile="necsim/TreeNode.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_node_1ac7e7e44f7056912ddc95ceb7fce35e18" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long TreeNode::xwrap</definition>
        <argsstring></argsstring>
        <name>xwrap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="53" column="1" bodyfile="necsim/TreeNode.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_node_1adbbdad44151e01002717420940f39228" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long TreeNode::ywrap</definition>
        <argsstring></argsstring>
        <name>ywrap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="55" column="1" bodyfile="necsim/TreeNode.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_node_1ad36bed55f26a1b1496292289ee5d21e1" prot="private" static="no" mutable="no">
        <type>long double</type>
        <definition>long double TreeNode::speciation_probability</definition>
        <argsstring></argsstring>
        <name>speciation_probability</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="58" column="1" bodyfile="necsim/TreeNode.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_node_1a860dc7f853e2ce0775b5c765698e67b2" prot="private" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long TreeNode::generations_existed</definition>
        <argsstring></argsstring>
        <name>generations_existed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="60" column="1" bodyfile="necsim/TreeNode.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_node_1a9d2275fabe3be88f68d55107efddc79f" prot="private" static="no" mutable="no">
        <type>long double</type>
        <definition>long double TreeNode::generation_added</definition>
        <argsstring></argsstring>
        <name>generation_added</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="62" column="1" bodyfile="necsim/TreeNode.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_tree_node_1a984a98d5ccf7ef1f5a18094c6821f35d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>TreeNode::TreeNode</definition>
        <argsstring>()</argsstring>
        <name>TreeNode</name>
        <briefdescription>
<para>The default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="67" column="1" bodyfile="necsim/TreeNode.h" bodystart="67" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_node_1a89eb1eb0e25fccaa83c780b85f95b570" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TreeNode::~TreeNode</definition>
        <argsstring>()=default</argsstring>
        <name>~TreeNode</name>
        <briefdescription>
<para>The default destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="77" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_node_1aac058ef4e26cc498e54ac5d0208e96e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TreeNode::setup</definition>
        <argsstring>(bool z, unsigned long xp, unsigned long yp, long xi, long yi)</argsstring>
        <name>setup</name>
        <param>
          <type>bool</type>
          <declname>z</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>xp</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>yp</declname>
        </param>
        <param>
          <type>long</type>
          <declname>xi</declname>
        </param>
        <param>
          <type>long</type>
          <declname>yi</declname>
        </param>
        <briefdescription>
<para>Sets up variables with initial conditions. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>whether this lineage is a tip or not (represents the end of a tree). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xp</parametername>
</parameternamelist>
<parameterdescription>
<para>the x position on the grid. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yp</parametername>
</parameternamelist>
<parameterdescription>
<para>the y position on the grid. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xi</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of wraps in the x dimension. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yi</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of wraps in the y dimension. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="88" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="14" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_node_1ab8300978f2020de993f8ead2e08b8377" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TreeNode::setup</definition>
        <argsstring>(bool z)</argsstring>
        <name>setup</name>
        <param>
          <type>bool</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Sets up variables with initial conditions. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>whether this lineage is a tip or not (represents the end of a tree) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="94" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="31" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_node_1a5d27405bfc2cf6be90895de24b40e076" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TreeNode::setup</definition>
        <argsstring>(const bool &amp;is_tip, const long &amp;xp, const long &amp;yp, const long &amp;xi, const long &amp;yi, const long double &amp;generation)</argsstring>
        <name>setup</name>
        <param>
          <type>const bool &amp;</type>
          <declname>is_tip</declname>
        </param>
        <param>
          <type>const long &amp;</type>
          <declname>xp</declname>
        </param>
        <param>
          <type>const long &amp;</type>
          <declname>yp</declname>
        </param>
        <param>
          <type>const long &amp;</type>
          <declname>xi</declname>
        </param>
        <param>
          <type>const long &amp;</type>
          <declname>yi</declname>
        </param>
        <param>
          <type>const long double &amp;</type>
          <declname>generation</declname>
        </param>
        <briefdescription>
<para>Overloaded <ref refid="class_tree_node_1aac058ef4e26cc498e54ac5d0208e96e1" kindref="member">setup()</ref> function, additionally taking a generation time point. </para>        </briefdescription>
        <detaileddescription>
<para>Used when creating lineages after the start of the simulation, when the generation is not 0. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>is_tip</parametername>
</parameternamelist>
<parameterdescription>
<para>whether this lineage is a tip or not (represents the end of a tree). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xp</parametername>
</parameternamelist>
<parameterdescription>
<para>the x position on the grid. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yp</parametername>
</parameternamelist>
<parameterdescription>
<para>the y position on the grid. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xi</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of wraps in the x dimension. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yi</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of wraps in the y dimension. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>generation</parametername>
</parameternamelist>
<parameterdescription>
<para>the current generation at creation time. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="107" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="36" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_node_1ad9f8d4d7d790cd0cd89a950cc0909519" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TreeNode::setExistence</definition>
        <argsstring>(bool b)</argsstring>
        <name>setExistence</name>
        <param>
          <type>bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Setter for the existence of the lineage. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>existence boolean. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="114" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="52" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_node_1abd2840804b1d9b8caed25de5ae9b3ee6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TreeNode::setParent</definition>
        <argsstring>(unsigned long x)</argsstring>
        <name>setParent</name>
        <param>
          <type>unsigned long</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Setter for the parent reference. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a reference for the parent location. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="120" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="57" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_node_1a78b82146ccdd88a405c701c1389c67e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TreeNode::qReset</definition>
        <argsstring>()</argsstring>
        <name>qReset</name>
        <briefdescription>
<para>Resets the lineage. Remove any species ID, existence and speciation record. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="126" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="62" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_node_1a123ebe5ac7a4aa9c911aed404b22f166" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TreeNode::setPosition</definition>
        <argsstring>(long x, long y, long xw, long yw)</argsstring>
        <name>setPosition</name>
        <param>
          <type>long</type>
          <declname>x</declname>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
        </param>
        <param>
          <type>long</type>
          <declname>xw</declname>
        </param>
        <param>
          <type>long</type>
          <declname>yw</declname>
        </param>
        <briefdescription>
<para>Set a new position for the lineage. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the x position on the grid. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>the y position on the grid. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xw</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of wraps in the x dimension. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yw</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of wraps in the y dimension. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="135" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="69" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_node_1ac5b41ed58cd5270504d4891af28a3a52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TreeNode::setSpec</definition>
        <argsstring>(long double d)</argsstring>
        <name>setSpec</name>
        <param>
          <type>long double</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Setter for the randomly generated number (from NRrand.d0()) for the speciation probability for this lineage. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>the speciation probability. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="141" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="77" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_node_1a114820b41e7d84a5761573784acc1d5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TreeNode::setGenerationRate</definition>
        <argsstring>(unsigned long g)</argsstring>
        <name>setGenerationRate</name>
        <param>
          <type>unsigned long</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>Setter for the number of generations this lineage has existed for. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of generations that the lineage has existed. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="147" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_node_1ab51e108eac10b3f9e3fdd1e42882a94c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TreeNode::setGeneration</definition>
        <argsstring>(long double d)</argsstring>
        <name>setGeneration</name>
        <param>
          <type>long double</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Setter for the birth generation timer for the lineage. </para>        </briefdescription>
        <detaileddescription>
<para>Note that moves that don&apos;t involve coalescence do not create a new Treenode object, and therefore the generation_added does not get updated. However, coalescence events will cause a new Treenode object creation. The lineage birth generation is generally only important for calculating the age of tips. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="158" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="87" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_node_1a7b0ead212f130b9754be7f1cb6eda13e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TreeNode::setSpeciation</definition>
        <argsstring>(bool s)</argsstring>
        <name>setSpeciation</name>
        <param>
          <type>bool</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Setter for the speciation boolean. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>the speciation boolean. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="164" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="92" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_node_1a99516661c1321a1b4948be29ed247936" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TreeNode::burnSpecies</definition>
        <argsstring>(unsigned long idin)</argsstring>
        <name>burnSpecies</name>
        <param>
          <type>unsigned long</type>
          <declname>idin</declname>
        </param>
        <briefdescription>
<para>Setter for the species ID. Once set to something other than 0, this cannot be changed with a call to <ref refid="class_tree_node_1a78b82146ccdd88a405c701c1389c67e2" kindref="member">qReset()</ref> or <ref refid="class_tree_node_1a715869c786bb0442d56994de11571605" kindref="member">resetSpecies()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idin</parametername>
</parameternamelist>
<parameterdescription>
<para>the species ID. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="171" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="97" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_node_1acb1926edf4d646f81a60e3b76a6475e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TreeNode::setTip</definition>
        <argsstring>(bool b)</argsstring>
        <name>setTip</name>
        <param>
          <type>bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Setter for the tip boolean. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>the tip boolean. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="177" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="105" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_node_1a715869c786bb0442d56994de11571605" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TreeNode::resetSpecies</definition>
        <argsstring>()</argsstring>
        <name>resetSpecies</name>
        <briefdescription>
<para>Reset the species ID to 0. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="182" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="110" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_node_1a9601d828d9ff808dd3081410a105a069" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TreeNode::increaseGen</definition>
        <argsstring>()</argsstring>
        <name>increaseGen</name>
        <briefdescription>
<para>Increases the generation counter by one. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="187" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="115" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_node_1adca5ccf0cada63221a813cc72ec453de" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool TreeNode::exists</definition>
        <argsstring>() const </argsstring>
        <name>exists</name>
        <briefdescription>
<para>Getter for the existence boolean. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the existence boolean. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="199" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="120" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_node_1a92cce5b08cb7b5144d53d6efd444a54e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool TreeNode::isTip</definition>
        <argsstring>() const </argsstring>
        <name>isTip</name>
        <briefdescription>
<para>Getter for the tip boolean. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the tip boolean. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="205" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="125" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_node_1aad17624440cf0b1739d56e48bc142d75" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long TreeNode::getParent</definition>
        <argsstring>() const </argsstring>
        <name>getParent</name>
        <briefdescription>
<para>Getter for the parent location. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the parent reference. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="211" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="130" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_node_1adf06aee733e652bff48553e0e598737f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long TreeNode::getXpos</definition>
        <argsstring>() const </argsstring>
        <name>getXpos</name>
        <briefdescription>
<para>Getter for the x position. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the x position. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="217" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="135" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_node_1a53e792c35abe0860f2277aeeca17022d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long TreeNode::getYpos</definition>
        <argsstring>() const </argsstring>
        <name>getYpos</name>
        <briefdescription>
<para>Getter for the y position. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the y position. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="223" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="140" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_node_1abf66032cab0e8a7583471e941991d252" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long TreeNode::getXwrap</definition>
        <argsstring>() const </argsstring>
        <name>getXwrap</name>
        <briefdescription>
<para>Getter for the number of times the lineage is wrapped in the x dimension. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the number of times the lineage is wrapped in the x dimension. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="229" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="145" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_node_1a5b7ed0a3f729faea52fdc96b22977384" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long TreeNode::getYwrap</definition>
        <argsstring>() const </argsstring>
        <name>getYwrap</name>
        <briefdescription>
<para>Getter for the number of times the lineage is wrapped in the y dimension. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the number of times the lineage is wrapped in the y dimension. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="235" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="150" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_node_1ad1f55fc63a25d6bf12e3bb6bc6034a3b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool TreeNode::hasSpeciated</definition>
        <argsstring>() const </argsstring>
        <name>hasSpeciated</name>
        <briefdescription>
<para>Getter for the speciation boolean. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the speciation boolean. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="241" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="155" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_node_1a9278669eb6ae607bc89278ff104075e3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long TreeNode::getSpeciesID</definition>
        <argsstring>() const </argsstring>
        <name>getSpeciesID</name>
        <briefdescription>
<para>Getter for the species ID. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the species ID. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="247" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="160" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_node_1a453643b70ee5e0c1f574bb25294b4807" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>long double</type>
        <definition>long double TreeNode::getSpecRate</definition>
        <argsstring>() const </argsstring>
        <name>getSpecRate</name>
        <briefdescription>
<para>Getter for the randomly generated speciation probability. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the speciation probability. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="253" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="165" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_node_1a5f061a52d2b78908baebafae58e91e1d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long TreeNode::getGenRate</definition>
        <argsstring>() const </argsstring>
        <name>getGenRate</name>
        <briefdescription>
<para>Getter for the number of generations the lineage has existed. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the number of generations of existence. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="259" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="170" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_node_1aacd1303b7b5481fb4b8a0f0481e45a50" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>long double</type>
        <definition>long double TreeNode::getGeneration</definition>
        <argsstring>() const </argsstring>
        <name>getGeneration</name>
        <briefdescription>
<para>Getter for the generation the lineage was created. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the generation counter the lineage was created. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="265" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="175" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_node_1a65a021122e06071f6f127be3a0171518" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TreeNode::speciate</definition>
        <argsstring>()</argsstring>
        <name>speciate</name>
        <briefdescription>
<para>Sets the speciation boolean to true. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="270" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="180" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_node_1af362bf557fa6af455f6bac31c4f0356a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_tree_node" kindref="compound">TreeNode</ref> &amp;</type>
        <definition>TreeNode &amp; TreeNode::operator=</definition>
        <argsstring>(const TreeNode &amp;t)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_tree_node" kindref="compound">TreeNode</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Overloading the equality operator for TreeNodes <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>the input <ref refid="class_tree_node" kindref="compound">TreeNode</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="292" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="206" bodyend="221"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_tree_node_1a2d73715892a5f20100609978a53dea81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend ostream &amp;</type>
        <definition>ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(ostream &amp;os, const TreeNode &amp;t)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="class_tree_node" kindref="compound">TreeNode</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Overloading the &lt;&lt; operator for outputting a Treenode object to an output stream. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>os</parametername>
</parameternamelist>
<parameterdescription>
<para>the output stream. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>a Treenode object to output. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the output stream. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="278" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="185" bodyend="193"/>
      </memberdef>
      <memberdef kind="friend" id="class_tree_node_1afc6e1f55282105fd812724a8bb09a918" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend istream &amp;</type>
        <definition>istream&amp; operator&gt;&gt;</definition>
        <argsstring>(istream &amp;is, TreeNode &amp;t)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="class_tree_node" kindref="compound">TreeNode</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Overloading the &gt;&gt; operator for inputting the Treenode object from an input stream. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>is</parametername>
</parameternamelist>
<parameterdescription>
<para>the input stream. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>a Treenode object to input to. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the input stream. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/TreeNode.h" line="286" column="1" bodyfile="necsim/TreeNode.cpp" bodystart="195" bodyend="204"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="class_tree_node" kindref="compound">TreeNode</ref> class that acts as a data storage object for the phylogenetic tree. </para>    </briefdescription>
    <detaileddescription>
<para>Also contains all the necessary routines for changes to a lineage&apos;s attributes, called by TreeList objects when generating new coalescence trees. </para>    </detaileddescription>
    <location file="necsim/TreeNode.h" line="28" column="1" bodyfile="necsim/TreeNode.h" bodystart="27" bodyend="305"/>
    <listofallmembers>
      <member refid="class_tree_node_1a99516661c1321a1b4948be29ed247936" prot="public" virt="non-virtual"><scope>TreeNode</scope><name>burnSpecies</name></member>
      <member refid="class_tree_node_1a7f0b12c12b6352454862232bbce03cd4" prot="private" virt="non-virtual"><scope>TreeNode</scope><name>does_exist</name></member>
      <member refid="class_tree_node_1adca5ccf0cada63221a813cc72ec453de" prot="public" virt="non-virtual"><scope>TreeNode</scope><name>exists</name></member>
      <member refid="class_tree_node_1a9d2275fabe3be88f68d55107efddc79f" prot="private" virt="non-virtual"><scope>TreeNode</scope><name>generation_added</name></member>
      <member refid="class_tree_node_1a860dc7f853e2ce0775b5c765698e67b2" prot="private" virt="non-virtual"><scope>TreeNode</scope><name>generations_existed</name></member>
      <member refid="class_tree_node_1aacd1303b7b5481fb4b8a0f0481e45a50" prot="public" virt="non-virtual"><scope>TreeNode</scope><name>getGeneration</name></member>
      <member refid="class_tree_node_1a5f061a52d2b78908baebafae58e91e1d" prot="public" virt="non-virtual"><scope>TreeNode</scope><name>getGenRate</name></member>
      <member refid="class_tree_node_1aad17624440cf0b1739d56e48bc142d75" prot="public" virt="non-virtual"><scope>TreeNode</scope><name>getParent</name></member>
      <member refid="class_tree_node_1a9278669eb6ae607bc89278ff104075e3" prot="public" virt="non-virtual"><scope>TreeNode</scope><name>getSpeciesID</name></member>
      <member refid="class_tree_node_1a453643b70ee5e0c1f574bb25294b4807" prot="public" virt="non-virtual"><scope>TreeNode</scope><name>getSpecRate</name></member>
      <member refid="class_tree_node_1adf06aee733e652bff48553e0e598737f" prot="public" virt="non-virtual"><scope>TreeNode</scope><name>getXpos</name></member>
      <member refid="class_tree_node_1abf66032cab0e8a7583471e941991d252" prot="public" virt="non-virtual"><scope>TreeNode</scope><name>getXwrap</name></member>
      <member refid="class_tree_node_1a53e792c35abe0860f2277aeeca17022d" prot="public" virt="non-virtual"><scope>TreeNode</scope><name>getYpos</name></member>
      <member refid="class_tree_node_1a5b7ed0a3f729faea52fdc96b22977384" prot="public" virt="non-virtual"><scope>TreeNode</scope><name>getYwrap</name></member>
      <member refid="class_tree_node_1ad1f55fc63a25d6bf12e3bb6bc6034a3b" prot="public" virt="non-virtual"><scope>TreeNode</scope><name>hasSpeciated</name></member>
      <member refid="class_tree_node_1a9601d828d9ff808dd3081410a105a069" prot="public" virt="non-virtual"><scope>TreeNode</scope><name>increaseGen</name></member>
      <member refid="class_tree_node_1a92cce5b08cb7b5144d53d6efd444a54e" prot="public" virt="non-virtual"><scope>TreeNode</scope><name>isTip</name></member>
      <member refid="class_tree_node_1a2d73715892a5f20100609978a53dea81" prot="public" virt="non-virtual"><scope>TreeNode</scope><name>operator&lt;&lt;</name></member>
      <member refid="class_tree_node_1af362bf557fa6af455f6bac31c4f0356a" prot="public" virt="non-virtual"><scope>TreeNode</scope><name>operator=</name></member>
      <member refid="class_tree_node_1afc6e1f55282105fd812724a8bb09a918" prot="public" virt="non-virtual"><scope>TreeNode</scope><name>operator&gt;&gt;</name></member>
      <member refid="class_tree_node_1a8aa3c04a73a236b9bad07b71d0b5af21" prot="private" virt="non-virtual"><scope>TreeNode</scope><name>parent</name></member>
      <member refid="class_tree_node_1a78b82146ccdd88a405c701c1389c67e2" prot="public" virt="non-virtual"><scope>TreeNode</scope><name>qReset</name></member>
      <member refid="class_tree_node_1a715869c786bb0442d56994de11571605" prot="public" virt="non-virtual"><scope>TreeNode</scope><name>resetSpecies</name></member>
      <member refid="class_tree_node_1ad9f8d4d7d790cd0cd89a950cc0909519" prot="public" virt="non-virtual"><scope>TreeNode</scope><name>setExistence</name></member>
      <member refid="class_tree_node_1ab51e108eac10b3f9e3fdd1e42882a94c" prot="public" virt="non-virtual"><scope>TreeNode</scope><name>setGeneration</name></member>
      <member refid="class_tree_node_1a114820b41e7d84a5761573784acc1d5e" prot="public" virt="non-virtual"><scope>TreeNode</scope><name>setGenerationRate</name></member>
      <member refid="class_tree_node_1abd2840804b1d9b8caed25de5ae9b3ee6" prot="public" virt="non-virtual"><scope>TreeNode</scope><name>setParent</name></member>
      <member refid="class_tree_node_1a123ebe5ac7a4aa9c911aed404b22f166" prot="public" virt="non-virtual"><scope>TreeNode</scope><name>setPosition</name></member>
      <member refid="class_tree_node_1ac5b41ed58cd5270504d4891af28a3a52" prot="public" virt="non-virtual"><scope>TreeNode</scope><name>setSpec</name></member>
      <member refid="class_tree_node_1a7b0ead212f130b9754be7f1cb6eda13e" prot="public" virt="non-virtual"><scope>TreeNode</scope><name>setSpeciation</name></member>
      <member refid="class_tree_node_1acb1926edf4d646f81a60e3b76a6475e0" prot="public" virt="non-virtual"><scope>TreeNode</scope><name>setTip</name></member>
      <member refid="class_tree_node_1aac058ef4e26cc498e54ac5d0208e96e1" prot="public" virt="non-virtual"><scope>TreeNode</scope><name>setup</name></member>
      <member refid="class_tree_node_1ab8300978f2020de993f8ead2e08b8377" prot="public" virt="non-virtual"><scope>TreeNode</scope><name>setup</name></member>
      <member refid="class_tree_node_1a5d27405bfc2cf6be90895de24b40e076" prot="public" virt="non-virtual"><scope>TreeNode</scope><name>setup</name></member>
      <member refid="class_tree_node_1a65a021122e06071f6f127be3a0171518" prot="public" virt="non-virtual"><scope>TreeNode</scope><name>speciate</name></member>
      <member refid="class_tree_node_1ae6c0ccf5cd24379fdf73d1603145b4ba" prot="private" virt="non-virtual"><scope>TreeNode</scope><name>speciated</name></member>
      <member refid="class_tree_node_1ad36bed55f26a1b1496292289ee5d21e1" prot="private" virt="non-virtual"><scope>TreeNode</scope><name>speciation_probability</name></member>
      <member refid="class_tree_node_1a39d1eaadffe08b1f2ea9044a12c66f93" prot="private" virt="non-virtual"><scope>TreeNode</scope><name>species_id</name></member>
      <member refid="class_tree_node_1a18402326919cf4e3937344b82f660dcc" prot="private" virt="non-virtual"><scope>TreeNode</scope><name>tip</name></member>
      <member refid="class_tree_node_1a984a98d5ccf7ef1f5a18094c6821f35d" prot="public" virt="non-virtual"><scope>TreeNode</scope><name>TreeNode</name></member>
      <member refid="class_tree_node_1aeacb5355aa5c9045093212f2717de908" prot="private" virt="non-virtual"><scope>TreeNode</scope><name>xpos</name></member>
      <member refid="class_tree_node_1ac7e7e44f7056912ddc95ceb7fce35e18" prot="private" virt="non-virtual"><scope>TreeNode</scope><name>xwrap</name></member>
      <member refid="class_tree_node_1a5d89b94f9b75d4734fcf33907094f14f" prot="private" virt="non-virtual"><scope>TreeNode</scope><name>ypos</name></member>
      <member refid="class_tree_node_1adbbdad44151e01002717420940f39228" prot="private" virt="non-virtual"><scope>TreeNode</scope><name>ywrap</name></member>
      <member refid="class_tree_node_1a89eb1eb0e25fccaa83c780b85f95b570" prot="public" virt="non-virtual"><scope>TreeNode</scope><name>~TreeNode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
