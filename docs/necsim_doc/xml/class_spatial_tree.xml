<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_spatial_tree" kind="class" language="C++" prot="public">
    <compoundname>SpatialTree</compoundname>
    <basecompoundref refid="class_tree" prot="public" virt="virtual">Tree</basecompoundref>
    <derivedcompoundref refid="class_protracted_spatial_tree" prot="public" virt="non-virtual">ProtractedSpatialTree</derivedcompoundref>
    <includes refid="_spatial_tree_8h" local="no">SpatialTree.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_spatial_tree_1ad238e987bbf1cf2110bd6c3b980de3e4" prot="protected" static="no" mutable="no">
        <type><ref refid="class_dispersal_coordinator" kindref="compound">DispersalCoordinator</ref></type>
        <definition>DispersalCoordinator SpatialTree::dispersal_coordinator</definition>
        <argsstring></argsstring>
        <name>dispersal_coordinator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="92" column="1" bodyfile="necsim/SpatialTree.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spatial_tree_1aee26e469bc42c208feb98f6320bd9d0c" prot="protected" static="no" mutable="no">
        <type><ref refid="class_reproduction_map" kindref="compound">ReproductionMap</ref></type>
        <definition>ReproductionMap SpatialTree::rep_map</definition>
        <argsstring></argsstring>
        <name>rep_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="94" column="1" bodyfile="necsim/SpatialTree.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spatial_tree_1a44fdea35be7d4496248ee27c1457ad6a" prot="protected" static="no" mutable="no">
        <type>string</type>
        <definition>string SpatialTree::fine_map_input</definition>
        <argsstring></argsstring>
        <name>fine_map_input</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="97" column="1" bodyfile="necsim/SpatialTree.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spatial_tree_1a464b674dbf6f2968497f698ad9a16433" prot="protected" static="no" mutable="no">
        <type>string</type>
        <definition>string SpatialTree::coarse_map_input</definition>
        <argsstring></argsstring>
        <name>coarse_map_input</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="97" column="1" bodyfile="necsim/SpatialTree.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spatial_tree_1a0b6a624a8d0a434131f3ec5e2581d8b6" prot="protected" static="no" mutable="no">
        <type>string</type>
        <definition>string SpatialTree::pristine_fine_map_input</definition>
        <argsstring></argsstring>
        <name>pristine_fine_map_input</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="98" column="1" bodyfile="necsim/SpatialTree.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spatial_tree_1abf4a4019079d23e4489420fc14f0e461" prot="protected" static="no" mutable="no">
        <type>string</type>
        <definition>string SpatialTree::pristine_coarse_map_input</definition>
        <argsstring></argsstring>
        <name>pristine_coarse_map_input</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="98" column="1" bodyfile="necsim/SpatialTree.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spatial_tree_1a0ddea193979944b5df0e317cf1fe5be3" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double SpatialTree::gen_since_pristine</definition>
        <argsstring></argsstring>
        <name>gen_since_pristine</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="100" column="1" bodyfile="necsim/SpatialTree.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spatial_tree_1abdb9b4692e583b7db0e292cd0e26da56" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double SpatialTree::habitat_change_rate</definition>
        <argsstring></argsstring>
        <name>habitat_change_rate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="100" column="1" bodyfile="necsim/SpatialTree.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spatial_tree_1aa4c60d73794de44877b9ed66b73b4ed8" prot="protected" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long SpatialTree::grid_x_size</definition>
        <argsstring></argsstring>
        <name>grid_x_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="102" column="1" bodyfile="necsim/SpatialTree.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spatial_tree_1a03c67ea3848796e91a3b45afc9e99365" prot="protected" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long SpatialTree::grid_y_size</definition>
        <argsstring></argsstring>
        <name>grid_y_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="102" column="1" bodyfile="necsim/SpatialTree.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spatial_tree_1aa43ad30213722e213a5e727fa4df7d26" prot="protected" static="no" mutable="no">
        <type>long</type>
        <definition>long SpatialTree::fine_map_x_size</definition>
        <argsstring></argsstring>
        <name>fine_map_x_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="105" column="1" bodyfile="necsim/SpatialTree.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spatial_tree_1ac0ed1ed58adc2099735bbee0a1ef47d9" prot="protected" static="no" mutable="no">
        <type>long</type>
        <definition>long SpatialTree::fine_map_y_size</definition>
        <argsstring></argsstring>
        <name>fine_map_y_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="105" column="1" bodyfile="necsim/SpatialTree.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spatial_tree_1ac049de6119b9a9666f3328da1c28e285" prot="protected" static="no" mutable="no">
        <type>long</type>
        <definition>long SpatialTree::fine_map_x_offset</definition>
        <argsstring></argsstring>
        <name>fine_map_x_offset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="105" column="1" bodyfile="necsim/SpatialTree.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spatial_tree_1ad0074b25db2a7de1bbe3a62b0e5e4e1e" prot="protected" static="no" mutable="no">
        <type>long</type>
        <definition>long SpatialTree::fine_map_y_offset</definition>
        <argsstring></argsstring>
        <name>fine_map_y_offset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="105" column="1" bodyfile="necsim/SpatialTree.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spatial_tree_1a8fa4275acbf42f0fd95d8edd4ae425a9" prot="protected" static="no" mutable="no">
        <type>long</type>
        <definition>long SpatialTree::coarse_map_x_size</definition>
        <argsstring></argsstring>
        <name>coarse_map_x_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="106" column="1" bodyfile="necsim/SpatialTree.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spatial_tree_1a402d3c750b01e5fd4661d1adc4cd8659" prot="protected" static="no" mutable="no">
        <type>long</type>
        <definition>long SpatialTree::coarse_map_y_size</definition>
        <argsstring></argsstring>
        <name>coarse_map_y_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="106" column="1" bodyfile="necsim/SpatialTree.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spatial_tree_1a37e3608962bb1af677f9cf53b5d5a4c1" prot="protected" static="no" mutable="no">
        <type>long</type>
        <definition>long SpatialTree::coarse_map_x_offset</definition>
        <argsstring></argsstring>
        <name>coarse_map_x_offset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="106" column="1" bodyfile="necsim/SpatialTree.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spatial_tree_1a37988dc296cb7e58de13630a58685b0d" prot="protected" static="no" mutable="no">
        <type>long</type>
        <definition>long SpatialTree::coarse_map_y_offset</definition>
        <argsstring></argsstring>
        <name>coarse_map_y_offset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="106" column="1" bodyfile="necsim/SpatialTree.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spatial_tree_1ae4659e7c636e1796e1f3acef1724a38c" prot="protected" static="no" mutable="no">
        <type>long</type>
        <definition>long SpatialTree::coarse_map_scale</definition>
        <argsstring></argsstring>
        <name>coarse_map_scale</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="106" column="1" bodyfile="necsim/SpatialTree.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spatial_tree_1a3849ee88827d7278afe73cce56408d83" prot="protected" static="no" mutable="no">
        <type><ref refid="class_map" kindref="compound">Map</ref></type>
        <definition>Map SpatialTree::habitat_map</definition>
        <argsstring></argsstring>
        <name>habitat_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="109" column="1" bodyfile="necsim/SpatialTree.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spatial_tree_1a199167b149b25c506fdaeb660d595658" prot="protected" static="no" mutable="no">
        <type><ref refid="class_matrix" kindref="compound">Matrix</ref>&lt; <ref refid="class_species_list" kindref="compound">SpeciesList</ref> &gt;</type>
        <definition>Matrix&lt;SpeciesList&gt; SpatialTree::grid</definition>
        <argsstring></argsstring>
        <name>grid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="111" column="1" bodyfile="necsim/SpatialTree.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spatial_tree_1a26bf90b6b6e5f18d53b4d96f11dcce36" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double SpatialTree::sigma</definition>
        <argsstring></argsstring>
        <name>sigma</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="113" column="1" bodyfile="necsim/SpatialTree.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spatial_tree_1acf53651097bb38ef7aae42445e73ccb4" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double SpatialTree::tau</definition>
        <argsstring></argsstring>
        <name>tau</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="113" column="1" bodyfile="necsim/SpatialTree.h" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spatial_tree_1a92a159ead42d431773a52989254a1379" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double SpatialTree::dispersal_relative_cost</definition>
        <argsstring></argsstring>
        <name>dispersal_relative_cost</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="116" column="1" bodyfile="necsim/SpatialTree.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spatial_tree_1a694c7eb6c70687ea87e49066a8957877" prot="protected" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long SpatialTree::desired_specnum</definition>
        <argsstring></argsstring>
        <name>desired_specnum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="118" column="1" bodyfile="necsim/SpatialTree.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_spatial_tree_1ad902e850c9573b5c26ef6d77a203f72d" prot="protected" static="no" mutable="no">
        <type><ref refid="class_data_mask" kindref="compound">DataMask</ref></type>
        <definition>DataMask SpatialTree::samplegrid</definition>
        <argsstring></argsstring>
        <name>samplegrid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="120" column="1" bodyfile="necsim/SpatialTree.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_spatial_tree_1a051cc56f4f1284c419616ca6b582d52f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>SpatialTree::SpatialTree</definition>
        <argsstring>()</argsstring>
        <name>SpatialTree</name>
        <briefdescription>
<para>The constructor for the tree object. </para>        </briefdescription>
        <detaileddescription>
<para>Sets all uninitiated variables to false, except log_all. log_all should be changed to false if minimal text output during simulations is desired. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="128" column="1" bodyfile="necsim/SpatialTree.h" bodystart="128" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="class_spatial_tree_1ad2b7d5f103ed5d7c3b9219b55c176219" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SpatialTree::~SpatialTree</definition>
        <argsstring>()=default</argsstring>
        <name>~SpatialTree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="150" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_spatial_tree_1ac5fc862af2ca6f2b4c471c450093fcae" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SpatialTree::importSimulationVariables</definition>
        <argsstring>(const string &amp;configfile) override</argsstring>
        <name>importSimulationVariables</name>
        <reimplements refid="class_tree_1a455d87022772b309a5974ea5f0295139">importSimulationVariables</reimplements>
        <param>
          <type>const string &amp;</type>
          <declname>configfile</declname>
        </param>
        <briefdescription>
<para>Imports the simulation variables from the config file. </para>        </briefdescription>
        <detaileddescription>
<para>Also checks for paused simulations and file existence. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configfile</parametername>
</parameternamelist>
<parameterdescription>
<para>a vector containing the configfile to import from </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="157" column="1" bodyfile="necsim/SpatialTree.cpp" bodystart="17" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="class_spatial_tree_1ad6a5412bccbccc92a302b2fb05bbced2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SpatialTree::parseArgs</definition>
        <argsstring>(vector&lt; string &gt; &amp;comargs)</argsstring>
        <name>parseArgs</name>
        <param>
          <type>vector&lt; string &gt; &amp;</type>
          <declname>comargs</declname>
        </param>
        <briefdescription>
<para>Parses the command line arguments and saves the flags in <ref refid="class_tree" kindref="compound">Tree</ref> for fullmode, resuming and other important variables. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000007"><xreftitle>Deprecated</xreftitle><xrefdescription><para>command line arguments are no longer supported. Function will be removed at next major update. </para></xrefdescription></xrefsect><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>comargs</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="165" column="1" bodyfile="necsim/SpatialTree.cpp" bodystart="26" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="class_spatial_tree_1aef0097abc7c616ed656e26b4055834c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SpatialTree::checkFolders</definition>
        <argsstring>()</argsstring>
        <name>checkFolders</name>
        <briefdescription>
<para>Checks that the folders exist and the files required for the simulation also exist. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="170" column="1" bodyfile="necsim/SpatialTree.cpp" bodystart="199" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="class_spatial_tree_1a0c83bcd9a84f4fa98c78b75a78a9a012" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SpatialTree::setParameters</definition>
        <argsstring>() override</argsstring>
        <name>setParameters</name>
        <reimplements refid="class_tree_1ac374d237b7e2e7e11f6a0ff395003635">setParameters</reimplements>
        <briefdescription>
<para>Sets the map object with the correct variables, taking the <ref refid="struct_sim_parameters" kindref="compound">SimParameters</ref> structure defined elsewhere for the parameters. </para>        </briefdescription>
        <detaileddescription>
<para>Requires that parameters have already been imported into the <ref refid="struct_sim_parameters" kindref="compound">SimParameters</ref></para><para>This function can only be run once, otherwise a Main_Exception will be thrown </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="180" column="1" bodyfile="necsim/SpatialTree.cpp" bodystart="264" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="class_spatial_tree_1ab9603c25cd1c8466d1e4bfa3f73f191f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SpatialTree::importMaps</definition>
        <argsstring>()</argsstring>
        <name>importMaps</name>
        <briefdescription>
<para>Imports the maps into the forestmap object. </para>        </briefdescription>
        <detaileddescription>
<para>The simulation variables should have already been imported by <ref refid="class_spatial_tree_1a0c83bcd9a84f4fa98c78b75a78a9a012" kindref="member">setParameters()</ref>, otherwise a Fatal_Exception will be thrown. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="191" column="1" bodyfile="necsim/SpatialTree.cpp" bodystart="313" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="class_spatial_tree_1a5d9f29a12f8b66798139c89f153130db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SpatialTree::importReproductionMap</definition>
        <argsstring>()</argsstring>
        <name>importReproductionMap</name>
        <briefdescription>
<para>Imports the reproduction map from file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="196" column="1" bodyfile="necsim/SpatialTree.cpp" bodystart="351" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="class_spatial_tree_1a05ac9205ab49dbe6056522722372063b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>unsigned long</type>
        <definition>unsigned long SpatialTree::getInitialCount</definition>
        <argsstring>() override</argsstring>
        <name>getInitialCount</name>
        <reimplements refid="class_tree_1a1e0685310a5a9bca4d6069e8d4ce1f1b">getInitialCount</reimplements>
        <briefdescription>
<para>Counts the number of individuals that exist on the spatial grid. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the number of individuals that will be initially simulated </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="202" column="1" bodyfile="necsim/SpatialTree.cpp" bodystart="362" bodyend="419"/>
      </memberdef>
      <memberdef kind="function" id="class_spatial_tree_1a3ce93c4d62367f17dd523cab4cc35ae8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SpatialTree::setupDispersalCoordinator</definition>
        <argsstring>()</argsstring>
        <name>setupDispersalCoordinator</name>
        <briefdescription>
<para>Sets up the dispersal coordinator by linking to the correct functions and choosing the appropriate dispersal method. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="208" column="1" bodyfile="necsim/SpatialTree.cpp" bodystart="422" bodyend="431"/>
      </memberdef>
      <memberdef kind="function" id="class_spatial_tree_1ae97336318c81e182e9f445f7efdbff8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SpatialTree::setup</definition>
        <argsstring>() override</argsstring>
        <name>setup</name>
        <reimplements refid="class_tree_1aec10ea2b720edc13a38310afdfe2b6e4">setup</reimplements>
        <briefdescription>
<para>Contains the setup routines for a spatial landscape. It also checks for paused simulations and imports data if necessary from paused files. <ref refid="class_spatial_tree_1ab9603c25cd1c8466d1e4bfa3f73f191f" kindref="member">importMaps()</ref> is called for importing the map files. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="bug_1_bug000003"><xreftitle>Bug</xreftitle><xrefdescription><para>For values of dispersal, forest transform rate and time since pristine (and any other double values), they will not be correctly outputted to the SIMULATION_PARAMETERS table if the value is smaller than 10e-6. The solution is to implement string output mechanisms using boost::lexical_cast(), but this has so far only been deemed necessary for the speciation rate (which is intrinsically very small).</para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="221" column="1" bodyfile="necsim/SpatialTree.cpp" bodystart="433" bodyend="457"/>
      </memberdef>
      <memberdef kind="function" id="class_spatial_tree_1a030ece1d0756057e56f4272510d3e567" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>unsigned long</type>
        <definition>unsigned long SpatialTree::fillObjects</definition>
        <argsstring>(const unsigned long &amp;initial_count) override</argsstring>
        <name>fillObjects</name>
        <reimplements refid="class_tree_1a4af845777294c9116c60115e651620b4">fillObjects</reimplements>
        <param>
          <type>const unsigned long &amp;</type>
          <declname>initial_count</declname>
        </param>
        <briefdescription>
<para>Fill the active, data and grid objects with the starting lineages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>initial_count</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of individuals expected to exist </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of lineages added (for validation purposes) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="228" column="1" bodyfile="necsim/SpatialTree.cpp" bodystart="459" bodyend="601"/>
      </memberdef>
      <memberdef kind="function" id="class_spatial_tree_1a46d31dc58b01f2666e90078e95b2a25d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long SpatialTree::getIndividualsSampled</definition>
        <argsstring>(const long &amp;x, const long &amp;y, const long &amp;x_wrap, const long &amp;y_wrap, const double &amp;current_gen)</argsstring>
        <name>getIndividualsSampled</name>
        <param>
          <type>const long &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const long &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const long &amp;</type>
          <declname>x_wrap</declname>
        </param>
        <param>
          <type>const long &amp;</type>
          <declname>y_wrap</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>current_gen</declname>
        </param>
        <briefdescription>
<para>Gets the number of individuals to be sampled at the particular point and time. Round the number down to the nearest whole number for numbers of individuals. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the x location for individuals to be sampled </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>the y location for individuals to be sampled </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x_wrap</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of x wraps for the cell </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y_wrap</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of y wraps for the cell </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>current_gen</parametername>
</parameternamelist>
<parameterdescription>
<para>the current generation timer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of individuals to sample at this location. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="240" column="1" bodyfile="necsim/SpatialTree.cpp" bodystart="603" bodyend="615"/>
      </memberdef>
      <memberdef kind="function" id="class_spatial_tree_1ae694bde4ab31b51c13c4a96f9a86a8ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SpatialTree::removeOldPosition</definition>
        <argsstring>(const unsigned long &amp;chosen) override</argsstring>
        <name>removeOldPosition</name>
        <reimplements refid="class_tree_1ad74c05729c9e5235ab0fa6e34260093a">removeOldPosition</reimplements>
        <param>
          <type>const unsigned long &amp;</type>
          <declname>chosen</declname>
        </param>
        <briefdescription>
<para>Removes the old position within active by checking any wrapping and removing connections. </para>        </briefdescription>
        <detaileddescription>
<para>The function also corrects the linked list to identify the correct nwrap for every wrapped lineage in that space.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>chosen</parametername>
</parameternamelist>
<parameterdescription>
<para>the desired active reference to remove from the grid. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="249" column="1" bodyfile="necsim/SpatialTree.cpp" bodystart="617" bodyend="749"/>
      </memberdef>
      <memberdef kind="function" id="class_spatial_tree_1ac7202eff84dfe8931374cc236efb9133" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SpatialTree::calcMove</definition>
        <argsstring>()</argsstring>
        <name>calcMove</name>
        <briefdescription>
<para>Calculate the move, given a start x,y coordinates and wrapping. </para>        </briefdescription>
        <detaileddescription>
<para>The provided parameters will be altered to contain the new values so no record of the old variables remains after function running. Current dispersal methods use a fattailed dispersal. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="258" column="1" bodyfile="necsim/SpatialTree.cpp" bodystart="751" bodyend="754"/>
      </memberdef>
      <memberdef kind="function" id="class_spatial_tree_1ae6b453b80ea8ffedbbba799ac6142352" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long double</type>
        <definition>long double SpatialTree::calcMinMax</definition>
        <argsstring>(const unsigned long &amp;current)</argsstring>
        <name>calcMinMax</name>
        <param>
          <type>const unsigned long &amp;</type>
          <declname>current</declname>
        </param>
        <briefdescription>
<para>Calculates the minmax for a given branch. </para>        </briefdescription>
        <detaileddescription>
<para>Calculates the speciation rate required for speciation to have occured on this branch.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>current</parametername>
</parameternamelist>
<parameterdescription>
<para>the current active reference to perform calculations over. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="267" column="1" bodyfile="necsim/SpatialTree.cpp" bodystart="757" bodyend="776"/>
      </memberdef>
      <memberdef kind="function" id="class_spatial_tree_1ac2b2ab269b36896cb41c47f750b8c032" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SpatialTree::calcNewPos</definition>
        <argsstring>(bool &amp;coal, const unsigned long &amp;chosen, unsigned long &amp;coalchosen, const long &amp;oldx, const long &amp;oldy, const long &amp;oldxwrap, const long &amp;oldywrap)</argsstring>
        <name>calcNewPos</name>
        <param>
          <type>bool &amp;</type>
          <declname>coal</declname>
        </param>
        <param>
          <type>const unsigned long &amp;</type>
          <declname>chosen</declname>
        </param>
        <param>
          <type>unsigned long &amp;</type>
          <declname>coalchosen</declname>
        </param>
        <param>
          <type>const long &amp;</type>
          <declname>oldx</declname>
        </param>
        <param>
          <type>const long &amp;</type>
          <declname>oldy</declname>
        </param>
        <param>
          <type>const long &amp;</type>
          <declname>oldxwrap</declname>
        </param>
        <param>
          <type>const long &amp;</type>
          <declname>oldywrap</declname>
        </param>
        <briefdescription>
<para>Calculates the new position, checking whether coalescence has occured and with which lineage. </para>        </briefdescription>
        <detaileddescription>
<para>This involves correct handling of checking wrapped lineages (outside the original grid). The probability of coalescence is also calculated.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coal</parametername>
</parameternamelist>
<parameterdescription>
<para>boolean for whether coalescence occured or not </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chosen</parametername>
</parameternamelist>
<parameterdescription>
<para>the chosen lineage </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>coalchosen</parametername>
</parameternamelist>
<parameterdescription>
<para>the lineaged that is coalescing (if required) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>oldx</parametername>
</parameternamelist>
<parameterdescription>
<para>the old x position </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>oldy</parametername>
</parameternamelist>
<parameterdescription>
<para>the old y position </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>oldxwrap</parametername>
</parameternamelist>
<parameterdescription>
<para>the old x wrapping </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>oldywrap</parametername>
</parameternamelist>
<parameterdescription>
<para>the old y wrapping </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="284" column="1" bodyfile="necsim/SpatialTree.cpp" bodystart="780" bodyend="1005"/>
      </memberdef>
      <memberdef kind="function" id="class_spatial_tree_1a71c99204503ec59815a5338ab934331d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SpatialTree::switchPositions</definition>
        <argsstring>(const unsigned long &amp;chosen) override</argsstring>
        <name>switchPositions</name>
        <reimplements refid="class_tree_1ab1be13d2e99a4445a7cc84f907e0c90e">switchPositions</reimplements>
        <param>
          <type>const unsigned long &amp;</type>
          <declname>chosen</declname>
        </param>
        <briefdescription>
<para>Switches the chosen position with the endactive position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>chosen</parametername>
</parameternamelist>
<parameterdescription>
<para>the chosen lineage to switch with endactive. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="296" column="1" bodyfile="necsim/SpatialTree.cpp" bodystart="1007" bodyend="1125"/>
      </memberdef>
      <memberdef kind="function" id="class_spatial_tree_1a577196761885888dcb9366ab377f98cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SpatialTree::calcNextStep</definition>
        <argsstring>() override</argsstring>
        <name>calcNextStep</name>
        <reimplements refid="class_tree_1a0dc015aa5a45d2a75d80456d680172ac">calcNextStep</reimplements>
        <briefdescription>
<para>Calculates the next step for the simulation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="301" column="1" bodyfile="necsim/SpatialTree.cpp" bodystart="1127" bodyend="1137"/>
      </memberdef>
      <memberdef kind="function" id="class_spatial_tree_1a96919ff86b2a4d1de5ba14c2598a9346" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long SpatialTree::estSpecnum</definition>
        <argsstring>()</argsstring>
        <name>estSpecnum</name>
        <briefdescription>
<para>Estimates the species number from the second largest minimum speciation rate remaining in active. </para>        </briefdescription>
        <detaileddescription>
<para>This allows for halting of the simulation once this threshold has been reached. However, the function is not currently in use as calculating the coalescence tree is very computionally intensive. <xrefsect id="deprecated_1_deprecated000008"><xreftitle>Deprecated</xreftitle><xrefdescription><para>this function is currently obselete and not implemented, but was still functional as of version 3.2</para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="312" column="1" bodyfile="necsim/SpatialTree.cpp" bodystart="1139" bodyend="1226"/>
      </memberdef>
      <memberdef kind="function" id="class_spatial_tree_1aa5db72e986bed4b0aa81217f5be30cf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SpatialTree::incrementGeneration</definition>
        <argsstring>() override</argsstring>
        <name>incrementGeneration</name>
        <reimplements refid="class_tree_1a3f0c8928b4b72fb6f03cabd4d0e04457">incrementGeneration</reimplements>
        <briefdescription>
<para>Increments the generation counter and step references, then updates the map for any changes to habitat cover. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="326" column="1" bodyfile="necsim/SpatialTree.cpp" bodystart="1247" bodyend="1255"/>
      </memberdef>
      <memberdef kind="function" id="class_spatial_tree_1ad14491fc87b0a9b28f5b8b316ee8a89d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SpatialTree::updateStepCoalescenceVariables</definition>
        <argsstring>() override</argsstring>
        <name>updateStepCoalescenceVariables</name>
        <reimplements refid="class_tree_1ad65e94936001675b8bc908cf77e0cb53">updateStepCoalescenceVariables</reimplements>
        <briefdescription>
<para>Updates the coalescence variables in the step object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="331" column="1" bodyfile="necsim/SpatialTree.cpp" bodystart="1271" bodyend="1287"/>
      </memberdef>
      <memberdef kind="function" id="class_spatial_tree_1a6e802a5034648cc26b24923f27f85727" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SpatialTree::addLineages</definition>
        <argsstring>(double generation_in) override</argsstring>
        <name>addLineages</name>
        <reimplements refid="class_tree_1a8bfa9a86f122b21900ec33ab4b1e323f">addLineages</reimplements>
        <param>
          <type>double</type>
          <declname>generation_in</declname>
        </param>
        <briefdescription>
<para>Expands the map, generating the new lineages where necessary. </para>        </briefdescription>
        <detaileddescription>
<para>The samplemask provided is used for expansion. Any empty spaces are filled with a new lineage. Lineages which have not moved are changed to tips, with a new data entry so that original and new generations are recorded.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>generation_in</parametername>
</parameternamelist>
<parameterdescription>
<para>the generation that the expansion is occuring at. This is used in recording the new tips </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="342" column="1" bodyfile="necsim/SpatialTree.cpp" bodystart="1289" bodyend="1355"/>
      </memberdef>
      <memberdef kind="function" id="class_spatial_tree_1acc54786661c182b6df23e57a61716e0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>string</type>
        <definition>string SpatialTree::simulationParametersSqlInsertion</definition>
        <argsstring>() override</argsstring>
        <name>simulationParametersSqlInsertion</name>
        <reimplements refid="class_tree_1aed6504b4f759fb31fdeb61cd03b2b3f9">simulationParametersSqlInsertion</reimplements>
        <briefdescription>
<para>Creates a string containing the SQL insertion statement for the simulation parameters. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>string containing the SQL insertion statement </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="348" column="1" bodyfile="necsim/SpatialTree.cpp" bodystart="1357" bodyend="1390"/>
      </memberdef>
      <memberdef kind="function" id="class_spatial_tree_1af89289a1dc549102c0137763a7d26065" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SpatialTree::simPause</definition>
        <argsstring>() override</argsstring>
        <name>simPause</name>
        <reimplements refid="class_tree_1ae5308f74e982485ac444aa394b952152">simPause</reimplements>
        <briefdescription>
<para>Pause the simulation and dump data from memory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="354" column="1" bodyfile="necsim/SpatialTree.cpp" bodystart="1392" bodyend="1408"/>
      </memberdef>
      <memberdef kind="function" id="class_spatial_tree_1a51b4c8703d179cc4a4c861f8b36b4a9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SpatialTree::dumpMap</definition>
        <argsstring>(string pause_folder)</argsstring>
        <name>dumpMap</name>
        <param>
          <type>string</type>
          <declname>pause_folder</declname>
        </param>
        <briefdescription>
<para>Saves the map object to file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pause_folder</parametername>
</parameternamelist>
<parameterdescription>
<para>the folder to save files into </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="360" column="1" bodyfile="necsim/SpatialTree.cpp" bodystart="1410" bodyend="1427"/>
      </memberdef>
      <memberdef kind="function" id="class_spatial_tree_1ad578ceeaf0ab3f4a2e39eb907881c11f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void SpatialTree::simResume</definition>
        <argsstring>() override</argsstring>
        <name>simResume</name>
        <reimplements refid="class_tree_1a3d614f3848dc7acab168642efe345569">simResume</reimplements>
        <briefdescription>
<para>Resumes the simulation from a previous state. </para>        </briefdescription>
        <detaileddescription>
<para>Reads in the parameters and objects from file and re-starts the simulation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="367" column="1" bodyfile="necsim/SpatialTree.cpp" bodystart="1429" bodyend="1442"/>
      </memberdef>
      <memberdef kind="function" id="class_spatial_tree_1a6e3cfc1c0371d90ceaa7a463470de798" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SpatialTree::loadGridSave</definition>
        <argsstring>()</argsstring>
        <name>loadGridSave</name>
        <briefdescription>
<para>Loads the grid from the save file into memory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="372" column="1" bodyfile="necsim/SpatialTree.cpp" bodystart="1446" bodyend="1494"/>
      </memberdef>
      <memberdef kind="function" id="class_spatial_tree_1a585861bbad04528d2cabf7b1604a40dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SpatialTree::loadMapSave</definition>
        <argsstring>()</argsstring>
        <name>loadMapSave</name>
        <briefdescription>
<para>Loads the map from the save file into memory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="377" column="1" bodyfile="necsim/SpatialTree.cpp" bodystart="1496" bodyend="1519"/>
      </memberdef>
      <memberdef kind="function" id="class_spatial_tree_1a0eb6f50f218289c79770b203d3eeaada" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SpatialTree::verifyReproductionMap</definition>
        <argsstring>()</argsstring>
        <name>verifyReproductionMap</name>
        <briefdescription>
<para>Checks that the reproduction map makes sense with the fine density map. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="382" column="1" bodyfile="necsim/SpatialTree.cpp" bodystart="1521" bodyend="1541"/>
      </memberdef>
      <memberdef kind="function" id="class_spatial_tree_1a5b26973b7f2dd3ca842a2eb8d2957896" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SpatialTree::addWrappedLineage</definition>
        <argsstring>(unsigned long numstart, long x, long y)</argsstring>
        <name>addWrappedLineage</name>
        <param>
          <type>unsigned long</type>
          <declname>numstart</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Adds the lineage to the correct point in the linked list of active lineages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>numstart</parametername>
</parameternamelist>
<parameterdescription>
<para>the active position to add </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the x position of the lineage </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>the y position of the lineage </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="390" column="1" bodyfile="necsim/SpatialTree.cpp" bodystart="1543" bodyend="1569"/>
      </memberdef>
      <memberdef kind="function" id="class_spatial_tree_1a706ec7831f8c68e9245c00ebab76414f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long SpatialTree::countCellExpansion</definition>
        <argsstring>(const long &amp;x, const long &amp;y, const long &amp;xwrap, const long &amp;ywrap, const double &amp;generationin, const bool &amp;make_tips)</argsstring>
        <name>countCellExpansion</name>
        <param>
          <type>const long &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const long &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const long &amp;</type>
          <declname>xwrap</declname>
        </param>
        <param>
          <type>const long &amp;</type>
          <declname>ywrap</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>generationin</declname>
        </param>
        <param>
          <type>const bool &amp;</type>
          <declname>make_tips</declname>
        </param>
        <briefdescription>
<para>Counts the number of lineages at a particular location that need to be added, after making the correct number of those that already exist into tips. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the x coordinate of the location of interest </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>the y coordinate of the location of interest </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xwrap</parametername>
</parameternamelist>
<parameterdescription>
<para>the x wrapping of the location </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ywrap</parametername>
</parameternamelist>
<parameterdescription>
<para>the y wrapping of the location </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>generationin</parametername>
</parameternamelist>
<parameterdescription>
<para>the generation to assign to new tips </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>make_tips</parametername>
</parameternamelist>
<parameterdescription>
<para>if true, stores the tips as well as counting them </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of new lineages that need to be added. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="404" column="1" bodyfile="necsim/SpatialTree.cpp" bodystart="1572" bodyend="1618"/>
      </memberdef>
      <memberdef kind="function" id="class_spatial_tree_1ac986898035a4c5c159cc6db19092c159" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SpatialTree::expandCell</definition>
        <argsstring>(long x, long y, long x_wrap, long y_wrap, double generation_in, unsigned long add)</argsstring>
        <name>expandCell</name>
        <param>
          <type>long</type>
          <declname>x</declname>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x_wrap</declname>
        </param>
        <param>
          <type>long</type>
          <declname>y_wrap</declname>
        </param>
        <param>
          <type>double</type>
          <declname>generation_in</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>add</declname>
        </param>
        <briefdescription>
<para>Expands the cell at the desired location by adding the supplied number of lineages. </para>        </briefdescription>
        <detaileddescription>
<para>This takes into account wrapping to correctly add the right number</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the x coordinate to add at </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>the y coordinate to add at </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x_wrap</parametername>
</parameternamelist>
<parameterdescription>
<para>the x wrapping to add at </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y_wrap</parametername>
</parameternamelist>
<parameterdescription>
<para>the y wrapping to add at </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>generation_in</parametername>
</parameternamelist>
<parameterdescription>
<para>the generation to set the new lineages to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>add</parametername>
</parameternamelist>
<parameterdescription>
<para>the total number of lineages to add at this location </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="419" column="1" bodyfile="necsim/SpatialTree.cpp" bodystart="1620" bodyend="1658"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents the output phylogenetic tree, when run on a spatially-explicit landscape. </para>    </briefdescription>
    <detaileddescription>
<para>Contains all functions for running simulations, outputting data and calculating coalescence tree structure. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="592">
        <label>SpatialTree</label>
        <link refid="class_spatial_tree"/>
        <childnode refid="593" relation="public-inheritance">
        </childnode>
      </node>
      <node id="594">
        <label>ProtractedSpatialTree</label>
        <link refid="class_protracted_spatial_tree"/>
        <childnode refid="592" relation="public-inheritance">
        </childnode>
      </node>
      <node id="593">
        <label>Tree</label>
        <link refid="class_tree"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="608">
        <label>Row&lt; double &gt;</label>
        <link refid="class_row"/>
      </node>
      <node id="618">
        <label>std::vector&lt; long double &gt;</label>
      </node>
      <node id="619">
        <label>Step</label>
        <link refid="struct_step"/>
      </node>
      <node id="625">
        <label>Row&lt; SpeciesList &gt;</label>
        <link refid="class_row"/>
      </node>
      <node id="604">
        <label>std::vector&lt; double &gt;</label>
      </node>
      <node id="626">
        <label>Map</label>
        <link refid="class_map"/>
        <childnode refid="600" relation="usage">
          <edgelabel>NextMap</edgelabel>
          <edgelabel>landscape_type</edgelabel>
        </childnode>
        <childnode refid="627" relation="usage">
          <edgelabel>fine_map</edgelabel>
          <edgelabel>coarse_map</edgelabel>
          <edgelabel>pristine_fine_map</edgelabel>
          <edgelabel>pristine_coarse_map</edgelabel>
        </childnode>
        <childnode refid="622" relation="usage">
          <edgelabel>mapvars</edgelabel>
        </childnode>
      </node>
      <node id="613">
        <label>std::vector&lt; CommunityParameters &gt;</label>
        <childnode refid="602" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="617">
        <label>Row&lt; unsigned long &gt;</label>
        <link refid="class_row"/>
      </node>
      <node id="602">
        <label>CommunityParameters</label>
        <link refid="struct_community_parameters"/>
      </node>
      <node id="610">
        <label>Row&lt; bool &gt;</label>
        <link refid="class_row"/>
      </node>
      <node id="621">
        <label>Row&lt; DataPoint &gt;</label>
        <link refid="class_row"/>
      </node>
      <node id="623">
        <label>ConfigOption</label>
        <link refid="class_config_option"/>
      </node>
      <node id="597">
        <label>Community</label>
        <link refid="class_community"/>
        <childnode refid="598" relation="usage">
          <edgelabel>fragments</edgelabel>
        </childnode>
        <childnode refid="602" relation="usage">
          <edgelabel>current_community_parameters</edgelabel>
        </childnode>
        <childnode refid="603" relation="usage">
          <edgelabel>spec_sim_parameters</edgelabel>
        </childnode>
        <childnode refid="605" relation="usage">
          <edgelabel>samplemask</edgelabel>
        </childnode>
        <childnode refid="611" relation="usage">
          <edgelabel>nodes</edgelabel>
        </childnode>
        <childnode refid="612" relation="usage">
          <edgelabel>past_communities</edgelabel>
        </childnode>
        <childnode refid="614" relation="usage">
          <edgelabel>past_metacommunities</edgelabel>
        </childnode>
        <childnode refid="617" relation="usage">
          <edgelabel>row_out</edgelabel>
        </childnode>
      </node>
      <node id="624">
        <label>Matrix&lt; SpeciesList &gt;</label>
        <link refid="class_matrix"/>
        <childnode refid="625" relation="usage">
          <edgelabel>matrix</edgelabel>
        </childnode>
      </node>
      <node id="595">
        <label>SpatialTree</label>
        <link refid="class_spatial_tree"/>
        <childnode refid="596" relation="public-inheritance">
        </childnode>
        <childnode refid="606" relation="usage">
          <edgelabel>samplegrid</edgelabel>
        </childnode>
        <childnode refid="624" relation="usage">
          <edgelabel>grid</edgelabel>
        </childnode>
        <childnode refid="626" relation="usage">
          <edgelabel>habitat_map</edgelabel>
        </childnode>
        <childnode refid="629" relation="usage">
          <edgelabel>dispersal_coordinator</edgelabel>
        </childnode>
        <childnode refid="600" relation="usage">
          <edgelabel>fine_map_input</edgelabel>
          <edgelabel>pristine_coarse_map_input</edgelabel>
          <edgelabel>coarse_map_input</edgelabel>
          <edgelabel>pristine_fine_map_input</edgelabel>
        </childnode>
        <childnode refid="630" relation="usage">
          <edgelabel>rep_map</edgelabel>
        </childnode>
      </node>
      <node id="601">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="615">
        <label>std::vector&lt; MetacommunityParameters &gt;</label>
        <childnode refid="616" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="596">
        <label>Tree</label>
        <link refid="class_tree"/>
        <childnode refid="597" relation="usage">
          <edgelabel>community</edgelabel>
        </childnode>
        <childnode refid="618" relation="usage">
          <edgelabel>speciation_rates</edgelabel>
        </childnode>
        <childnode refid="619" relation="usage">
          <edgelabel>this_step</edgelabel>
        </childnode>
        <childnode refid="600" relation="usage">
          <edgelabel>times_file</edgelabel>
          <edgelabel>pause_sim_directory</edgelabel>
          <edgelabel>sqloutname</edgelabel>
          <edgelabel>out_directory</edgelabel>
        </childnode>
        <childnode refid="620" relation="usage">
          <edgelabel>NR</edgelabel>
        </childnode>
        <childnode refid="611" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
        <childnode refid="621" relation="usage">
          <edgelabel>active</edgelabel>
        </childnode>
        <childnode refid="604" relation="usage">
          <edgelabel>reference_times</edgelabel>
        </childnode>
        <childnode refid="622" relation="usage">
          <edgelabel>sim_parameters</edgelabel>
        </childnode>
      </node>
      <node id="620">
        <label>NRrand</label>
        <link refid="class_n_rrand"/>
      </node>
      <node id="616">
        <label>MetacommunityParameters</label>
        <link refid="struct_metacommunity_parameters"/>
      </node>
      <node id="603">
        <label>SpecSimParameters</label>
        <link refid="struct_spec_sim_parameters"/>
        <childnode refid="604" relation="usage">
          <edgelabel>all_times</edgelabel>
          <edgelabel>all_speciation_rates</edgelabel>
        </childnode>
      </node>
      <node id="611">
        <label>Row&lt; TreeNode &gt;</label>
        <link refid="class_row"/>
      </node>
      <node id="622">
        <label>SimParameters</label>
        <link refid="struct_sim_parameters"/>
        <childnode refid="623" relation="usage">
          <edgelabel>configs</edgelabel>
        </childnode>
        <childnode refid="600" relation="usage">
          <edgelabel>reproduction_file</edgelabel>
          <edgelabel>times_file</edgelabel>
          <edgelabel>sample_mask_file</edgelabel>
          <edgelabel>fine_map_file</edgelabel>
          <edgelabel>dispersal_method</edgelabel>
          <edgelabel>dispersal_file</edgelabel>
          <edgelabel>pristine_fine_map_file</edgelabel>
          <edgelabel>output_directory</edgelabel>
          <edgelabel>pristine_coarse_map_file</edgelabel>
          <edgelabel>coarse_map_file</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
      </node>
      <node id="605">
        <label>Samplematrix</label>
        <link refid="class_samplematrix"/>
        <childnode refid="606" relation="public-inheritance">
        </childnode>
      </node>
      <node id="609">
        <label>Matrix&lt; bool &gt;</label>
        <link refid="class_matrix"/>
        <childnode refid="610" relation="usage">
          <edgelabel>matrix</edgelabel>
        </childnode>
      </node>
      <node id="606">
        <label>DataMask</label>
        <link refid="class_data_mask"/>
        <childnode refid="607" relation="usage">
          <edgelabel>sample_mask_exact</edgelabel>
        </childnode>
        <childnode refid="609" relation="usage">
          <edgelabel>sample_mask</edgelabel>
        </childnode>
        <childnode refid="600" relation="usage">
          <edgelabel>inputfile</edgelabel>
        </childnode>
      </node>
      <node id="599">
        <label>Fragment</label>
        <link refid="struct_fragment"/>
        <childnode refid="600" relation="usage">
          <edgelabel>name</edgelabel>
        </childnode>
      </node>
      <node id="612">
        <label>CommunitiesArray</label>
        <link refid="struct_communities_array"/>
        <childnode refid="613" relation="usage">
          <edgelabel>calc_array</edgelabel>
        </childnode>
      </node>
      <node id="607">
        <label>Matrix&lt; double &gt;</label>
        <link refid="class_matrix"/>
        <childnode refid="608" relation="usage">
          <edgelabel>matrix</edgelabel>
        </childnode>
      </node>
      <node id="627">
        <label>Matrix&lt; uint32_t &gt;</label>
        <link refid="class_matrix"/>
        <childnode refid="628" relation="usage">
          <edgelabel>matrix</edgelabel>
        </childnode>
      </node>
      <node id="614">
        <label>MetacommunitiesArray</label>
        <link refid="struct_metacommunities_array"/>
        <childnode refid="615" relation="usage">
          <edgelabel>calc_array</edgelabel>
        </childnode>
      </node>
      <node id="628">
        <label>Row&lt; uint32_t &gt;</label>
        <link refid="class_row"/>
      </node>
      <node id="629">
        <label>DispersalCoordinator</label>
        <link refid="class_dispersal_coordinator"/>
        <childnode refid="607" relation="usage">
          <edgelabel>dispersal_prob_map</edgelabel>
        </childnode>
        <childnode refid="626" relation="usage">
          <edgelabel>habitat_map</edgelabel>
        </childnode>
        <childnode refid="619" relation="usage">
          <edgelabel>doDispersal</edgelabel>
        </childnode>
        <childnode refid="620" relation="usage">
          <edgelabel>NR</edgelabel>
        </childnode>
      </node>
      <node id="630">
        <label>ReproductionMap</label>
        <link refid="class_reproduction_map"/>
        <childnode refid="607" relation="usage">
          <edgelabel>reproduction_map</edgelabel>
        </childnode>
        <childnode refid="600" relation="usage">
          <edgelabel>map_file</edgelabel>
        </childnode>
        <childnode refid="620" relation="usage">
          <edgelabel>reproductionMapChecker_fptr</edgelabel>
        </childnode>
      </node>
      <node id="598">
        <label>std::vector&lt; Fragment &gt;</label>
        <childnode refid="599" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="600">
        <label>std::string</label>
        <childnode refid="601" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="necsim/SpatialTree.h" line="89" column="1" bodyfile="necsim/SpatialTree.h" bodystart="88" bodyend="455"/>
    <listofallmembers>
      <member refid="class_tree_1a047b331de4979aa4713c69f09237ac35" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>active</name></member>
      <member refid="class_spatial_tree_1a6e802a5034648cc26b24923f27f85727" prot="public" virt="virtual"><scope>SpatialTree</scope><name>addLineages</name></member>
      <member refid="class_spatial_tree_1a5b26973b7f2dd3ca842a2eb8d2957896" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>addWrappedLineage</name></member>
      <member refid="class_tree_1acfc7efdec999f6dbf2ac089514d22091" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>applyMultipleRates</name></member>
      <member refid="class_tree_1aa6349a32b3fcfb82a5f8311b11db3982" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>applySpecRate</name></member>
      <member refid="class_tree_1ab699328f13b22f48faa63a5638e907db" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>applySpecRate</name></member>
      <member refid="class_tree_1ac89abe0404d05d0363258b72cb80700b" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>applySpecRateInternal</name></member>
      <member refid="class_tree_1a6c8c76aec6a9faef9c38f4f275b0793d" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>bConfig</name></member>
      <member refid="class_tree_1a9379466b9fc0f25bd28543743000e700" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>bFullmode</name></member>
      <member refid="class_tree_1a1f7515f16d99a9748ab2c4c667f1ffc4" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>bIsProtracted</name></member>
      <member refid="class_tree_1ac9cbd7d17fb511c1fcc70c765f6440b0" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>bResume</name></member>
      <member refid="class_spatial_tree_1ae6b453b80ea8ffedbbba799ac6142352" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>calcMinMax</name></member>
      <member refid="class_spatial_tree_1ac7202eff84dfe8931374cc236efb9133" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>calcMove</name></member>
      <member refid="class_spatial_tree_1ac2b2ab269b36896cb41c47f750b8c032" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>calcNewPos</name></member>
      <member refid="class_spatial_tree_1a577196761885888dcb9366ab377f98cb" prot="public" virt="virtual"><scope>SpatialTree</scope><name>calcNextStep</name></member>
      <member refid="class_tree_1abc9389511e1aecf5e573315fc8f4d77c" prot="public" virt="virtual"><scope>SpatialTree</scope><name>calcSpeciation</name></member>
      <member refid="class_spatial_tree_1aef0097abc7c616ed656e26b4055834c3" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>checkFolders</name></member>
      <member refid="class_tree_1a5c6065ede9862e9fb6561eb8beaf5d78" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>checkOutputDirectory</name></member>
      <member refid="class_tree_1ad0bcc474a9ab1d4e3e2458c4de7304ad" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>checkSims</name></member>
      <member refid="class_tree_1aafaede1da6c79583bf2e28b7a1881a5c" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>checkSims</name></member>
      <member refid="class_tree_1ab8a62d0ca2b1746676073e3f33e2a949" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>checkSimSize</name></member>
      <member refid="class_tree_1afcbe72c55b38c94ae17de9c2e1dd3a7f" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>checkTimeUpdate</name></member>
      <member refid="class_tree_1a23803bddf46ad28a1bdd46bf05693b1f" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>chooseRandomLineage</name></member>
      <member refid="class_tree_1a16eedb70009e7570d933f88e8ce44117" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>coalescenceEvent</name></member>
      <member refid="class_spatial_tree_1a464b674dbf6f2968497f698ad9a16433" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>coarse_map_input</name></member>
      <member refid="class_spatial_tree_1ae4659e7c636e1796e1f3acef1724a38c" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>coarse_map_scale</name></member>
      <member refid="class_spatial_tree_1a37e3608962bb1af677f9cf53b5d5a4c1" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>coarse_map_x_offset</name></member>
      <member refid="class_spatial_tree_1a8fa4275acbf42f0fd95d8edd4ae425a9" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>coarse_map_x_size</name></member>
      <member refid="class_spatial_tree_1a37988dc296cb7e58de13630a58685b0d" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>coarse_map_y_offset</name></member>
      <member refid="class_spatial_tree_1a402d3c750b01e5fd4661d1adc4cd8659" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>coarse_map_y_size</name></member>
      <member refid="class_tree_1adbb8b625d03dbcdca00f3d8d4b4a50df" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>community</name></member>
      <member refid="class_tree_1a3fddb18a5d19b64dec378dca3d3fea31" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>completePause</name></member>
      <member refid="class_tree_1a6af2aaa691ffbb9899e3f070a715e371" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>convertTip</name></member>
      <member refid="class_spatial_tree_1a706ec7831f8c68e9245c00ebab76414f" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>countCellExpansion</name></member>
      <member refid="class_tree_1a5983af6c56e41be51be0766941093b4b" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>data</name></member>
      <member refid="class_tree_1aae24ce11e30fbd74fe078b23b46c14cd" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>database</name></member>
      <member refid="class_tree_1a9fe104115b4593c772c03b57b82ff0de" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>deme</name></member>
      <member refid="class_tree_1ac7a1d0583d3dcb55c50fec0e1fd57985" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>deme_sample</name></member>
      <member refid="class_spatial_tree_1a694c7eb6c70687ea87e49066a8957877" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>desired_specnum</name></member>
      <member refid="class_tree_1a25f082da13789dfa3fefcbcfd08b4dfe" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>determineSpeciationRates</name></member>
      <member refid="class_spatial_tree_1ad238e987bbf1cf2110bd6c3b980de3e4" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>dispersal_coordinator</name></member>
      <member refid="class_spatial_tree_1a92a159ead42d431773a52989254a1379" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>dispersal_relative_cost</name></member>
      <member refid="class_tree_1aca99503f49b91baae7401423fe547daf" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>dumpActive</name></member>
      <member refid="class_tree_1acd23fa139c7d097315c9479187b1a674" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>dumpData</name></member>
      <member refid="class_tree_1a4c2988184328a5236ca61f16744cfac2" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>dumpMain</name></member>
      <member refid="class_spatial_tree_1a51b4c8703d179cc4a4c861f8b36b4a9b" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>dumpMap</name></member>
      <member refid="class_tree_1ab478831f09c135bc9a4bc991c9fd5076" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>endactive</name></member>
      <member refid="class_tree_1a50344999e6b64d15eef935b1f6023471" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>enddata</name></member>
      <member refid="class_spatial_tree_1a96919ff86b2a4d1de5ba14c2598a9346" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>estSpecnum</name></member>
      <member refid="class_spatial_tree_1ac986898035a4c5c159cc6db19092c159" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>expandCell</name></member>
      <member refid="class_spatial_tree_1a030ece1d0756057e56f4272510d3e567" prot="public" virt="virtual"><scope>SpatialTree</scope><name>fillObjects</name></member>
      <member refid="class_spatial_tree_1a44fdea35be7d4496248ee27c1457ad6a" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>fine_map_input</name></member>
      <member refid="class_spatial_tree_1ac049de6119b9a9666f3328da1c28e285" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>fine_map_x_offset</name></member>
      <member refid="class_spatial_tree_1aa43ad30213722e213a5e727fa4df7d26" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>fine_map_x_size</name></member>
      <member refid="class_spatial_tree_1ad0074b25db2a7de1bbe3a62b0e5e4e1e" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>fine_map_y_offset</name></member>
      <member refid="class_spatial_tree_1ac0ed1ed58adc2099735bbee0a1ef47d9" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>fine_map_y_size</name></member>
      <member refid="class_spatial_tree_1a0ddea193979944b5df0e317cf1fe5be3" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>gen_since_pristine</name></member>
      <member refid="class_tree_1a50b3d13d4032e0d7a69890b9bd7f84fa" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>generateObjects</name></member>
      <member refid="class_tree_1a84cc46d51045ff3b161ee8788950e0c2" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>generation</name></member>
      <member refid="class_tree_1a49a94b2218f7ae127a53af4a58d02b06" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>getCumulativeAbundances</name></member>
      <member refid="class_spatial_tree_1a46d31dc58b01f2666e90078e95b2a25d" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>getIndividualsSampled</name></member>
      <member refid="class_spatial_tree_1a05ac9205ab49dbe6056522722372063b" prot="public" virt="virtual"><scope>SpatialTree</scope><name>getInitialCount</name></member>
      <member refid="class_tree_1aa23a57f7863d58384f61d464d998ab3c" prot="public" virt="virtual"><scope>SpatialTree</scope><name>getProtracted</name></member>
      <member refid="class_tree_1a0c5e746982a87f24c083f4534bf92b45" prot="public" virt="virtual"><scope>SpatialTree</scope><name>getProtractedGenerationMax</name></member>
      <member refid="class_tree_1a6ffc42e941f352cd74f01f6f7011f00b" prot="public" virt="virtual"><scope>SpatialTree</scope><name>getProtractedGenerationMin</name></member>
      <member refid="class_tree_1a34c0808026bf00546c8f9786376be730" prot="public" virt="virtual"><scope>SpatialTree</scope><name>getProtractedVariables</name></member>
      <member refid="class_tree_1a857521315ca6bd9b3300d099488d74f1" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>getSeed</name></member>
      <member refid="class_tree_1ac03c034a5730ee4f4d8727aace776412" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>getTemporalSampling</name></member>
      <member refid="class_spatial_tree_1a199167b149b25c506fdaeb660d595658" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>grid</name></member>
      <member refid="class_spatial_tree_1aa4c60d73794de44877b9ed66b73b4ed8" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>grid_x_size</name></member>
      <member refid="class_spatial_tree_1a03c67ea3848796e91a3b45afc9e99365" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>grid_y_size</name></member>
      <member refid="class_spatial_tree_1abdb9b4692e583b7db0e292cd0e26da56" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>habitat_change_rate</name></member>
      <member refid="class_spatial_tree_1a3849ee88827d7278afe73cce56408d83" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>habitat_map</name></member>
      <member refid="class_tree_1ad8d1d7e4fa673b28542ba31c5b637856" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>has_imported_pause</name></member>
      <member refid="class_tree_1a97bde28466a098bb9e58c1bd5610fd68" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>has_imported_vars</name></member>
      <member refid="class_tree_1aaa64e29ab7bc3c6f48d454063f0c39e1" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>has_paused</name></member>
      <member refid="class_tree_1adf239a9aa029c9c6eda4b10c5ce20780" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>has_times_file</name></member>
      <member refid="class_tree_1ae07761c0a91a44ebe459904b1b8ffb43" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>hasPaused</name></member>
      <member refid="class_spatial_tree_1ab9603c25cd1c8466d1e4bfa3f73f191f" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>importMaps</name></member>
      <member refid="class_spatial_tree_1a5d9f29a12f8b66798139c89f153130db" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>importReproductionMap</name></member>
      <member refid="class_spatial_tree_1ac5fc862af2ca6f2b4c471c450093fcae" prot="public" virt="virtual"><scope>SpatialTree</scope><name>importSimulationVariables</name></member>
      <member refid="class_spatial_tree_1aa5db72e986bed4b0aa81217f5be30cf4" prot="public" virt="virtual"><scope>SpatialTree</scope><name>incrementGeneration</name></member>
      <member refid="class_tree_1a9b2df7fd1b61d3d70ac630f7fbfd683d" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>initiatePause</name></member>
      <member refid="class_tree_1a8cfe5d30d53d702f18cd67981e2c9acb" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>initiateResume</name></member>
      <member refid="class_tree_1a62db83e47e5850c6a83793829b22b68b" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>internalSetup</name></member>
      <member refid="class_tree_1af145148202f11654d6d6a15a6c021924" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>loadActiveSave</name></member>
      <member refid="class_tree_1af7db53d4870d845741d3159f57b73b30" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>loadDataSave</name></member>
      <member refid="class_spatial_tree_1a6e3cfc1c0371d90ceaa7a463470de798" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>loadGridSave</name></member>
      <member refid="class_tree_1af57075728924141c7b6d311822a22dc0" prot="public" virt="virtual"><scope>SpatialTree</scope><name>loadMainSave</name></member>
      <member refid="class_spatial_tree_1a585861bbad04528d2cabf7b1604a40dc" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>loadMapSave</name></member>
      <member refid="class_tree_1a0973cc37d9b95144db76d36cb363caca" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>makeTip</name></member>
      <member refid="class_tree_1a0244ee15452c38393246147d93836b4d" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>maxsimsize</name></member>
      <member refid="class_tree_1a1868cf626a0b12f21a038989d4eca210" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>maxtime</name></member>
      <member refid="class_tree_1a5510d0fb5deb23fd39a2619d104f85fa" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>now</name></member>
      <member refid="class_tree_1aa7df162306777b040a9a2aac543e6801" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>NR</name></member>
      <member refid="class_tree_1a85615771af7b568adca1b801995cfdc7" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>out_directory</name></member>
      <member refid="class_tree_1a5ee1fa5adf72bb599badc041fbee7d09" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>out_finish</name></member>
      <member refid="class_tree_1afd585c8a4bdb86461780418f7b886abd" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>outdatabase</name></member>
      <member refid="class_tree_1afdf680e187c25ed39d1e66542ce44cc3" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>outputData</name></member>
      <member refid="class_tree_1a5acf7d0eea9ea2ef4928bb6691b87724" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>outputData</name></member>
      <member refid="class_spatial_tree_1ad6a5412bccbccc92a302b2fb05bbced2" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>parseArgs</name></member>
      <member refid="class_tree_1a504a4d7ae23146fd6236baa59da51a6e" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>pause_sim_directory</name></member>
      <member refid="class_tree_1ab71da7797a6586ddd948661c34ce4788" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>printSetup</name></member>
      <member refid="class_spatial_tree_1abf4a4019079d23e4489420fc14f0e461" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>pristine_coarse_map_input</name></member>
      <member refid="class_spatial_tree_1a0b6a624a8d0a434131f3ec5e2581d8b6" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>pristine_fine_map_input</name></member>
      <member refid="class_tree_1aa8bb5d93c7992404ede0a49bb69ccd1f" prot="public" virt="virtual"><scope>SpatialTree</scope><name>protractedVarsToString</name></member>
      <member refid="class_tree_1a56bb1ea64368f5b705360a435350f9d5" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>reference_times</name></member>
      <member refid="class_spatial_tree_1ae694bde4ab31b51c13c4a96f9a86a8ba" prot="public" virt="virtual"><scope>SpatialTree</scope><name>removeOldPosition</name></member>
      <member refid="class_spatial_tree_1aee26e469bc42c208feb98f6320bd9d0c" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>rep_map</name></member>
      <member refid="class_tree_1afe75245862a1c40030c1c8607518cf8d" prot="public" virt="virtual"><scope>SpatialTree</scope><name>runSimulation</name></member>
      <member refid="class_spatial_tree_1ad902e850c9573b5c26ef6d77a203f72d" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>samplegrid</name></member>
      <member refid="class_tree_1a78935befd45946b8e69023bffca59c1d" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>seeded</name></member>
      <member refid="class_tree_1aec2640897132a1b667e852bbafc14c78" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>setInitialValues</name></member>
      <member refid="class_tree_1a869ab0aba75336f737cbb137c74b8abc" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>setObjectSizes</name></member>
      <member refid="class_spatial_tree_1a0c83bcd9a84f4fa98c78b75a78a9a012" prot="public" virt="virtual"><scope>SpatialTree</scope><name>setParameters</name></member>
      <member refid="class_tree_1a891764ffc1e29d3edbe0fd08e67a184b" prot="public" virt="virtual"><scope>SpatialTree</scope><name>setProtractedVariables</name></member>
      <member refid="class_tree_1ac545d844141db977920fc9fd76ce9dbb" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>setResumeParameters</name></member>
      <member refid="class_tree_1aeade4bccb8394937a53bc4fbcf2b4300" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>setResumeParameters</name></member>
      <member refid="class_tree_1ab240ab1988cbde281a6811b3fdc1dd5d" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>setSeed</name></member>
      <member refid="class_tree_1a1ba0f5d27c6ef6e9e17f988aff2dfe65" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>setSimStartVariables</name></member>
      <member refid="class_tree_1ae3fb33c46cf7e3af44604a9875b375a3" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>setTimes</name></member>
      <member refid="class_spatial_tree_1ae97336318c81e182e9f445f7efdbff8d" prot="public" virt="virtual"><scope>SpatialTree</scope><name>setup</name></member>
      <member refid="class_spatial_tree_1a3ce93c4d62367f17dd523cab4cc35ae8" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>setupDispersalCoordinator</name></member>
      <member refid="class_tree_1a9997b98824a786d9843a3df40de1226a" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>setupTreeGeneration</name></member>
      <member refid="class_spatial_tree_1a26bf90b6b6e5f18d53b4d96f11dcce36" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>sigma</name></member>
      <member refid="class_tree_1a07f9982fd6f6243c78ef42371603bbe4" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>sim_complete</name></member>
      <member refid="class_tree_1a26100477c7e58a9e0a90cdee1379ed69" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>sim_end</name></member>
      <member refid="class_tree_1ac399ba59be9dc33a04223d10a82ee5ee" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>sim_finish</name></member>
      <member refid="class_tree_1a63c399793a209332ad0f5da7fc830d56" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>sim_parameters</name></member>
      <member refid="class_tree_1a01cc9b30f2b10b9f51b218df25b13b09" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>sim_start</name></member>
      <member refid="class_spatial_tree_1af89289a1dc549102c0137763a7d26065" prot="public" virt="virtual"><scope>SpatialTree</scope><name>simPause</name></member>
      <member refid="class_spatial_tree_1ad578ceeaf0ab3f4a2e39eb907881c11f" prot="public" virt="virtual"><scope>SpatialTree</scope><name>simResume</name></member>
      <member refid="class_spatial_tree_1acc54786661c182b6df23e57a61716e0f" prot="public" virt="virtual"><scope>SpatialTree</scope><name>simulationParametersSqlInsertion</name></member>
      <member refid="class_tree_1a2d2065bbebee8b55270d2691d40cd974" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>sortData</name></member>
      <member refid="class_spatial_tree_1a051cc56f4f1284c419616ca6b582d52f" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>SpatialTree</name></member>
      <member refid="class_tree_1a586678f7084086add3a4136476abd375" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>spec</name></member>
      <member refid="class_tree_1a32e12cc62ce2d9ae893214b1f4cfad1f" prot="public" virt="virtual"><scope>SpatialTree</scope><name>speciateLineage</name></member>
      <member refid="class_tree_1a05c9e44f1a4d7af83e65b6c4565b1b28" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>speciation</name></member>
      <member refid="class_tree_1a61b4349fe78d09ac06eff4b7d6833105" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>speciation_rates</name></member>
      <member refid="class_tree_1ae784a6ed362f6c5263ee797759f715b6" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>sqlCreate</name></member>
      <member refid="class_tree_1a199f47b62b9b10917ff8b89d20c543a7" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>sqlCreateSimulationParameters</name></member>
      <member refid="class_tree_1ade2744c2510a6e8ae791ca7189f483bb" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>sqloutname</name></member>
      <member refid="class_tree_1a8cd3db7add1884ea53b0d98002d39cd3" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>sqlOutput</name></member>
      <member refid="class_tree_1ac077d686ee96b123aa779e8a8a5de3ce" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>start</name></member>
      <member refid="class_tree_1a3f1a90ab7ef917a996790e5ddfcebf85" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>startendactive</name></member>
      <member refid="class_tree_1ae7d33b8c16eeb8cb0c7f96dbfbc61b4e" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>steps</name></member>
      <member refid="class_tree_1afd6bd75c301d2f57c4997fcfc92f192e" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>stopSimulation</name></member>
      <member refid="class_spatial_tree_1a71c99204503ec59815a5338ab934331d" prot="public" virt="virtual"><scope>SpatialTree</scope><name>switchPositions</name></member>
      <member refid="class_spatial_tree_1acf53651097bb38ef7aae42445e73ccb4" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>tau</name></member>
      <member refid="class_tree_1acf483ed0a44629c9aa4690a08017ee35" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>the_seed</name></member>
      <member refid="class_tree_1a9f74137d5c9c5529ec9a06f88dfa6960" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>the_task</name></member>
      <member refid="class_tree_1af7de4d4f04360edcbe2a20db882b1f87" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>this_step</name></member>
      <member refid="class_tree_1abd18bb487c0192588b6bed6f00bcfd07" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>time_taken</name></member>
      <member refid="class_tree_1a5e031ea8d94f48288547116a9e7d7add" prot="protected" virt="non-virtual"><scope>SpatialTree</scope><name>times_file</name></member>
      <member refid="class_tree_1ad376a7c639d857312f5de2ef47482f68" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>Tree</name></member>
      <member refid="class_spatial_tree_1ad14491fc87b0a9b28f5b8b316ee8a89d" prot="public" virt="virtual"><scope>SpatialTree</scope><name>updateStepCoalescenceVariables</name></member>
      <member refid="class_spatial_tree_1a0eb6f50f218289c79770b203d3eeaada" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>verifyReproductionMap</name></member>
      <member refid="class_tree_1a95360a2f62ef0eb436d586552b299e1f" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>writeSimStartToConsole</name></member>
      <member refid="class_tree_1a37de93174eece50a2fc082b683d97047" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>writeStepToConsole</name></member>
      <member refid="class_tree_1ab8785fc9e27868a56335048321c13290" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>writeTimes</name></member>
      <member refid="class_spatial_tree_1ad2b7d5f103ed5d7c3b9219b55c176219" prot="public" virt="non-virtual"><scope>SpatialTree</scope><name>~SpatialTree</name></member>
      <member refid="class_tree_1a2348b20e31754ce28b00f6b6e9536644" prot="public" virt="virtual"><scope>SpatialTree</scope><name>~Tree</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
