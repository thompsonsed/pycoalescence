<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="group___d_e_f_i_n_e_s" kind="group">
    <compoundname>DEFINES</compoundname>
    <title>Preprocessor Definitions</title>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___d_e_f_i_n_e_s_1ga063c2e626b5c0dcf65522d05574349a6" prot="public" static="no">
        <name>sql_ram</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Macro for using the fast-cpp-csv-parser from Ben Strasser (available from <ulink url="https://github.com/ben-strasser/fast-cpp-csv-parser">https://github.com/ben-strasser/fast-cpp-csv-parser</ulink>). This enables much faster csv reading, but can cause problems on systems where this module is not fully tested.</para><para>Macro to compile using RAM for storage of the active SQL database. Without this, the database will be written directly to disc (which is slower, but an option if RAM requirements get too huge). For HPC systems, it is recommended to use this option as write speeds are generally fast and large simulations don&apos;t have a linear increase in the SQL database size (at least in RAM). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/SpatialTree.h" line="60" column="9" bodyfile="necsim/SpatialTree.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
