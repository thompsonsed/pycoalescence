<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="structnecsim_1_1_cell" kind="class" language="C++" prot="public">
    <compoundname>necsim::Cell</compoundname>
    <includes refid="_cell_8h" local="no">Cell.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structnecsim_1_1_cell_1a3aed1558ff162f124b26ce70b3a0629e" prot="public" static="no" mutable="no">
        <type>long</type>
        <definition>long necsim::Cell::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Cell.h" line="21" column="1" bodyfile="necsim/Cell.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnecsim_1_1_cell_1a16fef9a73b543998ab72dd3e4cca2f49" prot="public" static="no" mutable="no">
        <type>long</type>
        <definition>long necsim::Cell::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Cell.h" line="22" column="1" bodyfile="necsim/Cell.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structnecsim_1_1_cell_1a4e0d4d87c7755c6780481443fac31c90" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>necsim::Cell::Cell</definition>
        <argsstring>()</argsstring>
        <name>Cell</name>
        <briefdescription>
<para>Default contructor for <ref refid="structnecsim_1_1_cell" kindref="compound">Cell</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Sets x and y to 0. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Cell.h" line="29" column="1" bodyfile="necsim/Cell.h" bodystart="29" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="structnecsim_1_1_cell_1a449927fb785491a95492bada05c032d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>necsim::Cell::Cell</definition>
        <argsstring>(long x, long y)</argsstring>
        <name>Cell</name>
        <param>
          <type>long</type>
          <declname>x</declname>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Constructor for <ref refid="structnecsim_1_1_cell" kindref="compound">Cell</ref>, taking the x and y position. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the x location </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>the y location </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Cell.h" line="38" column="1" bodyfile="necsim/Cell.h" bodystart="38" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="structnecsim_1_1_cell_1a226deafe5f30bae13956178a301f4c01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structnecsim_1_1_cell" kindref="compound">Cell</ref> &amp;</type>
        <definition>Cell&amp; necsim::Cell::operator=</definition>
        <argsstring>(Cell const &amp;c)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structnecsim_1_1_cell" kindref="compound">Cell</ref> const &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Overloading equality operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="structnecsim_1_1_cell" kindref="compound">Cell</ref> containing the values to overload </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the cell with the new values </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Cell.h" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structnecsim_1_1_cell_1a92d01a9ba4728d6327aee6d86046ff76" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool necsim::Cell::operator==</definition>
        <argsstring>(Cell const &amp;c)</argsstring>
        <name>operator==</name>
        <param>
          <type><ref refid="structnecsim_1_1_cell" kindref="compound">Cell</ref> const &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Equality operator for <ref refid="structnecsim_1_1_cell" kindref="compound">Cell</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="structnecsim_1_1_cell" kindref="compound">Cell</ref> object to compare against </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the x and y locations are identical </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Cell.h" line="55" column="1" bodyfile="necsim/Cell.h" bodystart="55" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="structnecsim_1_1_cell_1af5ae17e9b6e3b762613b5de8c9377c62" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool necsim::Cell::operator!=</definition>
        <argsstring>(Cell const &amp;c)</argsstring>
        <name>operator!=</name>
        <param>
          <type><ref refid="structnecsim_1_1_cell" kindref="compound">Cell</ref> const &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Inequality operator for <ref refid="structnecsim_1_1_cell" kindref="compound">Cell</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="structnecsim_1_1_cell" kindref="compound">Cell</ref> object to compare against </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the x and y locations are not identical </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Cell.h" line="65" column="1" bodyfile="necsim/Cell.h" bodystart="65" bodyend="68"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Simple structure containing the x and y positions of a cell. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="necsim/Cell.h" line="20" column="1" bodyfile="necsim/Cell.h" bodystart="19" bodyend="69"/>
    <listofallmembers>
      <member refid="structnecsim_1_1_cell_1a4e0d4d87c7755c6780481443fac31c90" prot="public" virt="non-virtual"><scope>necsim::Cell</scope><name>Cell</name></member>
      <member refid="structnecsim_1_1_cell_1a449927fb785491a95492bada05c032d1" prot="public" virt="non-virtual"><scope>necsim::Cell</scope><name>Cell</name></member>
      <member refid="structnecsim_1_1_cell_1af5ae17e9b6e3b762613b5de8c9377c62" prot="public" virt="non-virtual"><scope>necsim::Cell</scope><name>operator!=</name></member>
      <member refid="structnecsim_1_1_cell_1a226deafe5f30bae13956178a301f4c01" prot="public" virt="non-virtual"><scope>necsim::Cell</scope><name>operator=</name></member>
      <member refid="structnecsim_1_1_cell_1a92d01a9ba4728d6327aee6d86046ff76" prot="public" virt="non-virtual"><scope>necsim::Cell</scope><name>operator==</name></member>
      <member refid="structnecsim_1_1_cell_1a3aed1558ff162f124b26ce70b3a0629e" prot="public" virt="non-virtual"><scope>necsim::Cell</scope><name>x</name></member>
      <member refid="structnecsim_1_1_cell_1a16fef9a73b543998ab72dd3e4cca2f49" prot="public" virt="non-virtual"><scope>necsim::Cell</scope><name>y</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
