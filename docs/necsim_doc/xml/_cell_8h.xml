<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="_cell_8h" kind="file" language="C++">
    <compoundname>Cell.h</compoundname>
    <includedby refid="_cell_8cpp" local="yes">necsim/Cell.cpp</includedby>
    <includedby refid="_step_8h" local="yes">necsim/Step.h</includedby>
    <includedby refid="_gillespie_calculator_8h" local="yes">necsim/GillespieCalculator.h</includedby>
    <includedby refid="_simulate_dispersal_8h" local="yes">necsim/SimulateDispersal.h</includedby>
    <invincdepgraph>
      <node id="141">
        <label>necsim/SpatialTree.h</label>
        <link refid="_spatial_tree_8h_source"/>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
      </node>
      <node id="143">
        <label>necsim/ProtractedTree.h</label>
        <link refid="_protracted_tree_8h_source"/>
        <childnode refid="142" relation="include">
        </childnode>
      </node>
      <node id="144">
        <label>necsim/Metacommunity.h</label>
        <link refid="_metacommunity_8h_source"/>
      </node>
      <node id="140">
        <label>necsim/Tree.h</label>
        <link refid="_tree_8h_source"/>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
      </node>
      <node id="138">
        <label>necsim/Step.h</label>
        <link refid="_step_8h_source"/>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
      </node>
      <node id="142">
        <label>necsim/ProtractedSpatialTree.h</label>
        <link refid="_protracted_spatial_tree_8h_source"/>
      </node>
      <node id="137">
        <label>necsim/Cell.h</label>
        <link refid="_cell_8h"/>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
      </node>
      <node id="139">
        <label>necsim/DataPoint.h</label>
        <link refid="_data_point_8h_source"/>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
      </node>
      <node id="146">
        <label>necsim/SimulateDispersal.h</label>
        <link refid="_simulate_dispersal_8h_source"/>
      </node>
      <node id="145">
        <label>necsim/DispersalCoordinator.h</label>
        <link refid="_dispersal_coordinator_8h_source"/>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
      </node>
      <node id="147">
        <label>necsim/GillespieCalculator.h</label>
        <link refid="_gillespie_calculator_8h_source"/>
        <childnode refid="141" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structnecsim_1_1_cell" prot="public">necsim::Cell</innerclass>
    <innernamespace refid="namespacenecsim">necsim</innernamespace>
    <briefdescription>
<para>Basic container for location data. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Samuel Thompson</para>
</simplesect>
<simplesect kind="copyright"><para><ulink url="https://opensource.org/licenses/MIT">MIT Licence.</ulink> </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>necsim<sp/>project<sp/>which<sp/>is<sp/>released<sp/>under<sp/>MIT<sp/>license.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>file<sp/>**LICENSE.txt**<sp/>or<sp/>visit<sp/>https://opensource.org/licenses/MIT)<sp/>for<sp/>full<sp/>license<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor">#ifndef<sp/>CELL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CELL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">necsim</highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19" refid="structnecsim_1_1_cell" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnecsim_1_1_cell" kindref="compound">Cell</ref></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>y;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="structnecsim_1_1_cell_1a4e0d4d87c7755c6780481443fac31c90" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnecsim_1_1_cell_1a4e0d4d87c7755c6780481443fac31c90" kindref="member">Cell</ref>()<sp/>:<sp/>x(0),<sp/>y(0)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="structnecsim_1_1_cell_1a449927fb785491a95492bada05c032d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnecsim_1_1_cell_1a449927fb785491a95492bada05c032d1" kindref="member">Cell</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>y)<sp/>:<sp/>x(x),<sp/>y(y)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnecsim_1_1_cell" kindref="compound">Cell</ref><sp/>&amp;<ref refid="structnecsim_1_1_cell_1a226deafe5f30bae13956178a301f4c01" kindref="member">operator=</ref>(<ref refid="structnecsim_1_1_cell" kindref="compound">Cell</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;c)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="structnecsim_1_1_cell_1a92d01a9ba4728d6327aee6d86046ff76" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structnecsim_1_1_cell_1a92d01a9ba4728d6327aee6d86046ff76" kindref="member">operator==</ref>(<ref refid="structnecsim_1_1_cell" kindref="compound">Cell</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;c)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x<sp/>==<sp/>c.x<sp/>&amp;&amp;<sp/>y<sp/>==<sp/>c.y;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="structnecsim_1_1_cell_1af5ae17e9b6e3b762613b5de8c9377c62" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structnecsim_1_1_cell_1af5ae17e9b6e3b762613b5de8c9377c62" kindref="member">operator!=</ref>(<ref refid="structnecsim_1_1_cell" kindref="compound">Cell</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>&amp;c)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(this-&gt;<ref refid="structnecsim_1_1_cell_1a92d01a9ba4728d6327aee6d86046ff76" kindref="member">operator==</ref>(c));</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>distanceBetweenCells(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Cell<sp/>&amp;c1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Cell<sp/>&amp;c2);</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>CELL_H</highlight></codeline>
    </programlisting>
    <location file="necsim/Cell.h"/>
  </compounddef>
</doxygen>
