<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classio_1_1_c_s_v_reader" kind="class" language="C++" prot="public">
    <compoundname>io::CSVReader</compoundname>
    <templateparamlist>
      <param>
        <type>unsigned</type>
        <declname>column_count</declname>
        <defname>column_count</defname>
      </param>
      <param>
        <type>class</type>
        <declname>trim_policy</declname>
        <defname>trim_policy</defname>
        <defval><ref refid="structio_1_1trim__chars" kindref="compound">trim_chars</ref>&lt;&apos; &apos;, &apos;\t&apos;&gt;</defval>
      </param>
      <param>
        <type>class</type>
        <declname>quote_policy</declname>
        <defname>quote_policy</defname>
        <defval><ref refid="structio_1_1no__quote__escape" kindref="compound">no_quote_escape</ref>&lt;&apos;,&apos;&gt;</defval>
      </param>
      <param>
        <type>class</type>
        <declname>overflow_policy</declname>
        <defname>overflow_policy</defname>
        <defval><ref refid="structio_1_1throw__on__overflow" kindref="compound">throw_on_overflow</ref></defval>
      </param>
      <param>
        <type>class</type>
        <declname>comment_policy</declname>
        <defname>comment_policy</defname>
        <defval><ref refid="structio_1_1no__comment" kindref="compound">no_comment</ref></defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classio_1_1_c_s_v_reader_1a26da3892b5c4606617d9daadc0886501" prot="private" static="no" mutable="no">
        <type><ref refid="classio_1_1_line_reader" kindref="compound">LineReader</ref></type>
        <definition>LineReader io::CSVReader&lt; column_count, trim_policy, quote_policy, overflow_policy, comment_policy &gt;::in</definition>
        <argsstring></argsstring>
        <name>in</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="1103" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="1103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classio_1_1_c_s_v_reader_1a48ab5773a4295f7969453838b4115e42" prot="private" static="no" mutable="no">
        <type>char *</type>
        <definition>char* io::CSVReader&lt; column_count, trim_policy, quote_policy, overflow_policy, comment_policy &gt;::row[column_count]</definition>
        <argsstring>[column_count]</argsstring>
        <name>row</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="1105" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="1105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classio_1_1_c_s_v_reader_1a7b97f929cea543f83e61173ea435fdde" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string io::CSVReader&lt; column_count, trim_policy, quote_policy, overflow_policy, comment_policy &gt;::column_names[column_count]</definition>
        <argsstring>[column_count]</argsstring>
        <name>column_names</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="1106" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="1106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classio_1_1_c_s_v_reader_1a1a59e51b74c2d6056821a5e499379884" prot="private" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; io::CSVReader&lt; column_count, trim_policy, quote_policy, overflow_policy, comment_policy &gt;::col_order</definition>
        <argsstring></argsstring>
        <name>col_order</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="1108" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="1108" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classio_1_1_c_s_v_reader_1af0f3df423977925fd22acadbdbc4cdcd" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>ColNames</declname>
            <defname>ColNames</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void io::CSVReader&lt; column_count, trim_policy, quote_policy, overflow_policy, comment_policy &gt;::set_column_names</definition>
        <argsstring>(std::string s, ColNames...cols)</argsstring>
        <name>set_column_names</name>
        <param>
          <type>std::string</type>
          <declname>s</declname>
        </param>
        <param>
          <type>ColNames...</type>
          <declname>cols</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="1111" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="1111" bodyend="1114"/>
      </memberdef>
      <memberdef kind="function" id="classio_1_1_c_s_v_reader_1a48a56e02ae597ae3506e1b24dc0718ef" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void io::CSVReader&lt; column_count, trim_policy, quote_policy, overflow_policy, comment_policy &gt;::set_column_names</definition>
        <argsstring>()</argsstring>
        <name>set_column_names</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="1116" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="1116" bodyend="1116"/>
      </memberdef>
      <memberdef kind="function" id="classio_1_1_c_s_v_reader_1ada16395fbaedad5fcda248b50cd12da0" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void io::CSVReader&lt; column_count, trim_policy, quote_policy, overflow_policy, comment_policy &gt;::parse_helper</definition>
        <argsstring>(std::size_t)</argsstring>
        <name>parse_helper</name>
        <param>
          <type>std::size_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="1198" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="1198" bodyend="1198"/>
      </memberdef>
      <memberdef kind="function" id="classio_1_1_c_s_v_reader_1a6e2cb67ff14a62cee48fb9042c1bfff9" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class...</type>
            <declname>ColType</declname>
            <defname>ColType</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void io::CSVReader&lt; column_count, trim_policy, quote_policy, overflow_policy, comment_policy &gt;::parse_helper</definition>
        <argsstring>(std::size_t r, T &amp;t, ColType &amp;...cols)</argsstring>
        <name>parse_helper</name>
        <param>
          <type>std::size_t</type>
          <declname>r</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>ColType &amp;...</type>
          <declname>cols</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="1201" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="1201" bodyend="1216"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classio_1_1_c_s_v_reader_1abb95a0607cd9a32231daf62f8fc841ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>io::CSVReader&lt; column_count, trim_policy, quote_policy, overflow_policy, comment_policy &gt;::CSVReader</definition>
        <argsstring>()=delete</argsstring>
        <name>CSVReader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="1120" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classio_1_1_c_s_v_reader_1a0507ac5abe201969a15df76795e13c28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>io::CSVReader&lt; column_count, trim_policy, quote_policy, overflow_policy, comment_policy &gt;::CSVReader</definition>
        <argsstring>(const CSVReader &amp;)=delete</argsstring>
        <name>CSVReader</name>
        <param>
          <type>const <ref refid="classio_1_1_c_s_v_reader" kindref="compound">CSVReader</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="1121" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classio_1_1_c_s_v_reader_1a37046e6629cf4254037c14440f14141d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classio_1_1_c_s_v_reader" kindref="compound">CSVReader</ref> &amp;</type>
        <definition>CSVReader&amp; io::CSVReader&lt; column_count, trim_policy, quote_policy, overflow_policy, comment_policy &gt;::operator=</definition>
        <argsstring>(const CSVReader &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classio_1_1_c_s_v_reader" kindref="compound">CSVReader</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="1122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classio_1_1_c_s_v_reader_1a189debf95672e7cd7582e9f73d7203e5" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>io::CSVReader&lt; column_count, trim_policy, quote_policy, overflow_policy, comment_policy &gt;::CSVReader</definition>
        <argsstring>(Args &amp;&amp;...args)</argsstring>
        <name>CSVReader</name>
        <param>
          <type>Args &amp;&amp;...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="1125" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="1125" bodyend="1132"/>
      </memberdef>
      <memberdef kind="function" id="classio_1_1_c_s_v_reader_1a9fad9ae02aa243dba6bc78156c5ce7e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>ColNames</declname>
            <defname>ColNames</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void io::CSVReader&lt; column_count, trim_policy, quote_policy, overflow_policy, comment_policy &gt;::read_header</definition>
        <argsstring>(ignore_column ignore_policy, ColNames...cols)</argsstring>
        <name>read_header</name>
        <param>
          <type>ignore_column</type>
          <declname>ignore_policy</declname>
        </param>
        <param>
          <type>ColNames...</type>
          <declname>cols</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="1135" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="1135" bodyend="1155"/>
      </memberdef>
      <memberdef kind="function" id="classio_1_1_c_s_v_reader_1ab68eedff1bd59a49fa4ddb160dff94e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>ColNames</declname>
            <defname>ColNames</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void io::CSVReader&lt; column_count, trim_policy, quote_policy, overflow_policy, comment_policy &gt;::set_header</definition>
        <argsstring>(ColNames...cols)</argsstring>
        <name>set_header</name>
        <param>
          <type>ColNames...</type>
          <declname>cols</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="1158" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="1158" bodyend="1168"/>
      </memberdef>
      <memberdef kind="function" id="classio_1_1_c_s_v_reader_1a67c1d0d621fc0e4b8021d805dae9c176" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool io::CSVReader&lt; column_count, trim_policy, quote_policy, overflow_policy, comment_policy &gt;::has_column</definition>
        <argsstring>(const std::string &amp;name) const </argsstring>
        <name>has_column</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="1170" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="1170" bodyend="1175"/>
      </memberdef>
      <memberdef kind="function" id="classio_1_1_c_s_v_reader_1a4096c1e43a4fba2b4f5ae21d047b5fbc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void io::CSVReader&lt; column_count, trim_policy, quote_policy, overflow_policy, comment_policy &gt;::set_file_name</definition>
        <argsstring>(const std::string &amp;file_name)</argsstring>
        <name>set_file_name</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>file_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="1177" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="1177" bodyend="1179"/>
      </memberdef>
      <memberdef kind="function" id="classio_1_1_c_s_v_reader_1a5f1dc083a8fa8661f5ecdcf6aebc7b24" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void io::CSVReader&lt; column_count, trim_policy, quote_policy, overflow_policy, comment_policy &gt;::set_file_name</definition>
        <argsstring>(const char *file_name)</argsstring>
        <name>set_file_name</name>
        <param>
          <type>const char *</type>
          <declname>file_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="1181" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="1181" bodyend="1183"/>
      </memberdef>
      <memberdef kind="function" id="classio_1_1_c_s_v_reader_1a7802939e9c108c4acfc7101baf52da95" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* io::CSVReader&lt; column_count, trim_policy, quote_policy, overflow_policy, comment_policy &gt;::get_truncated_file_name</definition>
        <argsstring>() const </argsstring>
        <name>get_truncated_file_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="1185" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="1185" bodyend="1187"/>
      </memberdef>
      <memberdef kind="function" id="classio_1_1_c_s_v_reader_1a1303bd6a2eb0d3d7c743212e52839ac4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void io::CSVReader&lt; column_count, trim_policy, quote_policy, overflow_policy, comment_policy &gt;::set_file_line</definition>
        <argsstring>(unsigned file_line)</argsstring>
        <name>set_file_line</name>
        <param>
          <type>unsigned</type>
          <declname>file_line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="1189" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="1189" bodyend="1191"/>
      </memberdef>
      <memberdef kind="function" id="classio_1_1_c_s_v_reader_1aeea0f1ab9791a7dd3c699398c85edfaa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned io::CSVReader&lt; column_count, trim_policy, quote_policy, overflow_policy, comment_policy &gt;::get_file_line</definition>
        <argsstring>() const </argsstring>
        <name>get_file_line</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="1193" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="1193" bodyend="1195"/>
      </memberdef>
      <memberdef kind="function" id="classio_1_1_c_s_v_reader_1a61ecdcaa62c024bf97c4e5d133478d7e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class...</type>
            <declname>ColType</declname>
            <defname>ColType</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool io::CSVReader&lt; column_count, trim_policy, quote_policy, overflow_policy, comment_policy &gt;::read_row</definition>
        <argsstring>(ColType &amp;...cols)</argsstring>
        <name>read_row</name>
        <param>
          <type>ColType &amp;...</type>
          <declname>cols</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/fast-cpp-csv-parser2/csv.h" line="1221" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="1221" bodyend="1250"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="necsim/fast-cpp-csv-parser2/csv.h" line="1101" column="1" bodyfile="necsim/fast-cpp-csv-parser2/csv.h" bodystart="1101" bodyend="1251"/>
    <listofallmembers>
      <member refid="classio_1_1_c_s_v_reader_1a1a59e51b74c2d6056821a5e499379884" prot="private" virt="non-virtual"><scope>io::CSVReader</scope><name>col_order</name></member>
      <member refid="classio_1_1_c_s_v_reader_1a7b97f929cea543f83e61173ea435fdde" prot="private" virt="non-virtual"><scope>io::CSVReader</scope><name>column_names</name></member>
      <member refid="classio_1_1_c_s_v_reader_1abb95a0607cd9a32231daf62f8fc841ab" prot="public" virt="non-virtual"><scope>io::CSVReader</scope><name>CSVReader</name></member>
      <member refid="classio_1_1_c_s_v_reader_1a0507ac5abe201969a15df76795e13c28" prot="public" virt="non-virtual"><scope>io::CSVReader</scope><name>CSVReader</name></member>
      <member refid="classio_1_1_c_s_v_reader_1a189debf95672e7cd7582e9f73d7203e5" prot="public" virt="non-virtual"><scope>io::CSVReader</scope><name>CSVReader</name></member>
      <member refid="classio_1_1_c_s_v_reader_1aeea0f1ab9791a7dd3c699398c85edfaa" prot="public" virt="non-virtual"><scope>io::CSVReader</scope><name>get_file_line</name></member>
      <member refid="classio_1_1_c_s_v_reader_1a7802939e9c108c4acfc7101baf52da95" prot="public" virt="non-virtual"><scope>io::CSVReader</scope><name>get_truncated_file_name</name></member>
      <member refid="classio_1_1_c_s_v_reader_1a67c1d0d621fc0e4b8021d805dae9c176" prot="public" virt="non-virtual"><scope>io::CSVReader</scope><name>has_column</name></member>
      <member refid="classio_1_1_c_s_v_reader_1a26da3892b5c4606617d9daadc0886501" prot="private" virt="non-virtual"><scope>io::CSVReader</scope><name>in</name></member>
      <member refid="classio_1_1_c_s_v_reader_1a37046e6629cf4254037c14440f14141d" prot="public" virt="non-virtual"><scope>io::CSVReader</scope><name>operator=</name></member>
      <member refid="classio_1_1_c_s_v_reader_1ada16395fbaedad5fcda248b50cd12da0" prot="private" virt="non-virtual"><scope>io::CSVReader</scope><name>parse_helper</name></member>
      <member refid="classio_1_1_c_s_v_reader_1a6e2cb67ff14a62cee48fb9042c1bfff9" prot="private" virt="non-virtual"><scope>io::CSVReader</scope><name>parse_helper</name></member>
      <member refid="classio_1_1_c_s_v_reader_1a9fad9ae02aa243dba6bc78156c5ce7e5" prot="public" virt="non-virtual"><scope>io::CSVReader</scope><name>read_header</name></member>
      <member refid="classio_1_1_c_s_v_reader_1a61ecdcaa62c024bf97c4e5d133478d7e" prot="public" virt="non-virtual"><scope>io::CSVReader</scope><name>read_row</name></member>
      <member refid="classio_1_1_c_s_v_reader_1a48ab5773a4295f7969453838b4115e42" prot="private" virt="non-virtual"><scope>io::CSVReader</scope><name>row</name></member>
      <member refid="classio_1_1_c_s_v_reader_1af0f3df423977925fd22acadbdbc4cdcd" prot="private" virt="non-virtual"><scope>io::CSVReader</scope><name>set_column_names</name></member>
      <member refid="classio_1_1_c_s_v_reader_1a48a56e02ae597ae3506e1b24dc0718ef" prot="private" virt="non-virtual"><scope>io::CSVReader</scope><name>set_column_names</name></member>
      <member refid="classio_1_1_c_s_v_reader_1a1303bd6a2eb0d3d7c743212e52839ac4" prot="public" virt="non-virtual"><scope>io::CSVReader</scope><name>set_file_line</name></member>
      <member refid="classio_1_1_c_s_v_reader_1a4096c1e43a4fba2b4f5ae21d047b5fbc" prot="public" virt="non-virtual"><scope>io::CSVReader</scope><name>set_file_name</name></member>
      <member refid="classio_1_1_c_s_v_reader_1a5f1dc083a8fa8661f5ecdcf6aebc7b24" prot="public" virt="non-virtual"><scope>io::CSVReader</scope><name>set_file_name</name></member>
      <member refid="classio_1_1_c_s_v_reader_1ab68eedff1bd59a49fa4ddb160dff94e0" prot="public" virt="non-virtual"><scope>io::CSVReader</scope><name>set_header</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
