<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="struct_community_parameters" kind="struct" language="C++" prot="public">
    <compoundname>CommunityParameters</compoundname>
    <includes refid="_community_8h" local="no">Community.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_community_parameters_1a557474bb5acbee2483cf8176aaf2c2d6" prot="public" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long CommunityParameters::reference</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Community.h" line="84" column="1" bodyfile="necsim/Community.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_community_parameters_1afafe9532c12b83693d04cf63d56f0133" prot="public" static="no" mutable="no">
        <type>long double</type>
        <definition>long double CommunityParameters::speciation_rate</definition>
        <argsstring></argsstring>
        <name>speciation_rate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Community.h" line="85" column="1" bodyfile="necsim/Community.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_community_parameters_1adb03228a8993f9e2e52f3dda85a96ec8" prot="public" static="no" mutable="no">
        <type>long double</type>
        <definition>long double CommunityParameters::time</definition>
        <argsstring></argsstring>
        <name>time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Community.h" line="86" column="1" bodyfile="necsim/Community.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_community_parameters_1a358d21a0a083749d05f0d01f08f2ca14" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CommunityParameters::fragment</definition>
        <argsstring></argsstring>
        <name>fragment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Community.h" line="87" column="1" bodyfile="necsim/Community.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_community_parameters_1a10584c438483add52d9d8790256f2cc0" prot="public" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long CommunityParameters::metacommunity_reference</definition>
        <argsstring></argsstring>
        <name>metacommunity_reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Community.h" line="88" column="1" bodyfile="necsim/Community.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_community_parameters_1aada886c5f72515e6eca62efdcccf47b7" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CommunityParameters::updated</definition>
        <argsstring></argsstring>
        <name>updated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Community.h" line="89" column="1" bodyfile="necsim/Community.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_community_parameters_1a03e06c14d5b1aa3e04e075d614117868" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CommunityParameters::CommunityParameters</definition>
        <argsstring>()</argsstring>
        <name>CommunityParameters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Community.h" line="91" column="1" bodyfile="necsim/Community.h" bodystart="91" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="struct_community_parameters_1a35ba4287722675bea972392eaecace5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CommunityParameters::CommunityParameters</definition>
        <argsstring>(unsigned long reference_in, long double speciation_rate_in, long double time_in, bool fragment_in, unsigned long metacommunity_reference_in)</argsstring>
        <name>CommunityParameters</name>
        <param>
          <type>unsigned long</type>
          <declname>reference_in</declname>
        </param>
        <param>
          <type>long double</type>
          <declname>speciation_rate_in</declname>
        </param>
        <param>
          <type>long double</type>
          <declname>time_in</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fragment_in</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>metacommunity_reference_in</declname>
        </param>
        <briefdescription>
<para>Constructor for <ref refid="struct_community_parameters" kindref="compound">CommunityParameters</ref>, for storing a pairs of previous calculations, requiring a speciation rate and a time. Overloaded version with setup routines. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reference_in</parametername>
</parameternamelist>
<parameterdescription>
<para>the reference to set for this <ref refid="struct_community_parameters" kindref="compound">CommunityParameters</ref> set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>speciation_rate_in</parametername>
</parameternamelist>
<parameterdescription>
<para>the speciation rate of the previous calculation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time_in</parametername>
</parameternamelist>
<parameterdescription>
<para>the time of the previous calculation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment_in</parametername>
</parameternamelist>
<parameterdescription>
<para>bool of whether fragments were used in the previous calculation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>metacommunity_reference_in</parametername>
</parameternamelist>
<parameterdescription>
<para>the metacommunity reference, or 0 for no metacommunity </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Community.h" line="111" column="1" bodyfile="necsim/Community.cpp" bodystart="47" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="struct_community_parameters_1a76bcfc1686e2719af641a6c1854665e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CommunityParameters::setup</definition>
        <argsstring>(unsigned long reference_in, long double speciation_rate_in, long double time_in, bool fragment_in, unsigned long metacommunity_reference_in)</argsstring>
        <name>setup</name>
        <param>
          <type>unsigned long</type>
          <declname>reference_in</declname>
        </param>
        <param>
          <type>long double</type>
          <declname>speciation_rate_in</declname>
        </param>
        <param>
          <type>long double</type>
          <declname>time_in</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fragment_in</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>metacommunity_reference_in</declname>
        </param>
        <briefdescription>
<para>Sets up the <ref refid="struct_community_parameters" kindref="compound">CommunityParameters</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reference_in</parametername>
</parameternamelist>
<parameterdescription>
<para>the reference to set for this <ref refid="struct_community_parameters" kindref="compound">CommunityParameters</ref> set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>speciation_rate_in</parametername>
</parameternamelist>
<parameterdescription>
<para>the speciation rate of the previous calculation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time_in</parametername>
</parameternamelist>
<parameterdescription>
<para>the time of the previous calculation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment_in</parametername>
</parameternamelist>
<parameterdescription>
<para>bool of whether fragments were used in the previous calculation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>metacommunity_reference_in</parametername>
</parameternamelist>
<parameterdescription>
<para>the metacommunity reference, or 0 for no metacommunity </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Community.h" line="122" column="1" bodyfile="necsim/Community.cpp" bodystart="54" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="struct_community_parameters_1ab7c20d61446281ce145a65342fdf9ebc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CommunityParameters::compare</definition>
        <argsstring>(long double speciation_rate_in, long double time_in, bool fragment_in, unsigned long metacommunity_reference_in)</argsstring>
        <name>compare</name>
        <param>
          <type>long double</type>
          <declname>speciation_rate_in</declname>
        </param>
        <param>
          <type>long double</type>
          <declname>time_in</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fragment_in</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>metacommunity_reference_in</declname>
        </param>
        <briefdescription>
<para>Compare these set of parameters with the input set. If they match, return true, otherwise return false. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>speciation_rate_in</parametername>
</parameternamelist>
<parameterdescription>
<para>speciation rate to compare with stored community parameter </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time_in</parametername>
</parameternamelist>
<parameterdescription>
<para>time to compare with stored community parameter </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fragment_in</parametername>
</parameternamelist>
<parameterdescription>
<para>if fragments are being used on this database </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>metacommunity_reference_in</parametername>
</parameternamelist>
<parameterdescription>
<para>metacommunity reference to compare with stored community parameter </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Community.h" line="133" column="1" bodyfile="necsim/Community.cpp" bodystart="65" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="struct_community_parameters_1a74f0d737ac1d0249d86fede848650ae2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CommunityParameters::compare</definition>
        <argsstring>(long double speciation_rate_in, long double time_in, unsigned long metacommunity_reference_in)</argsstring>
        <name>compare</name>
        <param>
          <type>long double</type>
          <declname>speciation_rate_in</declname>
        </param>
        <param>
          <type>long double</type>
          <declname>time_in</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>metacommunity_reference_in</declname>
        </param>
        <briefdescription>
<para>Compare these set of parameters with the input set. If they match, return true, otherwise return false Overloaded version ignoring the fragments parameter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>speciation_rate_in</parametername>
</parameternamelist>
<parameterdescription>
<para>speciation rate to compare with stored community parameter </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time_in</parametername>
</parameternamelist>
<parameterdescription>
<para>time to compare with stored community parameter </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>metacommunity_reference_in</parametername>
</parameternamelist>
<parameterdescription>
<para>metacommunity reference to compare with stored community parameter </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Community.h" line="144" column="1" bodyfile="necsim/Community.cpp" bodystart="83" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="struct_community_parameters_1a40a051953654d97d5d5674875d5692cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CommunityParameters::compare</definition>
        <argsstring>(unsigned long reference_in)</argsstring>
        <name>compare</name>
        <param>
          <type>unsigned long</type>
          <declname>reference_in</declname>
        </param>
        <briefdescription>
<para>Checks if the supplied reference is the same in the community parameter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reference_in</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="necsim/Community.h" line="151" column="1" bodyfile="necsim/Community.cpp" bodystart="90" bodyend="93"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A struct for containing pairs of previous calculations to make sure that aren&apos;t repeated. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="necsim/Community.h" line="83" column="1" bodyfile="necsim/Community.h" bodystart="82" bodyend="152"/>
    <listofallmembers>
      <member refid="struct_community_parameters_1a03e06c14d5b1aa3e04e075d614117868" prot="public" virt="non-virtual"><scope>CommunityParameters</scope><name>CommunityParameters</name></member>
      <member refid="struct_community_parameters_1a35ba4287722675bea972392eaecace5d" prot="public" virt="non-virtual"><scope>CommunityParameters</scope><name>CommunityParameters</name></member>
      <member refid="struct_community_parameters_1ab7c20d61446281ce145a65342fdf9ebc" prot="public" virt="non-virtual"><scope>CommunityParameters</scope><name>compare</name></member>
      <member refid="struct_community_parameters_1a74f0d737ac1d0249d86fede848650ae2" prot="public" virt="non-virtual"><scope>CommunityParameters</scope><name>compare</name></member>
      <member refid="struct_community_parameters_1a40a051953654d97d5d5674875d5692cc" prot="public" virt="non-virtual"><scope>CommunityParameters</scope><name>compare</name></member>
      <member refid="struct_community_parameters_1a358d21a0a083749d05f0d01f08f2ca14" prot="public" virt="non-virtual"><scope>CommunityParameters</scope><name>fragment</name></member>
      <member refid="struct_community_parameters_1a10584c438483add52d9d8790256f2cc0" prot="public" virt="non-virtual"><scope>CommunityParameters</scope><name>metacommunity_reference</name></member>
      <member refid="struct_community_parameters_1a557474bb5acbee2483cf8176aaf2c2d6" prot="public" virt="non-virtual"><scope>CommunityParameters</scope><name>reference</name></member>
      <member refid="struct_community_parameters_1a76bcfc1686e2719af641a6c1854665e7" prot="public" virt="non-virtual"><scope>CommunityParameters</scope><name>setup</name></member>
      <member refid="struct_community_parameters_1afafe9532c12b83693d04cf63d56f0133" prot="public" virt="non-virtual"><scope>CommunityParameters</scope><name>speciation_rate</name></member>
      <member refid="struct_community_parameters_1adb03228a8993f9e2e52f3dda85a96ec8" prot="public" virt="non-virtual"><scope>CommunityParameters</scope><name>time</name></member>
      <member refid="struct_community_parameters_1aada886c5f72515e6eca62efdcccf47b7" prot="public" virt="non-virtual"><scope>CommunityParameters</scope><name>updated</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
