<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_config_file_parser_8cpp" kind="file" language="C++">
    <compoundname>ConfigFileParser.cpp</compoundname>
    <includes refid="_config_file_parser_8h" local="yes">ConfigFileParser.h</includes>
    <incdepgraph>
      <node id="1296">
        <label>CustomExceptions.h</label>
        <link refid="_custom_exceptions_8h"/>
        <childnode refid="1289" relation="include">
        </childnode>
      </node>
      <node id="1283">
        <label>ConfigFileParser.cpp</label>
        <link refid="ConfigFileParser.cpp"/>
        <childnode refid="1284" relation="include">
        </childnode>
      </node>
      <node id="1293">
        <label>cmath</label>
      </node>
      <node id="1289">
        <label>stdexcept</label>
      </node>
      <node id="1285">
        <label>string</label>
      </node>
      <node id="1297">
        <label>Logging.h</label>
        <link refid="_logging_8h"/>
        <childnode refid="1285" relation="include">
        </childnode>
        <childnode refid="1286" relation="include">
        </childnode>
        <childnode refid="1298" relation="include">
        </childnode>
        <childnode refid="1289" relation="include">
        </childnode>
      </node>
      <node id="1288">
        <label>fstream</label>
      </node>
      <node id="1284">
        <label>ConfigFileParser.h</label>
        <link refid="_config_file_parser_8h_source"/>
        <childnode refid="1285" relation="include">
        </childnode>
        <childnode refid="1286" relation="include">
        </childnode>
        <childnode refid="1287" relation="include">
        </childnode>
        <childnode refid="1288" relation="include">
        </childnode>
        <childnode refid="1289" relation="include">
        </childnode>
        <childnode refid="1290" relation="include">
        </childnode>
        <childnode refid="1291" relation="include">
        </childnode>
        <childnode refid="1292" relation="include">
        </childnode>
        <childnode refid="1293" relation="include">
        </childnode>
        <childnode refid="1294" relation="include">
        </childnode>
        <childnode refid="1295" relation="include">
        </childnode>
        <childnode refid="1296" relation="include">
        </childnode>
        <childnode refid="1297" relation="include">
        </childnode>
      </node>
      <node id="1292">
        <label>unistd.h</label>
      </node>
      <node id="1290">
        <label>vector</label>
      </node>
      <node id="1287">
        <label>sstream</label>
      </node>
      <node id="1294">
        <label>cctype</label>
      </node>
      <node id="1286">
        <label>iostream</label>
      </node>
      <node id="1295">
        <label>algorithm</label>
      </node>
      <node id="1298">
        <label>stdio.h</label>
      </node>
      <node id="1291">
        <label>cstring</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_config_file_parser_8cpp_1ab14ba2a8e5a50a5a24b48c45294ef483" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void importArgs</definition>
        <argsstring>(const unsigned int &amp;argc, char *argv[], vector&lt; string &gt; &amp;comargs)</argsstring>
        <name>importArgs</name>
        <param>
          <type>const unsigned int &amp;</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <param>
          <type>vector&lt; string &gt; &amp;</type>
          <declname>comargs</declname>
        </param>
        <briefdescription>
<para>Import the command line arguments in to the vector for future processing. Arguments will be placed in the vector comargs. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of arguments. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argv</parametername>
</parameternamelist>
<parameterdescription>
<para>a point to the array of arguments in raw character form. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>comargs</parametername>
</parameternamelist>
<parameterdescription>
<para>a vector of the command-line arguments to be filled. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ConfigFileParser.cpp" line="16" column="1" bodyfile="ConfigFileParser.cpp" bodystart="16" bodyend="27"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>NECSim<sp/>project<sp/>which<sp/>is<sp/>released<sp/>under<sp/>BSD-3<sp/>license.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//See<sp/>file<sp/>**LICENSE.txt**<sp/>or<sp/>visit<sp/>https://opensource.org/licenses/BSD-3-Clause)<sp/>for<sp/>full<sp/>license<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight></codeline>
<codeline lineno="15"><highlight class="comment"></highlight><highlight class="preprocessor">#include<sp/>&quot;ConfigFileParser.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>importArgs(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>argv<sp/>[],<sp/>vector&lt;string&gt;&amp;<sp/>comargs)</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>argc;<sp/>i++)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comargs.push_back(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">(argv[i]));</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>size<sp/>is<sp/>correct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(comargs.size()<sp/>!=<sp/>argc)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ERROR_MAIN_010:<sp/>Incorrect<sp/>command<sp/>line<sp/>parsing.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="ConfigFileParser.cpp"/>
  </compounddef>
</doxygen>
