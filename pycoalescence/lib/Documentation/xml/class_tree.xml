<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_tree" kind="class" language="C++" prot="public">
    <compoundname>CoalescenceTree</compoundname>
    <derivedcompoundref refid="class_protracted_tree" prot="public" virt="non-virtual">ProtractedTree</derivedcompoundref>
    <includes refid="_tree_8h" local="no">CoalescenceTree.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_tree_1a59b96b790945010fda9b907df51038be" prot="protected" static="no" mutable="no">
        <type><ref refid="class_row" kindref="compound">Row</ref>&lt; <ref refid="class_treenode" kindref="compound">Treenode</ref> &gt;</type>
        <definition>Row&lt;Treenode&gt; CoalescenceTree::data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="115" column="1" bodyfile="CoalescenceTree.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1a50344999e6b64d15eef935b1f6023471" prot="protected" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long CoalescenceTree::enddata</definition>
        <argsstring></argsstring>
        <name>enddata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="119" column="1" bodyfile="CoalescenceTree.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1a63c399793a209332ad0f5da7fc830d56" prot="protected" static="no" mutable="no">
        <type><ref refid="struct_sim_parameters" kindref="compound">SimParameters</ref></type>
        <definition>SimParameters CoalescenceTree::sim_parameters</definition>
        <argsstring></argsstring>
        <name>sim_parameters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="121" column="1" bodyfile="CoalescenceTree.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1aa7df162306777b040a9a2aac543e6801" prot="protected" static="no" mutable="no">
        <type><ref refid="class_n_rrand" kindref="compound">NRrand</ref></type>
        <definition>NRrand CoalescenceTree::NR</definition>
        <argsstring></argsstring>
        <name>NR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="123" column="1" bodyfile="CoalescenceTree.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1afbf25a881b31ea6558bb9dc48c431a73" prot="protected" static="no" mutable="no">
        <type><ref refid="class_dispersal_coordinator" kindref="compound">DispersalCoordinator</ref></type>
        <definition>DispersalCoordinator CoalescenceTree::dispersal_coordinator</definition>
        <argsstring></argsstring>
        <name>dispersal_coordinator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="125" column="1" bodyfile="CoalescenceTree.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1a7a85301c230febe654c002695828c9a9" prot="protected" static="no" mutable="no">
        <type><ref refid="class_reproduction_map" kindref="compound">ReproductionMap</ref></type>
        <definition>ReproductionMap CoalescenceTree::rep_map</definition>
        <argsstring></argsstring>
        <name>rep_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="127" column="1" bodyfile="CoalescenceTree.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1a702ccb094de94922b77548d50f025c8f" prot="protected" static="no" mutable="no">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt;double&gt; CoalescenceTree::speciation_rates</definition>
        <argsstring></argsstring>
        <name>speciation_rates</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="129" column="1" bodyfile="CoalescenceTree.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1a78935befd45946b8e69023bffca59c1d" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CoalescenceTree::seeded</definition>
        <argsstring></argsstring>
        <name>seeded</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="130" column="1" bodyfile="CoalescenceTree.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1acf483ed0a44629c9aa4690a08017ee35" prot="protected" static="no" mutable="no">
        <type>long long</type>
        <definition>long long CoalescenceTree::the_seed</definition>
        <argsstring></argsstring>
        <name>the_seed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="132" column="1" bodyfile="CoalescenceTree.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1aada408975aa28b8992e98709d6c376fb" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CoalescenceTree::log_all</definition>
        <argsstring></argsstring>
        <name>log_all</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="138" column="1" bodyfile="CoalescenceTree.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1a9f74137d5c9c5529ec9a06f88dfa6960" prot="protected" static="no" mutable="no">
        <type>long long</type>
        <definition>long long CoalescenceTree::the_task</definition>
        <argsstring></argsstring>
        <name>the_task</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="145" column="1" bodyfile="CoalescenceTree.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1a4713ae4a4068fa911bc346b594bbade6" prot="protected" static="no" mutable="no">
        <type>string</type>
        <definition>string CoalescenceTree::autocorrel_file</definition>
        <argsstring></argsstring>
        <name>autocorrel_file</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="149" column="1" bodyfile="CoalescenceTree.h" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1acbf9101bb6c28d5a0f174801c27c23b6" prot="protected" static="no" mutable="no">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt;double&gt; CoalescenceTree::autocorrel_times</definition>
        <argsstring></argsstring>
        <name>autocorrel_times</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="150" column="1" bodyfile="CoalescenceTree.h" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1aa4e3e77ce6b3fdbab72270144e63345a" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CoalescenceTree::bAutocorrel</definition>
        <argsstring></argsstring>
        <name>bAutocorrel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="152" column="1" bodyfile="CoalescenceTree.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1a87e08c5f970f699a1d4c2a4abb00eb4e" prot="protected" static="no" mutable="no">
        <type>string</type>
        <definition>string CoalescenceTree::finemapinput</definition>
        <argsstring></argsstring>
        <name>finemapinput</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="156" column="1" bodyfile="CoalescenceTree.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1af5e636fe4eb845d4c7b1a8a15e837c82" prot="protected" static="no" mutable="no">
        <type>string</type>
        <definition>string CoalescenceTree::coarsemapinput</definition>
        <argsstring></argsstring>
        <name>coarsemapinput</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="156" column="1" bodyfile="CoalescenceTree.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1a70b8a86ec0b71a04b4a26061bcaeb4a3" prot="protected" static="no" mutable="no">
        <type>string</type>
        <definition>string CoalescenceTree::outdirectory</definition>
        <argsstring></argsstring>
        <name>outdirectory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="156" column="1" bodyfile="CoalescenceTree.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1a504a4d7ae23146fd6236baa59da51a6e" prot="protected" static="no" mutable="no">
        <type>string</type>
        <definition>string CoalescenceTree::pause_sim_directory</definition>
        <argsstring></argsstring>
        <name>pause_sim_directory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="158" column="1" bodyfile="CoalescenceTree.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1a3ef73c700c06c9ebab564cc9ec9fc4ab" prot="protected" static="no" mutable="no">
        <type>string</type>
        <definition>string CoalescenceTree::pristinefinemapinput</definition>
        <argsstring></argsstring>
        <name>pristinefinemapinput</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="159" column="1" bodyfile="CoalescenceTree.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1aab9168e35202fe02d4ef82087530a3bf" prot="protected" static="no" mutable="no">
        <type>string</type>
        <definition>string CoalescenceTree::pristinecoarsemapinput</definition>
        <argsstring></argsstring>
        <name>pristinecoarsemapinput</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="159" column="1" bodyfile="CoalescenceTree.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1a893f37cf3b242be781aae29843a584ee" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double CoalescenceTree::dPristine</definition>
        <argsstring></argsstring>
        <name>dPristine</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="161" column="1" bodyfile="CoalescenceTree.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1ae9e9a7c06a049531e8a4dd1319cff1b8" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double CoalescenceTree::dForestTransform</definition>
        <argsstring></argsstring>
        <name>dForestTransform</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="161" column="1" bodyfile="CoalescenceTree.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1af58ab9dcfed2cbfa93cf47c68c90e0c4" prot="protected" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long CoalescenceTree::gridxsize</definition>
        <argsstring></argsstring>
        <name>gridxsize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="163" column="1" bodyfile="CoalescenceTree.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1a458b504f61e3c642ef5223048799b7ba" prot="protected" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long CoalescenceTree::gridysize</definition>
        <argsstring></argsstring>
        <name>gridysize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="163" column="1" bodyfile="CoalescenceTree.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1a4790f4c0210c285b7728599ea2faa98f" prot="protected" static="no" mutable="no">
        <type>long</type>
        <definition>long CoalescenceTree::finemapxsize</definition>
        <argsstring></argsstring>
        <name>finemapxsize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="166" column="1" bodyfile="CoalescenceTree.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1a2424883553f76a36447fee4de06f779d" prot="protected" static="no" mutable="no">
        <type>long</type>
        <definition>long CoalescenceTree::finemapysize</definition>
        <argsstring></argsstring>
        <name>finemapysize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="166" column="1" bodyfile="CoalescenceTree.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1a266216111e7116fbaaa7fd10134a50c3" prot="protected" static="no" mutable="no">
        <type>long</type>
        <definition>long CoalescenceTree::finemapxoffset</definition>
        <argsstring></argsstring>
        <name>finemapxoffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="166" column="1" bodyfile="CoalescenceTree.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1a53790cb843a74543acc4bfd536f815e8" prot="protected" static="no" mutable="no">
        <type>long</type>
        <definition>long CoalescenceTree::finemapyoffset</definition>
        <argsstring></argsstring>
        <name>finemapyoffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="166" column="1" bodyfile="CoalescenceTree.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1a857af46452e877120b61ce7d1a111b9b" prot="protected" static="no" mutable="no">
        <type>long</type>
        <definition>long CoalescenceTree::coarsemapxsize</definition>
        <argsstring></argsstring>
        <name>coarsemapxsize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="167" column="1" bodyfile="CoalescenceTree.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1a5ac36f0d1a8b951dad10ca3de8334543" prot="protected" static="no" mutable="no">
        <type>long</type>
        <definition>long CoalescenceTree::coarsemapysize</definition>
        <argsstring></argsstring>
        <name>coarsemapysize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="167" column="1" bodyfile="CoalescenceTree.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1a67cf6b6ce0b683ce4b6014bf1df575fe" prot="protected" static="no" mutable="no">
        <type>long</type>
        <definition>long CoalescenceTree::coarsemapxoffset</definition>
        <argsstring></argsstring>
        <name>coarsemapxoffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="167" column="1" bodyfile="CoalescenceTree.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1a29b4b790dcb14d5306df0448a53ac2ee" prot="protected" static="no" mutable="no">
        <type>long</type>
        <definition>long CoalescenceTree::coarsemapyoffset</definition>
        <argsstring></argsstring>
        <name>coarsemapyoffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="167" column="1" bodyfile="CoalescenceTree.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1a24fb21a6a22d727acae9dd4cd946adb3" prot="protected" static="no" mutable="no">
        <type>long</type>
        <definition>long CoalescenceTree::coarsemapscale</definition>
        <argsstring></argsstring>
        <name>coarsemapscale</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="167" column="1" bodyfile="CoalescenceTree.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1a96f63bbb23ebc547d2b91c30e4ce1f57" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CoalescenceTree::varimport</definition>
        <argsstring></argsstring>
        <name>varimport</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="169" column="1" bodyfile="CoalescenceTree.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1ac077d686ee96b123aa779e8a8a5de3ce" prot="protected" static="no" mutable="no">
        <type>time_t</type>
        <definition>time_t CoalescenceTree::start</definition>
        <argsstring></argsstring>
        <name>start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="172" column="1" bodyfile="CoalescenceTree.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1a01cc9b30f2b10b9f51b218df25b13b09" prot="protected" static="no" mutable="no">
        <type>time_t</type>
        <definition>time_t CoalescenceTree::sim_start</definition>
        <argsstring></argsstring>
        <name>sim_start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="172" column="1" bodyfile="CoalescenceTree.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1a26100477c7e58a9e0a90cdee1379ed69" prot="protected" static="no" mutable="no">
        <type>time_t</type>
        <definition>time_t CoalescenceTree::sim_end</definition>
        <argsstring></argsstring>
        <name>sim_end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="172" column="1" bodyfile="CoalescenceTree.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1a5510d0fb5deb23fd39a2619d104f85fa" prot="protected" static="no" mutable="no">
        <type>time_t</type>
        <definition>time_t CoalescenceTree::now</definition>
        <argsstring></argsstring>
        <name>now</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="172" column="1" bodyfile="CoalescenceTree.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1ac399ba59be9dc33a04223d10a82ee5ee" prot="protected" static="no" mutable="no">
        <type>time_t</type>
        <definition>time_t CoalescenceTree::sim_finish</definition>
        <argsstring></argsstring>
        <name>sim_finish</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="172" column="1" bodyfile="CoalescenceTree.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1a5ee1fa5adf72bb599badc041fbee7d09" prot="protected" static="no" mutable="no">
        <type>time_t</type>
        <definition>time_t CoalescenceTree::out_finish</definition>
        <argsstring></argsstring>
        <name>out_finish</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="172" column="1" bodyfile="CoalescenceTree.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1abd18bb487c0192588b6bed6f00bcfd07" prot="protected" static="no" mutable="no">
        <type>time_t</type>
        <definition>time_t CoalescenceTree::time_taken</definition>
        <argsstring></argsstring>
        <name>time_taken</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="173" column="1" bodyfile="CoalescenceTree.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1af412a7888f61b9f9931e33485562aa03" prot="protected" static="no" mutable="no">
        <type><ref refid="class_map" kindref="compound">Map</ref></type>
        <definition>Map CoalescenceTree::forestmap</definition>
        <argsstring></argsstring>
        <name>forestmap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="176" column="1" bodyfile="CoalescenceTree.h" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1a1962e04a61c54545862b47943a7cf576" prot="protected" static="no" mutable="no">
        <type><ref refid="class_matrix" kindref="compound">Matrix</ref>&lt; <ref refid="class_species_list" kindref="compound">SpeciesList</ref> &gt;</type>
        <definition>Matrix&lt;SpeciesList&gt; CoalescenceTree::grid</definition>
        <argsstring></argsstring>
        <name>grid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="178" column="1" bodyfile="CoalescenceTree.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1a2c42ce89a7d6556be51254b5b09c27e3" prot="protected" static="no" mutable="no">
        <type><ref refid="class_row" kindref="compound">Row</ref>&lt; <ref refid="class_datapoint" kindref="compound">Datapoint</ref> &gt;</type>
        <definition>Row&lt;Datapoint&gt; CoalescenceTree::active</definition>
        <argsstring></argsstring>
        <name>active</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="180" column="1" bodyfile="CoalescenceTree.h" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1ab478831f09c135bc9a4bc991c9fd5076" prot="protected" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long CoalescenceTree::endactive</definition>
        <argsstring></argsstring>
        <name>endactive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="182" column="1" bodyfile="CoalescenceTree.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1a3f1a90ab7ef917a996790e5ddfcebf85" prot="protected" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long CoalescenceTree::startendactive</definition>
        <argsstring></argsstring>
        <name>startendactive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="184" column="1" bodyfile="CoalescenceTree.h" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1a0244ee15452c38393246147d93836b4d" prot="protected" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long CoalescenceTree::maxsimsize</definition>
        <argsstring></argsstring>
        <name>maxsimsize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="186" column="1" bodyfile="CoalescenceTree.h" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1ae7d33b8c16eeb8cb0c7f96dbfbc61b4e" prot="protected" static="no" mutable="no">
        <type>long</type>
        <definition>long CoalescenceTree::steps</definition>
        <argsstring></argsstring>
        <name>steps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="189" column="1" bodyfile="CoalescenceTree.h" bodystart="189" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1a1868cf626a0b12f21a038989d4eca210" prot="protected" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long CoalescenceTree::maxtime</definition>
        <argsstring></argsstring>
        <name>maxtime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="191" column="1" bodyfile="CoalescenceTree.h" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1a84cc46d51045ff3b161ee8788950e0c2" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double CoalescenceTree::generation</definition>
        <argsstring></argsstring>
        <name>generation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="193" column="1" bodyfile="CoalescenceTree.h" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1aa030e8074eb9d60b4a00321b3980352e" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double CoalescenceTree::sigma</definition>
        <argsstring></argsstring>
        <name>sigma</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="193" column="1" bodyfile="CoalescenceTree.h" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1a35a960e7950aa879f06e456651b44999" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double CoalescenceTree::tau</definition>
        <argsstring></argsstring>
        <name>tau</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="193" column="1" bodyfile="CoalescenceTree.h" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1ac7a1d0583d3dcb55c50fec0e1fd57985" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double CoalescenceTree::deme_sample</definition>
        <argsstring></argsstring>
        <name>deme_sample</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="193" column="1" bodyfile="CoalescenceTree.h" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1a586678f7084086add3a4136476abd375" prot="protected" static="no" mutable="no">
        <type>long double</type>
        <definition>long double CoalescenceTree::spec</definition>
        <argsstring></argsstring>
        <name>spec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="195" column="1" bodyfile="CoalescenceTree.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1af2532e98184a5b0ce0d289e4f264d98f" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double CoalescenceTree::dispersal_relative_cost</definition>
        <argsstring></argsstring>
        <name>dispersal_relative_cost</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="198" column="1" bodyfile="CoalescenceTree.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1a9fe104115b4593c772c03b57b82ff0de" prot="protected" static="no" mutable="no">
        <type>long</type>
        <definition>long CoalescenceTree::deme</definition>
        <argsstring></argsstring>
        <name>deme</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="200" column="1" bodyfile="CoalescenceTree.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1a2d6aec268fc1c842e0f94dfd8b7f97f8" prot="protected" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long CoalescenceTree::desired_specnum</definition>
        <argsstring></argsstring>
        <name>desired_specnum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="202" column="1" bodyfile="CoalescenceTree.h" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1aae24ce11e30fbd74fe078b23b46c14cd" prot="protected" static="no" mutable="no">
        <type>sqlite3 *</type>
        <definition>sqlite3* CoalescenceTree::database</definition>
        <argsstring></argsstring>
        <name>database</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="204" column="1" bodyfile="CoalescenceTree.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1afd585c8a4bdb86461780418f7b886abd" prot="protected" static="no" mutable="no">
        <type>sqlite3 *</type>
        <definition>sqlite3* CoalescenceTree::outdatabase</definition>
        <argsstring></argsstring>
        <name>outdatabase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="207" column="1" bodyfile="CoalescenceTree.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1ade2744c2510a6e8ae791ca7189f483bb" prot="protected" static="no" mutable="no">
        <type>string</type>
        <definition>string CoalescenceTree::sqloutname</definition>
        <argsstring></argsstring>
        <name>sqloutname</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="209" column="1" bodyfile="CoalescenceTree.h" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1a53cf3dfb83813f6148f44e767b2f627d" prot="protected" static="no" mutable="no">
        <type><ref refid="class_treelist" kindref="compound">Treelist</ref></type>
        <definition>Treelist CoalescenceTree::tl</definition>
        <argsstring></argsstring>
        <name>tl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="211" column="1" bodyfile="CoalescenceTree.h" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1a00a26fffe55a8399efff0ca3b42a46aa" prot="protected" static="no" mutable="no">
        <type><ref refid="class_datamask" kindref="compound">Datamask</ref></type>
        <definition>Datamask CoalescenceTree::samplegrid</definition>
        <argsstring></argsstring>
        <name>samplegrid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="213" column="1" bodyfile="CoalescenceTree.h" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1a07f9982fd6f6243c78ef42371603bbe4" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CoalescenceTree::sim_complete</definition>
        <argsstring></argsstring>
        <name>sim_complete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="215" column="1" bodyfile="CoalescenceTree.h" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1af7de4d4f04360edcbe2a20db882b1f87" prot="protected" static="no" mutable="no">
        <type><ref refid="struct_step" kindref="compound">Step</ref></type>
        <definition>Step CoalescenceTree::this_step</definition>
        <argsstring></argsstring>
        <name>this_step</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="219" column="1" bodyfile="CoalescenceTree.h" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1a9379466b9fc0f25bd28543743000e700" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CoalescenceTree::bFullmode</definition>
        <argsstring></argsstring>
        <name>bFullmode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="221" column="1" bodyfile="CoalescenceTree.h" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1ac9cbd7d17fb511c1fcc70c765f6440b0" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CoalescenceTree::bResume</definition>
        <argsstring></argsstring>
        <name>bResume</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="223" column="1" bodyfile="CoalescenceTree.h" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1a6c8c76aec6a9faef9c38f4f275b0793d" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CoalescenceTree::bConfig</definition>
        <argsstring></argsstring>
        <name>bConfig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="225" column="1" bodyfile="CoalescenceTree.h" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1a8d219fd6e324aa3932022017bac93d09" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CoalescenceTree::bPaused</definition>
        <argsstring></argsstring>
        <name>bPaused</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="227" column="1" bodyfile="CoalescenceTree.h" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1aed328cb90b338065ec5a391a46e5bad2" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CoalescenceTree::bPausedImport</definition>
        <argsstring></argsstring>
        <name>bPausedImport</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="227" column="1" bodyfile="CoalescenceTree.h" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_tree_1a1f7515f16d99a9748ab2c4c667f1ffc4" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CoalescenceTree::bIsProtracted</definition>
        <argsstring></argsstring>
        <name>bIsProtracted</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="230" column="1" bodyfile="CoalescenceTree.h" bodystart="230" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_tree_1ad376a7c639d857312f5de2ef47482f68" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CoalescenceTree::CoalescenceTree</definition>
        <argsstring>()</argsstring>
        <name>CoalescenceTree</name>
        <briefdescription>
<para>The constructor for the tree object. </para>        </briefdescription>
        <detaileddescription>
<para>Sets all uninitiated variables to false, except log_all. log_all should be changed to false if minimal text output during simulations is desired. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="239" column="1" bodyfile="CoalescenceTree.h" bodystart="239" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1abdc38545cf3f588725b5d8b8075b3866" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CoalescenceTree::~CoalescenceTree</definition>
        <argsstring>()</argsstring>
        <name>~CoalescenceTree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="264" column="1" bodyfile="CoalescenceTree.h" bodystart="264" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1a46fbbf6c52f7b2bfebb1ae0aac4df724" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoalescenceTree::importSimulationVariables</definition>
        <argsstring>(vector&lt; string &gt; &amp;comargs)</argsstring>
        <name>importSimulationVariables</name>
        <param>
          <type>vector&lt; string &gt; &amp;</type>
          <declname>comargs</declname>
        </param>
        <briefdescription>
<para>Import the simulation variables from the command line structure. </para>        </briefdescription>
        <detaileddescription>
<para>This function parses the simulation variables, imports them (from either the command line or a config file), checks that the input files exist and checks for any paused simulations. The flags are then set correctly, meaning that <ref refid="class_tree_1aec10ea2b720edc13a38310afdfe2b6e4" kindref="member">setup()</ref> and runSim() can be run immediately afterwards.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>comargs</parametername>
</parameternamelist>
<parameterdescription>
<para>a vector of strings, containing the command-line arguments </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="279" column="1" bodyfile="CoalescenceTree.cpp" bodystart="16" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1a8efc9557eb11e41dfdfd7c2c83682e06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoalescenceTree::importSimulationVariables</definition>
        <argsstring>(string config_file)</argsstring>
        <name>importSimulationVariables</name>
        <param>
          <type>string</type>
          <declname>config_file</declname>
        </param>
        <briefdescription>
<para>Import the simulations variables from the specified config file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>config_file</parametername>
</parameternamelist>
<parameterdescription>
<para>the configuration file to import all variables from (both main simulation parameters and map simulation parameters. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="287" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1a518a17560e8550c650f3a76718580ff5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoalescenceTree::parseArgs</definition>
        <argsstring>(vector&lt; string &gt; &amp;comargs)</argsstring>
        <name>parseArgs</name>
        <param>
          <type>vector&lt; string &gt; &amp;</type>
          <declname>comargs</declname>
        </param>
        <briefdescription>
<para>Parses the command line arguments and saves the flags in <ref refid="class_tree" kindref="compound">CoalescenceTree</ref> for fullmode, resuming and other important variables. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>comargs</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="294" column="1" bodyfile="CoalescenceTree.cpp" bodystart="38" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1a322dfcd92942d2143fb3a9e70b81e026" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoalescenceTree::checkFolders</definition>
        <argsstring>()</argsstring>
        <name>checkFolders</name>
        <briefdescription>
<para>Checks that the folders exist and the files required for the simulation also exist. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="299" column="1" bodyfile="CoalescenceTree.cpp" bodystart="211" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1ad0bcc474a9ab1d4e3e2458c4de7304ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoalescenceTree::checkSims</definition>
        <argsstring>()</argsstring>
        <name>checkSims</name>
        <briefdescription>
<para>Checks for existing paused simulations to resume from Sets bPaused if there are. </para>        </briefdescription>
        <detaileddescription>
<para>This version uses the default values read from the config file. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="307" column="1" bodyfile="CoalescenceTree.cpp" bodystart="298" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1aafaede1da6c79583bf2e28b7a1881a5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoalescenceTree::checkSims</definition>
        <argsstring>(string output_dir, long seed, long task)</argsstring>
        <name>checkSims</name>
        <param>
          <type>string</type>
          <declname>output_dir</declname>
        </param>
        <param>
          <type>long</type>
          <declname>seed</declname>
        </param>
        <param>
          <type>long</type>
          <declname>task</declname>
        </param>
        <briefdescription>
<para>Checks for existing paused simulations to resume from. </para>        </briefdescription>
        <detaileddescription>
<para>Sets bPaused if there are.</para><para>This version uses the values supplied to the function directly</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output_dir</parametername>
</parameternamelist>
<parameterdescription>
<para>the output directory to check for </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>seed</parametername>
</parameternamelist>
<parameterdescription>
<para>the seed for paused sims </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>task</parametername>
</parameternamelist>
<parameterdescription>
<para>the task for paused sims </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="320" column="1" bodyfile="CoalescenceTree.cpp" bodystart="303" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1ac374d237b7e2e7e11f6a0ff395003635" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoalescenceTree::setParameters</definition>
        <argsstring>()</argsstring>
        <name>setParameters</name>
        <briefdescription>
<para>Sets the map object with the correct variables, taking the <ref refid="struct_sim_parameters" kindref="compound">SimParameters</ref> structure defined elsewhere for the parameters. </para>        </briefdescription>
        <detaileddescription>
<para>Requires that parameters have already been imported into the <ref refid="struct_sim_parameters" kindref="compound">SimParameters</ref></para><para>This function can only be run once, otherwise a <ref refid="struct_main___exception" kindref="compound">Main_Exception</ref> will be thrown </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="330" column="1" bodyfile="CoalescenceTree.cpp" bodystart="333" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1ac03c034a5730ee4f4d8727aace776412" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt; double &gt; CoalescenceTree::getTemporalSampling</definition>
        <argsstring>()</argsstring>
        <name>getTemporalSampling</name>
        <briefdescription>
<para>Gets the map autocorrel times. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="335" column="1" bodyfile="CoalescenceTree.cpp" bodystart="384" bodyend="396"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1a8e60e04be160c2d7de0ab1c834e6a95b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoalescenceTree::importMaps</definition>
        <argsstring>()</argsstring>
        <name>importMaps</name>
        <briefdescription>
<para>Imports the maps into the forestmap object. </para>        </briefdescription>
        <detaileddescription>
<para>The simulation variables should have already been imported by <ref refid="class_tree_1ac374d237b7e2e7e11f6a0ff395003635" kindref="member">setParameters()</ref>, otherwise a <ref refid="struct_fatal___exception" kindref="compound">Fatal_Exception</ref> will be thrown. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="345" column="1" bodyfile="CoalescenceTree.cpp" bodystart="398" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1a857521315ca6bd9b3300d099488d74f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long long</type>
        <definition>long long CoalescenceTree::getSeed</definition>
        <argsstring>()</argsstring>
        <name>getSeed</name>
        <briefdescription>
<para>Getter for the simulation seed. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns the seeds </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="351" column="1" bodyfile="CoalescenceTree.cpp" bodystart="438" bodyend="441"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1a65f098693e08e33f039a8797ba57c3e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoalescenceTree::setSeed</definition>
        <argsstring>(long long theseedin)</argsstring>
        <name>setSeed</name>
        <param>
          <type>long long</type>
          <declname>theseedin</declname>
        </param>
        <briefdescription>
<para>Sets the simulation seed to the provided variable. </para>        </briefdescription>
        <detaileddescription>
<para>The seed is set within the NR object. This will be fixed for the simulation and is only performed once.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>theseedin</parametername>
</parameternamelist>
<parameterdescription>
<para>the desired seed to set for the simulation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="360" column="1" bodyfile="CoalescenceTree.cpp" bodystart="443" bodyend="451"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1a839ff291e97962d1aaed4d785f394a89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CoalescenceTree::getbPaused</definition>
        <argsstring>()</argsstring>
        <name>getbPaused</name>
        <briefdescription>
<para>Gets the bPaused variable for resuming sims. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>bPaused </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="366" column="1" bodyfile="CoalescenceTree.cpp" bodystart="453" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1a27bd274fe727892c84d153d9bd5ddbf0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; long &gt;</type>
        <definition>vector&lt; long &gt; CoalescenceTree::randomList</definition>
        <argsstring>(long maxnum, long numnum)</argsstring>
        <name>randomList</name>
        <param>
          <type>long</type>
          <declname>maxnum</declname>
        </param>
        <param>
          <type>long</type>
          <declname>numnum</declname>
        </param>
        <briefdescription>
<para>Deprecated function which generated a random list. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000005"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Random lists are no longer required. </para></xrefdescription></xrefsect><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>maxnum</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numnum</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="375" column="1" bodyfile="CoalescenceTree.cpp" bodystart="458" bodyend="478"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1a869ab0aba75336f737cbb137c74b8abc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long CoalescenceTree::setObjectSizes</definition>
        <argsstring>()</argsstring>
        <name>setObjectSizes</name>
        <briefdescription>
<para>Sets the sizes of grid, active and data, based on the number of individuals counted from the samplemask. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a count of the number of individuals that exist in the simulation </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="381" column="1" bodyfile="CoalescenceTree.cpp" bodystart="480" bodyend="516"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1ac31286aee0516ed9104aee4dde5a0651" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoalescenceTree::setupDispersalCoordinator</definition>
        <argsstring>()</argsstring>
        <name>setupDispersalCoordinator</name>
        <briefdescription>
<para>Sets up the dispersal coordinator by linking to the correct functions and choosing the appropriate dispersal method. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="387" column="1" bodyfile="CoalescenceTree.cpp" bodystart="518" bodyend="527"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1aec10ea2b720edc13a38310afdfe2b6e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoalescenceTree::setup</definition>
        <argsstring>()</argsstring>
        <name>setup</name>
        <briefdescription>
<para>The setup function for generating the simulation objects. </para>        </briefdescription>
        <detaileddescription>
<para>The simulation parameters are set from comargs using <ref refid="class_tree_1ac374d237b7e2e7e11f6a0ff395003635" kindref="member">setParameters()</ref>. Generates and fills the active and grid objects as well as importing all the maps from the supplied files. It also checks for paused simulations and imports data if necessary from paused files. <ref refid="class_tree_1a8e60e04be160c2d7de0ab1c834e6a95b" kindref="member">importMaps()</ref> is called for importing the map files</para><para><xrefsect id="bug_1_bug000001"><xreftitle>Bug</xreftitle><xrefdescription><para>For values of dispersal, forest transform rate and time since pristine (and any other double values), they will not be correctly outputted to the SIMULATION_PARAMETERS table if the value is smaller than 10e-6. The solution is to implement string output mechanisms using boost::lexical_cast(), but this has so far only been deemed necessary for the speciation rate (which is intrinsically very small).</para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="404" column="1" bodyfile="CoalescenceTree.cpp" bodystart="529" bodyend="749"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1a351650bda95319b2213c2234fa930f49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoalescenceTree::removeOldPos</definition>
        <argsstring>(const unsigned long &amp;chosen)</argsstring>
        <name>removeOldPos</name>
        <param>
          <type>const unsigned long &amp;</type>
          <declname>chosen</declname>
        </param>
        <briefdescription>
<para>Removes the old position within active by checking any wrapping and removing connections. </para>        </briefdescription>
        <detaileddescription>
<para>The function also corrects the linked list to identify the correct nwrap for every wrapped lineage in that space.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>chosen</parametername>
</parameternamelist>
<parameterdescription>
<para>the desired active reference to remove from the grid. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="413" column="1" bodyfile="CoalescenceTree.cpp" bodystart="751" bodyend="872"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1afeb039e194f964582905951f510b096c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoalescenceTree::calcMove</definition>
        <argsstring>(Step &amp;this_step)</argsstring>
        <name>calcMove</name>
        <param>
          <type><ref refid="struct_step" kindref="compound">Step</ref> &amp;</type>
          <declname>this_step</declname>
        </param>
        <briefdescription>
<para>Calculate the move, given a start x,y coordinates and wrapping. </para>        </briefdescription>
        <detaileddescription>
<para>The provided parameters will be altered to contain the new values so no record of the old variables remains after function running. Current dispersal methods use a fattailed dispersal.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>this_step</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="struct_step" kindref="compound">Step</ref> object containing coordinates and distances for this step </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="424" column="1" bodyfile="CoalescenceTree.cpp" bodystart="874" bodyend="877"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1a70a652ff4273d83e642257e4f5b5dd47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long double</type>
        <definition>long double CoalescenceTree::calcMinMax</definition>
        <argsstring>(const unsigned long &amp;current)</argsstring>
        <name>calcMinMax</name>
        <param>
          <type>const unsigned long &amp;</type>
          <declname>current</declname>
        </param>
        <briefdescription>
<para>Calculates the minmax for a given branch. </para>        </briefdescription>
        <detaileddescription>
<para>Calculates the speciation rate required for speciation to have occured on this branch.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>current</parametername>
</parameternamelist>
<parameterdescription>
<para>the current active reference to perform calculations over. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="436" column="1" bodyfile="CoalescenceTree.cpp" bodystart="880" bodyend="899"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1a16eedb70009e7570d933f88e8ce44117" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoalescenceTree::coalescenceEvent</definition>
        <argsstring>(const unsigned long &amp;chosen, unsigned long &amp;coalchosen)</argsstring>
        <name>coalescenceEvent</name>
        <param>
          <type>const unsigned long &amp;</type>
          <declname>chosen</declname>
        </param>
        <param>
          <type>unsigned long &amp;</type>
          <declname>coalchosen</declname>
        </param>
        <briefdescription>
<para>Perform the coalescence between lineages. Once coalesced, lineages are removed from the active scope. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>chosen</parametername>
</parameternamelist>
<parameterdescription>
<para>the chosen lineage for coalescence </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>coalchosen</parametername>
</parameternamelist>
<parameterdescription>
<para>the target lineage for coalscence </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="443" column="1" bodyfile="CoalescenceTree.cpp" bodystart="901" bodyend="922"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1a05a0e0f5f70d2763f9dad3bd54618c62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoalescenceTree::calcNewPos</definition>
        <argsstring>(bool &amp;coal, const unsigned long &amp;chosen, unsigned long &amp;coalchosen, const long &amp;oldx, const long &amp;oldy, const long &amp;oldxwrap, const long &amp;oldywrap)</argsstring>
        <name>calcNewPos</name>
        <param>
          <type>bool &amp;</type>
          <declname>coal</declname>
        </param>
        <param>
          <type>const unsigned long &amp;</type>
          <declname>chosen</declname>
        </param>
        <param>
          <type>unsigned long &amp;</type>
          <declname>coalchosen</declname>
        </param>
        <param>
          <type>const long &amp;</type>
          <declname>oldx</declname>
        </param>
        <param>
          <type>const long &amp;</type>
          <declname>oldy</declname>
        </param>
        <param>
          <type>const long &amp;</type>
          <declname>oldxwrap</declname>
        </param>
        <param>
          <type>const long &amp;</type>
          <declname>oldywrap</declname>
        </param>
        <briefdescription>
<para>Calculates the new position, checking whether coalescence has occured and with which lineage. </para>        </briefdescription>
        <detaileddescription>
<para>This involves correct handling of checking wrapped lineages (outside the original grid). The probability of coalescence is also calculated.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coal</parametername>
</parameternamelist>
<parameterdescription>
<para>boolean for whether coalescence occured or not </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chosen</parametername>
</parameternamelist>
<parameterdescription>
<para>the chosen lineage </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>coalchosen</parametername>
</parameternamelist>
<parameterdescription>
<para>the lineaged that is coalescing (if required) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>oldx</parametername>
</parameternamelist>
<parameterdescription>
<para>the old x position </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>oldy</parametername>
</parameternamelist>
<parameterdescription>
<para>the old y position </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>oldxwrap</parametername>
</parameternamelist>
<parameterdescription>
<para>the old x wrapping </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>oldywrap</parametername>
</parameternamelist>
<parameterdescription>
<para>the old y wrapping </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="462" column="1" bodyfile="CoalescenceTree.cpp" bodystart="924" bodyend="1168"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1a89e2fa28e3d637b4bc034fb3afc53e81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoalescenceTree::switchPositions</definition>
        <argsstring>(const unsigned long chosen)</argsstring>
        <name>switchPositions</name>
        <param>
          <type>const unsigned long</type>
          <declname>chosen</declname>
        </param>
        <briefdescription>
<para>Switches the chosen position with the endactive position. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>chosen</parametername>
</parameternamelist>
<parameterdescription>
<para>the chosen lineage to switch with endactive. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="474" column="1" bodyfile="CoalescenceTree.cpp" bodystart="1170" bodyend="1285"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1a05c9e44f1a4d7af83e65b6c4565b1b28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoalescenceTree::speciation</definition>
        <argsstring>(const unsigned long &amp;chosen)</argsstring>
        <name>speciation</name>
        <param>
          <type>const unsigned long &amp;</type>
          <declname>chosen</declname>
        </param>
        <briefdescription>
<para>Speciation to supplied lineage. </para>        </briefdescription>
        <detaileddescription>
<para>Also calls the <ref refid="class_tree_1a351650bda95319b2213c2234fa930f49" kindref="member">removeOldPos()</ref> and <ref refid="class_tree_1a89e2fa28e3d637b4bc034fb3afc53e81" kindref="member">switchPositions()</ref> functions for removing the lineage out of active reference. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>chosen</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="482" column="1" bodyfile="CoalescenceTree.cpp" bodystart="1287" bodyend="1307"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1a0a6fd214c1e4b77955add6ffa9f76d5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool CoalescenceTree::calcSpeciation</definition>
        <argsstring>(const long double &amp;random_number, const long double &amp;speciation_rate, const int &amp;no_generations)</argsstring>
        <name>calcSpeciation</name>
        <reimplementedby refid="class_protracted_tree_1ad4a23e4ddf54b374c6620f23f18cff27">calcSpeciation</reimplementedby>
        <param>
          <type>const long double &amp;</type>
          <declname>random_number</declname>
        </param>
        <param>
          <type>const long double &amp;</type>
          <declname>speciation_rate</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>no_generations</declname>
        </param>
        <briefdescription>
<para>Calculates the speciation probability from the random number, speciation rate and number of generations a lineage has existed for. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>random_number</parametername>
</parameternamelist>
<parameterdescription>
<para>the generated random number from 0-1 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>speciation_rate</parametername>
</parameternamelist>
<parameterdescription>
<para>the speciation rate to be applied </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>no_generations</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of generations a lineage has existed for </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>if true, speciation has occured </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="492" column="1" bodyfile="CoalescenceTree.cpp" bodystart="1309" bodyend="1314"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1a8f4c4cbc5ad516f0fde489c9a826e676" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long CoalescenceTree::estSpecnum</definition>
        <argsstring>()</argsstring>
        <name>estSpecnum</name>
        <briefdescription>
<para>Estimates the species number from the second largest minimum speciation rate remaining in active. </para>        </briefdescription>
        <detaileddescription>
<para>This allows for halting of the simulation once this threshold has been reached. However, the function is not currently in use as calculating the coalescence tree is very computionally intensive. <xrefsect id="deprecated_1_deprecated000006"><xreftitle>Deprecated</xreftitle><xrefdescription><para>this function is currently obselete and not implemented, but was still functional as of version 3.2</para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="503" column="1" bodyfile="CoalescenceTree.cpp" bodystart="1316" bodyend="1403"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1a3820405a51ac9043346d37b0e267d364" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoalescenceTree::runChecks</definition>
        <argsstring>(const unsigned long &amp;chosen, const unsigned long &amp;coalchosen)</argsstring>
        <name>runChecks</name>
        <param>
          <type>const unsigned long &amp;</type>
          <declname>chosen</declname>
        </param>
        <param>
          <type>const unsigned long &amp;</type>
          <declname>coalchosen</declname>
        </param>
        <briefdescription>
<para>Run checks at the end of each cycle which make certain the move has been successful. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>chosen</parametername>
</parameternamelist>
<parameterdescription>
<para>the chosen lineage to check </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>coalchosen</parametername>
</parameternamelist>
<parameterdescription>
<para>the lineage which is coalescing with the chosen lineage which we are also required to check </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="510" column="1" bodyfile="CoalescenceTree.cpp" bodystart="1405" bodyend="1506"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1aa60dbbf173231fb224e2c6792cbae292" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoalescenceTree::validationCheck</definition>
        <argsstring>(const unsigned long &amp;chosen, int o, const unsigned long &amp;current, const bool &amp;coal)</argsstring>
        <name>validationCheck</name>
        <param>
          <type>const unsigned long &amp;</type>
          <declname>chosen</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o</declname>
        </param>
        <param>
          <type>const unsigned long &amp;</type>
          <declname>current</declname>
        </param>
        <param>
          <type>const bool &amp;</type>
          <declname>coal</declname>
        </param>
        <briefdescription>
<para>Validates the chosen lineage is set up correctly. </para>        </briefdescription>
        <detaileddescription>
<para>This function is for debugging purposes. It checks that the wrapping of the lineage in active is correct, and links to other lineages are applied correctly.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>chosen</parametername>
</parameternamelist>
<parameterdescription>
<para>the desired lineage to check </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>o</parametername>
</parameternamelist>
<parameterdescription>
<para>an integer for outputting and referencing later on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>current</parametername>
</parameternamelist>
<parameterdescription>
<para>the current lineage in memory, again for referencing purposes. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>coal</parametername>
</parameternamelist>
<parameterdescription>
<para>boolean for whether coalescence has occured. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="524" column="1" bodyfile="CoalescenceTree.cpp" bodystart="1508" bodyend="1574"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1ab8a62d0ca2b1746676073e3f33e2a949" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoalescenceTree::checkSimSize</definition>
        <argsstring>(unsigned long req_data, unsigned long req_active)</argsstring>
        <name>checkSimSize</name>
        <param>
          <type>unsigned long</type>
          <declname>req_data</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>req_active</declname>
        </param>
        <briefdescription>
<para>Checks the size of the main active and data objects is large enough. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req_data</parametername>
</parameternamelist>
<parameterdescription>
<para>the required data object size </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>req_active</parametername>
</parameternamelist>
<parameterdescription>
<para>the required active object size </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="531" column="1" bodyfile="CoalescenceTree.cpp" bodystart="1576" bodyend="1594"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1a95360a2f62ef0eb436d586552b299e1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoalescenceTree::writeSimStartToConsole</definition>
        <argsstring>()</argsstring>
        <name>writeSimStartToConsole</name>
        <briefdescription>
<para>Writes to the console that the simulation is beginning. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="536" column="1" bodyfile="CoalescenceTree.cpp" bodystart="1596" bodyend="1610"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1a1ba0f5d27c6ef6e9e17f988aff2dfe65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoalescenceTree::setSimStartVariables</definition>
        <argsstring>()</argsstring>
        <name>setSimStartVariables</name>
        <briefdescription>
<para>Sets the variables at the start of a simulation for temporary data. </para>        </briefdescription>
        <detaileddescription>
<para>This is not the main set-up routine, which creates the permanent data structures including maps, the coalescence tree and active lineage listings. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="544" column="1" bodyfile="CoalescenceTree.cpp" bodystart="1612" bodyend="1627"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1a01555697d3320e2cd9ee40f6747d5206" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoalescenceTree::checkMapUpdate</definition>
        <argsstring>()</argsstring>
        <name>checkMapUpdate</name>
        <briefdescription>
<para>Checks if the number of lineages should be expanded at another sample point. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="563" column="1" bodyfile="CoalescenceTree.cpp" bodystart="1683" bodyend="1701"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1a23803bddf46ad28a1bdd46bf05693b1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoalescenceTree::chooseRandomLineage</definition>
        <argsstring>()</argsstring>
        <name>chooseRandomLineage</name>
        <briefdescription>
<para>Chooses a random lineage from active. </para>        </briefdescription>
        <detaileddescription>
<para>The index of the random lineage is stored in this_step, as chosen. Also records the required variables for the step process, like x, y position. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="571" column="1" bodyfile="CoalescenceTree.cpp" bodystart="1703" bodyend="1727"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1afe75245862a1c40030c1c8607518cf8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CoalescenceTree::runSimulation</definition>
        <argsstring>()</argsstring>
        <name>runSimulation</name>
        <briefdescription>
<para>Run the entire simulation given the start conditions already defined by <ref refid="class_tree_1aec10ea2b720edc13a38310afdfe2b6e4" kindref="member">setup()</ref> </para>        </briefdescription>
        <detaileddescription>
<para>Setup is assumed to have been run already. This function is the main function containing the main loop of the simulation. At the end of the simulation, returns true if the simulation is complete, false otherwise. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="601" column="1" bodyfile="CoalescenceTree.cpp" bodystart="1821" bodyend="1923"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1afd6bd75c301d2f57c4997fcfc92f192e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CoalescenceTree::stopSimulation</definition>
        <argsstring>()</argsstring>
        <name>stopSimulation</name>
        <briefdescription>
<para>Finalises the simulation, and performs the correct tasks depending if the sim has been paused or finished. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="608" column="1" bodyfile="CoalescenceTree.cpp" bodystart="1925" bodyend="1963"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1aea93074542f30a4a51c05140aae93708" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoalescenceTree::expandMap</definition>
        <argsstring>(double generationin)</argsstring>
        <name>expandMap</name>
        <param>
          <type>double</type>
          <declname>generationin</declname>
        </param>
        <briefdescription>
<para>Expands the map, generating the new lineages where necessary. </para>        </briefdescription>
        <detaileddescription>
<para>The samplemask provided is used for expansion. Any empty spaces are filled with a new lineage. Lineages which have not moved are changed to tips, with a new data entry so that original and new generations are recorded.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>generationin</parametername>
</parameternamelist>
<parameterdescription>
<para>the generation that the expansion is occuring at. This is used in recording the new tips </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="619" column="1" bodyfile="CoalescenceTree.cpp" bodystart="1965" bodyend="2027"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1a2d2065bbebee8b55270d2691d40cd974" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long CoalescenceTree::sortData</definition>
        <argsstring>()</argsstring>
        <name>sortData</name>
        <briefdescription>
<para>Sort and process the species list so that the useful information can be extracted from it. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="624" column="1" bodyfile="CoalescenceTree.cpp" bodystart="2029" bodyend="2113"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1afdf680e187c25ed39d1e66542ce44cc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoalescenceTree::outputData</definition>
        <argsstring>()</argsstring>
        <name>outputData</name>
        <briefdescription>
<para>Outputs important simulation data to a csv file. Overloaded version which automatically calls <ref refid="class_tree_1a2d2065bbebee8b55270d2691d40cd974" kindref="member">sortData()</ref> if no species richness is provided. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="630" column="1" bodyfile="CoalescenceTree.cpp" bodystart="2115" bodyend="2120"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1a5acf7d0eea9ea2ef4928bb6691b87724" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoalescenceTree::outputData</definition>
        <argsstring>(unsigned long species_richness)</argsstring>
        <name>outputData</name>
        <param>
          <type>unsigned long</type>
          <declname>species_richness</declname>
        </param>
        <briefdescription>
<para>Outputs important simulation data to a csv file. This function will likely be remove in future versions as all simulation output is now contained in an SQLite database. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>species_richness</parametername>
</parameternamelist>
<parameterdescription>
<para>the species richness of the tree with the minimum speciation rate. Outputted into the csv file </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="638" column="1" bodyfile="CoalescenceTree.cpp" bodystart="2122" bodyend="2159"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1ab8785fc9e27868a56335048321c13290" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoalescenceTree::writeTimes</definition>
        <argsstring>()</argsstring>
        <name>writeTimes</name>
        <briefdescription>
<para>Writes the times to the terminal for simulation information. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="643" column="1" bodyfile="CoalescenceTree.cpp" bodystart="2161" bodyend="2182"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1a891764ffc1e29d3edbe0fd08e67a184b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void CoalescenceTree::setProtractedVariables</definition>
        <argsstring>(double speciation_gen_min, double speciation_gen_max)</argsstring>
        <name>setProtractedVariables</name>
        <reimplementedby refid="class_protracted_tree_1a62128de5d5a6ed0dafc0492ec4ea27b7">setProtractedVariables</reimplementedby>
        <param>
          <type>double</type>
          <declname>speciation_gen_min</declname>
        </param>
        <param>
          <type>double</type>
          <declname>speciation_gen_max</declname>
        </param>
        <briefdescription>
<para>Sets the protracted variables. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>speciation_gen_min</parametername>
</parameternamelist>
<parameterdescription>
<para>the minimum number of generations to have passed before speciation is allowed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>speciation_gen_max</parametername>
</parameternamelist>
<parameterdescription>
<para>the maximum number of generations a lineage can exist for before it is speciated. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="650" column="1" bodyfile="CoalescenceTree.cpp" bodystart="2184" bodyend="2187"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1a34c0808026bf00546c8f9786376be730" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>string</type>
        <definition>string CoalescenceTree::getProtractedVariables</definition>
        <argsstring>()</argsstring>
        <name>getProtractedVariables</name>
        <reimplementedby refid="class_protracted_tree_1a5558d12d0595e3789a317c9eb9d88f5f">getProtractedVariables</reimplementedby>
        <briefdescription>
<para>Gets the protracted variables and returns them as a single, newline separated string. This method is intended to be overridden in derived classes. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>string containing the protracted variables, separated by newlines. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="657" column="1" bodyfile="CoalescenceTree.cpp" bodystart="2190" bodyend="2195"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1a6ffc42e941f352cd74f01f6f7011f00b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double CoalescenceTree::getProtractedGenerationMin</definition>
        <argsstring>()</argsstring>
        <name>getProtractedGenerationMin</name>
        <reimplementedby refid="class_protracted_tree_1a93f2dc40d4539703e56282f5aacd0e23">getProtractedGenerationMin</reimplementedby>
        <briefdescription>
<para>Gets the minimum number of generations a lineage must exist. </para>        </briefdescription>
        <detaileddescription>
<para>Without overriding this function, should always return 0.0. <simplesect kind="return"><para>double the number of generations a lineage must exist </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="665" column="1" bodyfile="CoalescenceTree.cpp" bodystart="2197" bodyend="2200"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1a0c5e746982a87f24c083f4534bf92b45" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double CoalescenceTree::getProtractedGenerationMax</definition>
        <argsstring>()</argsstring>
        <name>getProtractedGenerationMax</name>
        <reimplementedby refid="class_protracted_tree_1a705f8141d382c336d5b237d446cbe945">getProtractedGenerationMax</reimplementedby>
        <briefdescription>
<para>Gets the maximum number of generations a lineage can exist. </para>        </briefdescription>
        <detaileddescription>
<para>Without overriding this function, should always return 0.0 (no maximum).</para><para><simplesect kind="return"><para>double the number of generations a lineage must exist </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="674" column="1" bodyfile="CoalescenceTree.cpp" bodystart="2202" bodyend="2205"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1ae5308f74e982485ac444aa394b952152" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoalescenceTree::simPause</definition>
        <argsstring>()</argsstring>
        <name>simPause</name>
        <briefdescription>
<para>Pause the simulation and dump data from memory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="679" column="1" bodyfile="CoalescenceTree.cpp" bodystart="2207" bodyend="2350"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1ac545d844141db977920fc9fd76ce9dbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoalescenceTree::setResumeParameters</definition>
        <argsstring>(string pausedir, string outdir, unsigned long seed, unsigned long task, unsigned long new_max_time)</argsstring>
        <name>setResumeParameters</name>
        <param>
          <type>string</type>
          <declname>pausedir</declname>
        </param>
        <param>
          <type>string</type>
          <declname>outdir</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>seed</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>task</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>new_max_time</declname>
        </param>
        <briefdescription>
<para>Sets the resume variables so that the simulation can be resumed. </para>        </briefdescription>
        <detaileddescription>
<para>The pause directory can be the same as the output directory if it is desirable to save to the same location.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pausedir</parametername>
</parameternamelist>
<parameterdescription>
<para>the directory containing the pause folder for resuming the simulation </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outdir</parametername>
</parameternamelist>
<parameterdescription>
<para>the directory to write simulation output to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>seed</parametername>
</parameternamelist>
<parameterdescription>
<para>the simulation seed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>task</parametername>
</parameternamelist>
<parameterdescription>
<para>the simulation task </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>new_max_time</parametername>
</parameternamelist>
<parameterdescription>
<para>the maximum simulation time to run for in seconds (0 keeps old simulation max time) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="692" column="1" bodyfile="CoalescenceTree.cpp" bodystart="2361" bodyend="2373"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1aeade4bccb8394937a53bc4fbcf2b4300" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoalescenceTree::setResumeParameters</definition>
        <argsstring>()</argsstring>
        <name>setResumeParameters</name>
        <briefdescription>
<para>Sets the resume variables to the defaults. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="697" column="1" bodyfile="CoalescenceTree.cpp" bodystart="2352" bodyend="2359"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1af57075728924141c7b6d311822a22dc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void CoalescenceTree::loadMainSave</definition>
        <argsstring>()</argsstring>
        <name>loadMainSave</name>
        <briefdescription>
<para>Loads the main simulation parameters from the save file into memory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="701" column="1" bodyfile="CoalescenceTree.cpp" bodystart="2375" bodyend="2481"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1af7db53d4870d845741d3159f57b73b30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoalescenceTree::loadDataSave</definition>
        <argsstring>()</argsstring>
        <name>loadDataSave</name>
        <briefdescription>
<para>Loads the data object from the save file into memory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="706" column="1" bodyfile="CoalescenceTree.cpp" bodystart="2483" bodyend="2508"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1af145148202f11654d6d6a15a6c021924" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoalescenceTree::loadActiveSave</definition>
        <argsstring>()</argsstring>
        <name>loadActiveSave</name>
        <briefdescription>
<para>Loads the active object from the save file into memory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="711" column="1" bodyfile="CoalescenceTree.cpp" bodystart="2510" bodyend="2532"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1a2834ef82f447ca95c48310538c4b56ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoalescenceTree::loadGridSave</definition>
        <argsstring>()</argsstring>
        <name>loadGridSave</name>
        <briefdescription>
<para>Loads the grid from the save file into memory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="716" column="1" bodyfile="CoalescenceTree.cpp" bodystart="2534" bodyend="2581"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1a1d8d885f6db073e2b2fe8f58023f764f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoalescenceTree::loadMapSave</definition>
        <argsstring>()</argsstring>
        <name>loadMapSave</name>
        <briefdescription>
<para>Loads the map from the save file into memory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="721" column="1" bodyfile="CoalescenceTree.cpp" bodystart="2583" bodyend="2607"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1a3d614f3848dc7acab168642efe345569" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoalescenceTree::simResume</definition>
        <argsstring>()</argsstring>
        <name>simResume</name>
        <briefdescription>
<para>Resumes the simulation from a previous state. </para>        </briefdescription>
        <detaileddescription>
<para>Reads in the parameters and objects from file and re-starts the simulation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="728" column="1" bodyfile="CoalescenceTree.cpp" bodystart="2609" bodyend="2632"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1ae784a6ed362f6c5263ee797759f715b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoalescenceTree::sqlCreate</definition>
        <argsstring>()</argsstring>
        <name>sqlCreate</name>
        <briefdescription>
<para>Generates the SQL database file from the full simulation data. This allows for greater analysis of the data after completion of the simulation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="734" column="1" bodyfile="CoalescenceTree.cpp" bodystart="2634" bodyend="2869"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1aa8bb5d93c7992404ede0a49bb69ccd1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>string</type>
        <definition>string CoalescenceTree::protractedVarsToString</definition>
        <argsstring>()</argsstring>
        <name>protractedVarsToString</name>
        <reimplementedby refid="class_protracted_tree_1a0a899dcd433a3f8e752fa02640f561c0">protractedVarsToString</reimplementedby>
        <briefdescription>
<para>Outputs the protracted variables to a string. </para>        </briefdescription>
        <detaileddescription>
<para>This function is intended to be overridden by derived classes. It is intended the output is used for writing to SQL databases.</para><para><simplesect kind="return"><para>string containing a list of the protracted speciation variables. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="744" column="1" bodyfile="CoalescenceTree.cpp" bodystart="2871" bodyend="2875"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1a8cd3db7add1884ea53b0d98002d39cd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoalescenceTree::sqlOutput</definition>
        <argsstring>()</argsstring>
        <name>sqlOutput</name>
        <briefdescription>
<para>Copy the in-memory database to file. </para>        </briefdescription>
        <detaileddescription>
<para>This function should not be called if the database is already opened on disc, and won&apos;t do anything if it is. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="751" column="1" bodyfile="CoalescenceTree.cpp" bodystart="2877" bodyend="2954"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1ae0b48a12fd70982cc9dc2e31d7f4e84f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoalescenceTree::applySpecRate</definition>
        <argsstring>(double sr, double t)</argsstring>
        <name>applySpecRate</name>
        <param>
          <type>double</type>
          <declname>sr</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Applies the given speciation rate to the tree. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sr</parametername>
</parameternamelist>
<parameterdescription>
<para>the required speciation rate </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="757" column="1" bodyfile="CoalescenceTree.cpp" bodystart="2956" bodyend="2972"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1a789a2fc3bc53a99d120638fe009759ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoalescenceTree::applySpecRate</definition>
        <argsstring>(double sr)</argsstring>
        <name>applySpecRate</name>
        <param>
          <type>double</type>
          <declname>sr</declname>
        </param>
        <briefdescription>
<para>Overloaded version of applySpecRates for the default generation (0.0). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sr</parametername>
</parameternamelist>
<parameterdescription>
<para>the speciation rate to apply to the tree </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="763" column="1" bodyfile="CoalescenceTree.cpp" bodystart="2974" bodyend="2977"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1acfc7efdec999f6dbf2ac089514d22091" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoalescenceTree::applyMultipleRates</definition>
        <argsstring>()</argsstring>
        <name>applyMultipleRates</name>
        <briefdescription>
<para>Applies multiple speciation rates to the coalescence tree, ignoring repeated speciation rates. </para>        </briefdescription>
        <detaileddescription>
<para>Speciation rates are read from the speciation_rates object, which should have already been calculated. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="770" column="1" bodyfile="CoalescenceTree.cpp" bodystart="2979" bodyend="3058"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1a25f082da13789dfa3fefcbcfd08b4dfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoalescenceTree::determineSpeciationRates</definition>
        <argsstring>()</argsstring>
        <name>determineSpeciationRates</name>
        <briefdescription>
<para>Determines the speciation rates to apply and then applies them to the coalescence tree post-simulation. </para>        </briefdescription>
        <detaileddescription>
<para>Detects speciation rates from the config files supplied. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="778" column="1" bodyfile="CoalescenceTree.cpp" bodystart="3062" bodyend="3079"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1ae07582bb85bff9bbb3f204c1066df9cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoalescenceTree::verifyReproductionMap</definition>
        <argsstring>()</argsstring>
        <name>verifyReproductionMap</name>
        <briefdescription>
<para>Checks that the reproduction map makes sense with the fine density map. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="783" column="1" bodyfile="CoalescenceTree.cpp" bodystart="3081" bodyend="3101"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1acf089cdd22fee4b4621167baa1e17b4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoalescenceTree::addWrappedLineage</definition>
        <argsstring>(unsigned long numstart, long x, long y)</argsstring>
        <name>addWrappedLineage</name>
        <param>
          <type>unsigned long</type>
          <declname>numstart</declname>
        </param>
        <param>
          <type>long</type>
          <declname>x</declname>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Adds the lineage to the correct point in the linked list of active lineages. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>numstart</parametername>
</parameternamelist>
<parameterdescription>
<para>the active position to add </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the x position of the lineage </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>the y position of the lineage </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="791" column="1" bodyfile="CoalescenceTree.cpp" bodystart="3103" bodyend="3129"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1a6af2aaa691ffbb9899e3f070a715e371" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoalescenceTree::convertTip</definition>
        <argsstring>(unsigned long i, double generationin)</argsstring>
        <name>convertTip</name>
        <param>
          <type>unsigned long</type>
          <declname>i</declname>
        </param>
        <param>
          <type>double</type>
          <declname>generationin</declname>
        </param>
        <briefdescription>
<para>Creates a new reference in data containing the tip with a new generation counter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>the reference in active of the lineage to make a tip </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>generationin</parametername>
</parameternamelist>
<parameterdescription>
<para>the generation to make the lineage a tip at </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="798" column="1" bodyfile="CoalescenceTree.cpp" bodystart="3131" bodyend="3147"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1af49dbccf87142a9a2ba932cd7974246e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long CoalescenceTree::countCellExpansion</definition>
        <argsstring>(const long &amp;x, const long &amp;y, const long &amp;xwrap, const long &amp;ywrap, const double &amp;generationin, const bool &amp;make_tips)</argsstring>
        <name>countCellExpansion</name>
        <param>
          <type>const long &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const long &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const long &amp;</type>
          <declname>xwrap</declname>
        </param>
        <param>
          <type>const long &amp;</type>
          <declname>ywrap</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>generationin</declname>
        </param>
        <param>
          <type>const bool &amp;</type>
          <declname>make_tips</declname>
        </param>
        <briefdescription>
<para>Counts the number of lineages at a particular location that need to be added, after making the correct number of those that already exist into tips. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the x coordinate of the location of interest </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>the y coordinate of the location of interest </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xwrap</parametername>
</parameternamelist>
<parameterdescription>
<para>the x wrapping of the location </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ywrap</parametername>
</parameternamelist>
<parameterdescription>
<para>the y wrapping of the location </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>generationin</parametername>
</parameternamelist>
<parameterdescription>
<para>the generation to assign to new tips </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>make_tips</parametername>
</parameternamelist>
<parameterdescription>
<para>if true, stores the tips as well as counting them </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of new lineages that need to be added. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="812" column="1" bodyfile="CoalescenceTree.cpp" bodystart="3149" bodyend="3193"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1a1ea4b59664591f312014ba15773176f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoalescenceTree::expandCell</definition>
        <argsstring>(long x, long y, long xwrap, long ywrap, double generationin, unsigned long add)</argsstring>
        <name>expandCell</name>
        <param>
          <type>long</type>
          <declname>x</declname>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
        </param>
        <param>
          <type>long</type>
          <declname>xwrap</declname>
        </param>
        <param>
          <type>long</type>
          <declname>ywrap</declname>
        </param>
        <param>
          <type>double</type>
          <declname>generationin</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>add</declname>
        </param>
        <briefdescription>
<para>Expands the cell at the desired location by adding the supplied number of lineages. </para>        </briefdescription>
        <detaileddescription>
<para>This takes into account wrapping to correctly add the right number</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the x coordinate to add at </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>the y coordinate to add at </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xwrap</parametername>
</parameternamelist>
<parameterdescription>
<para>the x wrapping to add at </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ywrap</parametername>
</parameternamelist>
<parameterdescription>
<para>the y wrapping to add at </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>generationin</parametername>
</parameternamelist>
<parameterdescription>
<para>the generation to set the new lineages to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>add</parametername>
</parameternamelist>
<parameterdescription>
<para>the total number of lineages to add at this location </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="827" column="1" bodyfile="CoalescenceTree.cpp" bodystart="3195" bodyend="3233"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1a1ef4924887d8b9fdf3b45f35187d69d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoalescenceTree::makeTip</definition>
        <argsstring>(const unsigned long &amp;tmp_active, const double &amp;generationin)</argsstring>
        <name>makeTip</name>
        <param>
          <type>const unsigned long &amp;</type>
          <declname>tmp_active</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>generationin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="829" column="1" bodyfile="CoalescenceTree.cpp" bodystart="3235" bodyend="3247"/>
      </memberdef>
      <memberdef kind="function" id="class_tree_1a4918f354073488d7ace09fd80cd8991c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoalescenceTree::validateLineages</definition>
        <argsstring>()</argsstring>
        <name>validateLineages</name>
        <briefdescription>
<para>Validates all lineages have been set up correctly. This may take considerable time for larger simulations. </para>        </briefdescription>
        <detaileddescription>
<para>This function is only relevant in debug mode. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoalescenceTree.h" line="837" column="1" bodyfile="CoalescenceTree.cpp" bodystart="3249" bodyend="3336"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents the output phylogenetic tree. </para>    </briefdescription>
    <detaileddescription>
<para>Contains all functions for running simulations, outputting data and calculating coalescence tree structure. This could be useful for HPC simulations or integration into a GUI. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="288">
        <label>ProtractedTree</label>
        <link refid="class_protracted_tree"/>
        <childnode refid="287" relation="public-inheritance">
        </childnode>
      </node>
      <node id="287">
        <label>CoalescenceTree</label>
        <link refid="class_tree"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="303">
        <label>Row&lt; double &gt;</label>
        <link refid="class_row"/>
      </node>
      <node id="304">
        <label>Step</label>
        <link refid="struct_step"/>
      </node>
      <node id="295">
        <label>Row&lt; SpeciesList &gt;</label>
        <link refid="class_row"/>
      </node>
      <node id="307">
        <label>Row&lt; Datapoint &gt;</label>
        <link refid="class_row"/>
      </node>
      <node id="296">
        <label>Map</label>
        <link refid="class_map"/>
        <childnode refid="293" relation="usage">
          <edgelabel>NextMap</edgelabel>
          <edgelabel>landscape_type</edgelabel>
        </childnode>
        <childnode refid="297" relation="usage">
          <edgelabel>fine_map</edgelabel>
          <edgelabel>coarse_map</edgelabel>
          <edgelabel>pristine_fine_map</edgelabel>
          <edgelabel>pristine_coarse_map</edgelabel>
        </childnode>
        <childnode refid="299" relation="usage">
          <edgelabel>mapvars</edgelabel>
        </childnode>
      </node>
      <node id="293">
        <label>string</label>
      </node>
      <node id="292">
        <label>Row&lt; bool &gt;</label>
        <link refid="class_row"/>
      </node>
      <node id="300">
        <label>ConfigOption</label>
        <link refid="class_config_option"/>
      </node>
      <node id="294">
        <label>Matrix&lt; SpeciesList &gt;</label>
        <link refid="class_matrix"/>
        <childnode refid="295" relation="usage">
          <edgelabel>matrix</edgelabel>
        </childnode>
      </node>
      <node id="306">
        <label>Row&lt; Treenode &gt;</label>
        <link refid="class_row"/>
      </node>
      <node id="289">
        <label>CoalescenceTree</label>
        <link refid="class_tree"/>
        <childnode refid="290" relation="usage">
          <edgelabel>samplegrid</edgelabel>
        </childnode>
        <childnode refid="294" relation="usage">
          <edgelabel>grid</edgelabel>
        </childnode>
        <childnode refid="296" relation="usage">
          <edgelabel>forestmap</edgelabel>
        </childnode>
        <childnode refid="301" relation="usage">
          <edgelabel>dispersal_coordinator</edgelabel>
        </childnode>
        <childnode refid="304" relation="usage">
          <edgelabel>this_step</edgelabel>
        </childnode>
        <childnode refid="293" relation="usage">
          <edgelabel>finemapinput</edgelabel>
          <edgelabel>coarsemapinput</edgelabel>
          <edgelabel>outdirectory</edgelabel>
          <edgelabel>pause_sim_directory</edgelabel>
          <edgelabel>pristinefinemapinput</edgelabel>
          <edgelabel>autocorrel_file</edgelabel>
          <edgelabel>sqloutname</edgelabel>
          <edgelabel>pristinecoarsemapinput</edgelabel>
        </childnode>
        <childnode refid="306" relation="usage">
          <edgelabel>data</edgelabel>
        </childnode>
        <childnode refid="307" relation="usage">
          <edgelabel>active</edgelabel>
        </childnode>
        <childnode refid="305" relation="usage">
          <edgelabel>NR</edgelabel>
        </childnode>
        <childnode refid="308" relation="usage">
          <edgelabel>tl</edgelabel>
        </childnode>
        <childnode refid="309" relation="usage">
          <edgelabel>rep_map</edgelabel>
        </childnode>
        <childnode refid="299" relation="usage">
          <edgelabel>sim_parameters</edgelabel>
        </childnode>
      </node>
      <node id="305">
        <label>NRrand</label>
        <link refid="class_n_rrand"/>
      </node>
      <node id="290">
        <label>Datamask</label>
        <link refid="class_datamask"/>
        <childnode refid="291" relation="usage">
          <edgelabel>sample_mask</edgelabel>
        </childnode>
        <childnode refid="293" relation="usage">
          <edgelabel>inputfile</edgelabel>
        </childnode>
      </node>
      <node id="299">
        <label>SimParameters</label>
        <link refid="struct_sim_parameters"/>
        <childnode refid="300" relation="usage">
          <edgelabel>configs</edgelabel>
        </childnode>
        <childnode refid="293" relation="usage">
          <edgelabel>reproduction_file</edgelabel>
          <edgelabel>dispersal_method</edgelabel>
          <edgelabel>outdirectory</edgelabel>
          <edgelabel>dispersal_file</edgelabel>
          <edgelabel>coarsemapfile</edgelabel>
          <edgelabel>finemapfile</edgelabel>
          <edgelabel>samplemaskfile</edgelabel>
          <edgelabel>autocorrel_file</edgelabel>
          <edgelabel>pristinefinemapfile</edgelabel>
          <edgelabel>pristinecoarsemapfile</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
      </node>
      <node id="291">
        <label>Matrix&lt; bool &gt;</label>
        <link refid="class_matrix"/>
        <childnode refid="292" relation="usage">
          <edgelabel>matrix</edgelabel>
        </childnode>
      </node>
      <node id="302">
        <label>Matrix&lt; double &gt;</label>
        <link refid="class_matrix"/>
        <childnode refid="303" relation="usage">
          <edgelabel>matrix</edgelabel>
        </childnode>
      </node>
      <node id="297">
        <label>Matrix&lt; uint32_t &gt;</label>
        <link refid="class_matrix"/>
        <childnode refid="298" relation="usage">
          <edgelabel>matrix</edgelabel>
        </childnode>
      </node>
      <node id="298">
        <label>Row&lt; uint32_t &gt;</label>
        <link refid="class_row"/>
      </node>
      <node id="301">
        <label>DispersalCoordinator</label>
        <link refid="class_dispersal_coordinator"/>
        <childnode refid="302" relation="usage">
          <edgelabel>dispersal_prob_map</edgelabel>
        </childnode>
        <childnode refid="296" relation="usage">
          <edgelabel>forestmap</edgelabel>
        </childnode>
        <childnode refid="304" relation="usage">
          <edgelabel>doDispersal</edgelabel>
        </childnode>
        <childnode refid="305" relation="usage">
          <edgelabel>NR</edgelabel>
        </childnode>
      </node>
      <node id="308">
        <label>Treelist</label>
        <link refid="class_treelist"/>
      </node>
      <node id="309">
        <label>ReproductionMap</label>
        <link refid="class_reproduction_map"/>
        <childnode refid="302" relation="usage">
          <edgelabel>reproduction_map</edgelabel>
        </childnode>
        <childnode refid="293" relation="usage">
          <edgelabel>map_file</edgelabel>
        </childnode>
        <childnode refid="305" relation="usage">
          <edgelabel>reproductionMapChecker_fptr</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="CoalescenceTree.h" line="107" column="1" bodyfile="CoalescenceTree.h" bodystart="106" bodyend="851"/>
    <listofallmembers>
      <member refid="class_tree_1a2c42ce89a7d6556be51254b5b09c27e3" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>active</name></member>
      <member refid="class_tree_1acf089cdd22fee4b4621167baa1e17b4e" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>addWrappedLineage</name></member>
      <member refid="class_tree_1acfc7efdec999f6dbf2ac089514d22091" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>applyMultipleRates</name></member>
      <member refid="class_tree_1ae0b48a12fd70982cc9dc2e31d7f4e84f" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>applySpecRate</name></member>
      <member refid="class_tree_1a789a2fc3bc53a99d120638fe009759ff" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>applySpecRate</name></member>
      <member refid="class_tree_1a4713ae4a4068fa911bc346b594bbade6" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>autocorrel_file</name></member>
      <member refid="class_tree_1acbf9101bb6c28d5a0f174801c27c23b6" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>autocorrel_times</name></member>
      <member refid="class_tree_1aa4e3e77ce6b3fdbab72270144e63345a" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>bAutocorrel</name></member>
      <member refid="class_tree_1a6c8c76aec6a9faef9c38f4f275b0793d" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>bConfig</name></member>
      <member refid="class_tree_1a9379466b9fc0f25bd28543743000e700" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>bFullmode</name></member>
      <member refid="class_tree_1a1f7515f16d99a9748ab2c4c667f1ffc4" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>bIsProtracted</name></member>
      <member refid="class_tree_1a8d219fd6e324aa3932022017bac93d09" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>bPaused</name></member>
      <member refid="class_tree_1aed328cb90b338065ec5a391a46e5bad2" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>bPausedImport</name></member>
      <member refid="class_tree_1ac9cbd7d17fb511c1fcc70c765f6440b0" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>bResume</name></member>
      <member refid="class_tree_1a70a652ff4273d83e642257e4f5b5dd47" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>calcMinMax</name></member>
      <member refid="class_tree_1afeb039e194f964582905951f510b096c" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>calcMove</name></member>
      <member refid="class_tree_1a05a0e0f5f70d2763f9dad3bd54618c62" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>calcNewPos</name></member>
      <member refid="class_tree_1a0a6fd214c1e4b77955add6ffa9f76d5d" prot="public" virt="virtual"><scope>CoalescenceTree</scope><name>calcSpeciation</name></member>
      <member refid="class_tree_1a322dfcd92942d2143fb3a9e70b81e026" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>checkFolders</name></member>
      <member refid="class_tree_1a01555697d3320e2cd9ee40f6747d5206" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>checkMapUpdate</name></member>
      <member refid="class_tree_1ad0bcc474a9ab1d4e3e2458c4de7304ad" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>checkSims</name></member>
      <member refid="class_tree_1aafaede1da6c79583bf2e28b7a1881a5c" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>checkSims</name></member>
      <member refid="class_tree_1ab8a62d0ca2b1746676073e3f33e2a949" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>checkSimSize</name></member>
      <member refid="class_tree_1a23803bddf46ad28a1bdd46bf05693b1f" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>chooseRandomLineage</name></member>
      <member refid="class_tree_1a16eedb70009e7570d933f88e8ce44117" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>coalescenceEvent</name></member>
      <member refid="class_tree_1af5e636fe4eb845d4c7b1a8a15e837c82" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>coarsemapinput</name></member>
      <member refid="class_tree_1a24fb21a6a22d727acae9dd4cd946adb3" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>coarsemapscale</name></member>
      <member refid="class_tree_1a67cf6b6ce0b683ce4b6014bf1df575fe" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>coarsemapxoffset</name></member>
      <member refid="class_tree_1a857af46452e877120b61ce7d1a111b9b" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>coarsemapxsize</name></member>
      <member refid="class_tree_1a29b4b790dcb14d5306df0448a53ac2ee" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>coarsemapyoffset</name></member>
      <member refid="class_tree_1a5ac36f0d1a8b951dad10ca3de8334543" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>coarsemapysize</name></member>
      <member refid="class_tree_1a6af2aaa691ffbb9899e3f070a715e371" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>convertTip</name></member>
      <member refid="class_tree_1af49dbccf87142a9a2ba932cd7974246e" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>countCellExpansion</name></member>
      <member refid="class_tree_1a59b96b790945010fda9b907df51038be" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>data</name></member>
      <member refid="class_tree_1aae24ce11e30fbd74fe078b23b46c14cd" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>database</name></member>
      <member refid="class_tree_1a9fe104115b4593c772c03b57b82ff0de" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>deme</name></member>
      <member refid="class_tree_1ac7a1d0583d3dcb55c50fec0e1fd57985" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>deme_sample</name></member>
      <member refid="class_tree_1a2d6aec268fc1c842e0f94dfd8b7f97f8" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>desired_specnum</name></member>
      <member refid="class_tree_1a25f082da13789dfa3fefcbcfd08b4dfe" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>determineSpeciationRates</name></member>
      <member refid="class_tree_1ae9e9a7c06a049531e8a4dd1319cff1b8" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>dForestTransform</name></member>
      <member refid="class_tree_1afbf25a881b31ea6558bb9dc48c431a73" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>dispersal_coordinator</name></member>
      <member refid="class_tree_1af2532e98184a5b0ce0d289e4f264d98f" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>dispersal_relative_cost</name></member>
      <member refid="class_tree_1a893f37cf3b242be781aae29843a584ee" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>dPristine</name></member>
      <member refid="class_tree_1ab478831f09c135bc9a4bc991c9fd5076" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>endactive</name></member>
      <member refid="class_tree_1a50344999e6b64d15eef935b1f6023471" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>enddata</name></member>
      <member refid="class_tree_1a8f4c4cbc5ad516f0fde489c9a826e676" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>estSpecnum</name></member>
      <member refid="class_tree_1a1ea4b59664591f312014ba15773176f1" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>expandCell</name></member>
      <member refid="class_tree_1aea93074542f30a4a51c05140aae93708" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>expandMap</name></member>
      <member refid="class_tree_1a87e08c5f970f699a1d4c2a4abb00eb4e" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>finemapinput</name></member>
      <member refid="class_tree_1a266216111e7116fbaaa7fd10134a50c3" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>finemapxoffset</name></member>
      <member refid="class_tree_1a4790f4c0210c285b7728599ea2faa98f" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>finemapxsize</name></member>
      <member refid="class_tree_1a53790cb843a74543acc4bfd536f815e8" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>finemapyoffset</name></member>
      <member refid="class_tree_1a2424883553f76a36447fee4de06f779d" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>finemapysize</name></member>
      <member refid="class_tree_1af412a7888f61b9f9931e33485562aa03" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>forestmap</name></member>
      <member refid="class_tree_1a84cc46d51045ff3b161ee8788950e0c2" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>generation</name></member>
      <member refid="class_tree_1a839ff291e97962d1aaed4d785f394a89" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>getbPaused</name></member>
      <member refid="class_tree_1a0c5e746982a87f24c083f4534bf92b45" prot="public" virt="virtual"><scope>CoalescenceTree</scope><name>getProtractedGenerationMax</name></member>
      <member refid="class_tree_1a6ffc42e941f352cd74f01f6f7011f00b" prot="public" virt="virtual"><scope>CoalescenceTree</scope><name>getProtractedGenerationMin</name></member>
      <member refid="class_tree_1a34c0808026bf00546c8f9786376be730" prot="public" virt="virtual"><scope>CoalescenceTree</scope><name>getProtractedVariables</name></member>
      <member refid="class_tree_1a857521315ca6bd9b3300d099488d74f1" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>getSeed</name></member>
      <member refid="class_tree_1ac03c034a5730ee4f4d8727aace776412" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>getTemporalSampling</name></member>
      <member refid="class_tree_1a1962e04a61c54545862b47943a7cf576" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>grid</name></member>
      <member refid="class_tree_1af58ab9dcfed2cbfa93cf47c68c90e0c4" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>gridxsize</name></member>
      <member refid="class_tree_1a458b504f61e3c642ef5223048799b7ba" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>gridysize</name></member>
      <member refid="class_tree_1a8e60e04be160c2d7de0ab1c834e6a95b" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>importMaps</name></member>
      <member refid="class_tree_1a46fbbf6c52f7b2bfebb1ae0aac4df724" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>importSimulationVariables</name></member>
      <member refid="class_tree_1a8efc9557eb11e41dfdfd7c2c83682e06" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>importSimulationVariables</name></member>
      <member refid="class_tree_1af145148202f11654d6d6a15a6c021924" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>loadActiveSave</name></member>
      <member refid="class_tree_1af7db53d4870d845741d3159f57b73b30" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>loadDataSave</name></member>
      <member refid="class_tree_1a2834ef82f447ca95c48310538c4b56ed" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>loadGridSave</name></member>
      <member refid="class_tree_1af57075728924141c7b6d311822a22dc0" prot="public" virt="virtual"><scope>CoalescenceTree</scope><name>loadMainSave</name></member>
      <member refid="class_tree_1a1d8d885f6db073e2b2fe8f58023f764f" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>loadMapSave</name></member>
      <member refid="class_tree_1aada408975aa28b8992e98709d6c376fb" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>log_all</name></member>
      <member refid="class_tree_1a1ef4924887d8b9fdf3b45f35187d69d8" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>makeTip</name></member>
      <member refid="class_tree_1a0244ee15452c38393246147d93836b4d" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>maxsimsize</name></member>
      <member refid="class_tree_1a1868cf626a0b12f21a038989d4eca210" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>maxtime</name></member>
      <member refid="class_tree_1a5510d0fb5deb23fd39a2619d104f85fa" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>now</name></member>
      <member refid="class_tree_1aa7df162306777b040a9a2aac543e6801" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>NR</name></member>
      <member refid="class_tree_1a5ee1fa5adf72bb599badc041fbee7d09" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>out_finish</name></member>
      <member refid="class_tree_1afd585c8a4bdb86461780418f7b886abd" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>outdatabase</name></member>
      <member refid="class_tree_1a70b8a86ec0b71a04b4a26061bcaeb4a3" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>outdirectory</name></member>
      <member refid="class_tree_1afdf680e187c25ed39d1e66542ce44cc3" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>outputData</name></member>
      <member refid="class_tree_1a5acf7d0eea9ea2ef4928bb6691b87724" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>outputData</name></member>
      <member refid="class_tree_1a518a17560e8550c650f3a76718580ff5" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>parseArgs</name></member>
      <member refid="class_tree_1a504a4d7ae23146fd6236baa59da51a6e" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>pause_sim_directory</name></member>
      <member refid="class_tree_1aab9168e35202fe02d4ef82087530a3bf" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>pristinecoarsemapinput</name></member>
      <member refid="class_tree_1a3ef73c700c06c9ebab564cc9ec9fc4ab" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>pristinefinemapinput</name></member>
      <member refid="class_tree_1aa8bb5d93c7992404ede0a49bb69ccd1f" prot="public" virt="virtual"><scope>CoalescenceTree</scope><name>protractedVarsToString</name></member>
      <member refid="class_tree_1a27bd274fe727892c84d153d9bd5ddbf0" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>randomList</name></member>
      <member refid="class_tree_1a351650bda95319b2213c2234fa930f49" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>removeOldPos</name></member>
      <member refid="class_tree_1a7a85301c230febe654c002695828c9a9" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>rep_map</name></member>
      <member refid="class_tree_1a3820405a51ac9043346d37b0e267d364" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>runChecks</name></member>
      <member refid="class_tree_1afe75245862a1c40030c1c8607518cf8d" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>runSimulation</name></member>
      <member refid="class_tree_1a00a26fffe55a8399efff0ca3b42a46aa" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>samplegrid</name></member>
      <member refid="class_tree_1a78935befd45946b8e69023bffca59c1d" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>seeded</name></member>
      <member refid="class_tree_1a869ab0aba75336f737cbb137c74b8abc" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>setObjectSizes</name></member>
      <member refid="class_tree_1ac374d237b7e2e7e11f6a0ff395003635" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>setParameters</name></member>
      <member refid="class_tree_1a891764ffc1e29d3edbe0fd08e67a184b" prot="public" virt="virtual"><scope>CoalescenceTree</scope><name>setProtractedVariables</name></member>
      <member refid="class_tree_1ac545d844141db977920fc9fd76ce9dbb" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>setResumeParameters</name></member>
      <member refid="class_tree_1aeade4bccb8394937a53bc4fbcf2b4300" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>setResumeParameters</name></member>
      <member refid="class_tree_1a65f098693e08e33f039a8797ba57c3e0" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>setSeed</name></member>
      <member refid="class_tree_1a1ba0f5d27c6ef6e9e17f988aff2dfe65" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>setSimStartVariables</name></member>
      <member refid="class_tree_1aec10ea2b720edc13a38310afdfe2b6e4" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>setup</name></member>
      <member refid="class_tree_1ac31286aee0516ed9104aee4dde5a0651" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>setupDispersalCoordinator</name></member>
      <member refid="class_tree_1aa030e8074eb9d60b4a00321b3980352e" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>sigma</name></member>
      <member refid="class_tree_1a07f9982fd6f6243c78ef42371603bbe4" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>sim_complete</name></member>
      <member refid="class_tree_1a26100477c7e58a9e0a90cdee1379ed69" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>sim_end</name></member>
      <member refid="class_tree_1ac399ba59be9dc33a04223d10a82ee5ee" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>sim_finish</name></member>
      <member refid="class_tree_1a63c399793a209332ad0f5da7fc830d56" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>sim_parameters</name></member>
      <member refid="class_tree_1a01cc9b30f2b10b9f51b218df25b13b09" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>sim_start</name></member>
      <member refid="class_tree_1ae5308f74e982485ac444aa394b952152" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>simPause</name></member>
      <member refid="class_tree_1a3d614f3848dc7acab168642efe345569" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>simResume</name></member>
      <member refid="class_tree_1a2d2065bbebee8b55270d2691d40cd974" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>sortData</name></member>
      <member refid="class_tree_1a586678f7084086add3a4136476abd375" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>spec</name></member>
      <member refid="class_tree_1a05c9e44f1a4d7af83e65b6c4565b1b28" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>speciation</name></member>
      <member refid="class_tree_1a702ccb094de94922b77548d50f025c8f" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>speciation_rates</name></member>
      <member refid="class_tree_1ae784a6ed362f6c5263ee797759f715b6" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>sqlCreate</name></member>
      <member refid="class_tree_1ade2744c2510a6e8ae791ca7189f483bb" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>sqloutname</name></member>
      <member refid="class_tree_1a8cd3db7add1884ea53b0d98002d39cd3" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>sqlOutput</name></member>
      <member refid="class_tree_1ac077d686ee96b123aa779e8a8a5de3ce" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>start</name></member>
      <member refid="class_tree_1a3f1a90ab7ef917a996790e5ddfcebf85" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>startendactive</name></member>
      <member refid="class_tree_1ae7d33b8c16eeb8cb0c7f96dbfbc61b4e" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>steps</name></member>
      <member refid="class_tree_1afd6bd75c301d2f57c4997fcfc92f192e" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>stopSimulation</name></member>
      <member refid="class_tree_1a89e2fa28e3d637b4bc034fb3afc53e81" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>switchPositions</name></member>
      <member refid="class_tree_1a35a960e7950aa879f06e456651b44999" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>tau</name></member>
      <member refid="class_tree_1acf483ed0a44629c9aa4690a08017ee35" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>the_seed</name></member>
      <member refid="class_tree_1a9f74137d5c9c5529ec9a06f88dfa6960" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>the_task</name></member>
      <member refid="class_tree_1af7de4d4f04360edcbe2a20db882b1f87" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>this_step</name></member>
      <member refid="class_tree_1abd18bb487c0192588b6bed6f00bcfd07" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>time_taken</name></member>
      <member refid="class_tree_1a53cf3dfb83813f6148f44e767b2f627d" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>tl</name></member>
      <member refid="class_tree_1ad376a7c639d857312f5de2ef47482f68" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>CoalescenceTree</name></member>
      <member refid="class_tree_1a4918f354073488d7ace09fd80cd8991c" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>validateLineages</name></member>
      <member refid="class_tree_1aa60dbbf173231fb224e2c6792cbae292" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>validationCheck</name></member>
      <member refid="class_tree_1a96f63bbb23ebc547d2b91c30e4ce1f57" prot="protected" virt="non-virtual"><scope>CoalescenceTree</scope><name>varimport</name></member>
      <member refid="class_tree_1ae07582bb85bff9bbb3f204c1066df9cc" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>verifyReproductionMap</name></member>
      <member refid="class_tree_1a95360a2f62ef0eb436d586552b299e1f" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>writeSimStartToConsole</name></member>
      <member refid="class_tree_1ab8785fc9e27868a56335048321c13290" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>writeTimes</name></member>
      <member refid="class_tree_1abdc38545cf3f588725b5d8b8075b3866" prot="public" virt="non-virtual"><scope>CoalescenceTree</scope><name>~CoalescenceTree</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
