<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_map_8h" kind="file" language="C++">
    <compoundname>Map.h</compoundname>
    <includes local="no">string</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">vector</includes>
    <includes local="no">iostream</includes>
    <includes local="no">fstream</includes>
    <includes local="no">math.h</includes>
    <includes local="no">stdexcept</includes>
    <includes refid="_config_file_parser_8h" local="yes">ConfigFileParser.h</includes>
    <includes local="no">boost/filesystem.hpp</includes>
    <includes refid="_matrix_8h" local="yes">Matrix.h</includes>
    <includes refid="_logging_8h" local="yes">Logging.h</includes>
    <includes refid="_datamask_8h" local="yes">Datamask.h</includes>
    <includes refid="_sim_parameters_8h" local="yes">SimParameters.h</includes>
    <includedby refid="_tree_8h" local="yes">CoalescenceTree.h</includedby>
    <includedby refid="_dispersal_coordinator_8h" local="yes">DispersalCoordinator.h</includedby>
    <includedby refid="_map_8cpp" local="yes">Map.cpp</includedby>
    <incdepgraph>
      <node id="1731">
        <label>assert.h</label>
      </node>
      <node id="1729">
        <label>Matrix.h</label>
        <link refid="_matrix_8h"/>
        <childnode refid="1713" relation="include">
        </childnode>
        <childnode refid="1715" relation="include">
        </childnode>
        <childnode refid="1720" relation="include">
        </childnode>
        <childnode refid="1716" relation="include">
        </childnode>
        <childnode refid="1730" relation="include">
        </childnode>
        <childnode refid="1721" relation="include">
        </childnode>
        <childnode refid="1718" relation="include">
        </childnode>
        <childnode refid="1731" relation="include">
        </childnode>
        <childnode refid="1732" relation="include">
        </childnode>
        <childnode refid="1727" relation="include">
        </childnode>
      </node>
      <node id="1732">
        <label>stdint.h</label>
      </node>
      <node id="1726">
        <label>CustomExceptions.h</label>
        <link refid="_custom_exceptions_8h"/>
        <childnode refid="1718" relation="include">
        </childnode>
      </node>
      <node id="1723">
        <label>cmath</label>
      </node>
      <node id="1718">
        <label>stdexcept</label>
      </node>
      <node id="1734">
        <label>SimParameters.h</label>
        <link refid="_sim_parameters_8h_source"/>
        <childnode refid="1712" relation="include">
        </childnode>
        <childnode refid="1714" relation="include">
        </childnode>
        <childnode refid="1719" relation="include">
        </childnode>
      </node>
      <node id="1712">
        <label>string</label>
      </node>
      <node id="1727">
        <label>Logging.h</label>
        <link refid="_logging_8h"/>
        <childnode refid="1712" relation="include">
        </childnode>
        <childnode refid="1715" relation="include">
        </childnode>
        <childnode refid="1713" relation="include">
        </childnode>
        <childnode refid="1718" relation="include">
        </childnode>
      </node>
      <node id="1711">
        <label>Map.h</label>
        <link refid="Map.h"/>
        <childnode refid="1712" relation="include">
        </childnode>
        <childnode refid="1713" relation="include">
        </childnode>
        <childnode refid="1714" relation="include">
        </childnode>
        <childnode refid="1715" relation="include">
        </childnode>
        <childnode refid="1716" relation="include">
        </childnode>
        <childnode refid="1717" relation="include">
        </childnode>
        <childnode refid="1718" relation="include">
        </childnode>
        <childnode refid="1719" relation="include">
        </childnode>
        <childnode refid="1728" relation="include">
        </childnode>
        <childnode refid="1729" relation="include">
        </childnode>
        <childnode refid="1727" relation="include">
        </childnode>
        <childnode refid="1733" relation="include">
        </childnode>
        <childnode refid="1734" relation="include">
        </childnode>
      </node>
      <node id="1716">
        <label>fstream</label>
      </node>
      <node id="1719">
        <label>ConfigFileParser.h</label>
        <link refid="_config_file_parser_8h_source"/>
        <childnode refid="1712" relation="include">
        </childnode>
        <childnode refid="1715" relation="include">
        </childnode>
        <childnode refid="1720" relation="include">
        </childnode>
        <childnode refid="1716" relation="include">
        </childnode>
        <childnode refid="1718" relation="include">
        </childnode>
        <childnode refid="1714" relation="include">
        </childnode>
        <childnode refid="1721" relation="include">
        </childnode>
        <childnode refid="1722" relation="include">
        </childnode>
        <childnode refid="1723" relation="include">
        </childnode>
        <childnode refid="1724" relation="include">
        </childnode>
        <childnode refid="1725" relation="include">
        </childnode>
        <childnode refid="1726" relation="include">
        </childnode>
        <childnode refid="1727" relation="include">
        </childnode>
      </node>
      <node id="1722">
        <label>unistd.h</label>
      </node>
      <node id="1714">
        <label>vector</label>
      </node>
      <node id="1728">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="1720">
        <label>sstream</label>
      </node>
      <node id="1717">
        <label>math.h</label>
      </node>
      <node id="1730">
        <label>cstdlib</label>
      </node>
      <node id="1724">
        <label>cctype</label>
      </node>
      <node id="1715">
        <label>iostream</label>
      </node>
      <node id="1733">
        <label>Datamask.h</label>
        <link refid="_datamask_8h_source"/>
        <childnode refid="1712" relation="include">
        </childnode>
        <childnode refid="1729" relation="include">
        </childnode>
        <childnode refid="1734" relation="include">
        </childnode>
        <childnode refid="1727" relation="include">
        </childnode>
      </node>
      <node id="1725">
        <label>algorithm</label>
      </node>
      <node id="1713">
        <label>stdio.h</label>
      </node>
      <node id="1721">
        <label>cstring</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1748">
        <label>CoalescenceTree.cpp</label>
        <link refid="_tree_8cpp"/>
      </node>
      <node id="1745">
        <label>Setup.cpp</label>
        <link refid="_setup_8cpp"/>
      </node>
      <node id="1741">
        <label>SpeciationCounter.cpp</label>
        <link refid="_speciation_counter_8cpp"/>
      </node>
      <node id="1740">
        <label>applyspecmodule.cpp</label>
        <link refid="applyspecmodule_8cpp"/>
      </node>
      <node id="1736">
        <label>CoalescenceTree.h</label>
        <link refid="_tree_8h"/>
        <childnode refid="1737" relation="include">
        </childnode>
        <childnode refid="1744" relation="include">
        </childnode>
        <childnode refid="1746" relation="include">
        </childnode>
        <childnode refid="1748" relation="include">
        </childnode>
      </node>
      <node id="1735">
        <label>Map.h</label>
        <link refid="Map.h"/>
        <childnode refid="1736" relation="include">
        </childnode>
        <childnode refid="1749" relation="include">
        </childnode>
        <childnode refid="1743" relation="include">
        </childnode>
      </node>
      <node id="1737">
        <label>Setup.h</label>
        <link refid="_setup_8h"/>
        <childnode refid="1738" relation="include">
        </childnode>
        <childnode refid="1736" relation="include">
        </childnode>
        <childnode refid="1742" relation="include">
        </childnode>
        <childnode refid="1743" relation="include">
        </childnode>
        <childnode refid="1744" relation="include">
        </childnode>
        <childnode refid="1745" relation="include">
        </childnode>
      </node>
      <node id="1750">
        <label>DispersalCoordinator.cpp</label>
        <link refid="_dispersal_coordinator_8cpp"/>
      </node>
      <node id="1742">
        <label>main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="1746">
        <label>ProtractedTree.h</label>
        <link refid="_protracted_tree_8h"/>
        <childnode refid="1744" relation="include">
        </childnode>
        <childnode refid="1747" relation="include">
        </childnode>
      </node>
      <node id="1744">
        <label>necsimmodule.cpp</label>
        <link refid="necsimmodule_8cpp"/>
      </node>
      <node id="1749">
        <label>DispersalCoordinator.h</label>
        <link refid="_dispersal_coordinator_8h"/>
        <childnode refid="1736" relation="include">
        </childnode>
        <childnode refid="1750" relation="include">
        </childnode>
      </node>
      <node id="1743">
        <label>Map.cpp</label>
        <link refid="_map_8cpp"/>
      </node>
      <node id="1738">
        <label>ApplySpec.h</label>
        <link refid="_apply_spec_8h_source"/>
        <childnode refid="1739" relation="include">
        </childnode>
        <childnode refid="1741" relation="include">
        </childnode>
      </node>
      <node id="1739">
        <label>applyspecmodule.h</label>
        <link refid="applyspecmodule_8h"/>
        <childnode refid="1740" relation="include">
        </childnode>
      </node>
      <node id="1747">
        <label>ProtractedTree.cpp</label>
        <link refid="_protracted_tree_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_map" prot="public">Map</innerclass>
    <briefdescription>
<para>Contains the <ref refid="class_map" kindref="compound">Map</ref> object for easy referencing of the respective coarse and fine map within the same coordinate system. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Samuel Thompson </para></simplesect>
<simplesect kind="date"><para>31/08/16</para></simplesect>
<simplesect kind="version"><para>1.3 </para></simplesect>
<simplesect kind="copyright"><para><ulink url="https://opensource.org/licenses/BSD-3-Clause">BSD-3 Licence.</ulink> </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>NECSim<sp/>project<sp/>which<sp/>is<sp/>released<sp/>under<sp/>BSD-3<sp/>license.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//See<sp/>file<sp/>**LICENSE.txt**<sp/>or<sp/>visit<sp/>https://opensource.org/licenses/BSD-3-Clause)<sp/>for<sp/>full<sp/>license<sp/>details</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight><highlight class="preprocessor">#ifndef<sp/>MAP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&quot;ConfigFileParser.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;boost/filesystem.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_matrix_8h" kindref="compound">Matrix.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_logging_8h" kindref="compound">Logging.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&quot;Datamask.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SimParameters.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&lt;Setup.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>include<sp/>&quot;Fattaildeviate.cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/************************************************************</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MAP<sp/>OBJECT</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>************************************************************/</highlight></codeline>
<codeline lineno="43"><highlight class="comment">//<sp/>Object<sp/>containing<sp/>both<sp/>the<sp/>maps<sp/>(the<sp/>coarse<sp/>and<sp/>fine<sp/>version)<sp/>and<sp/>routines<sp/>for<sp/>easy<sp/>setting<sp/>up<sp/>and<sp/>switching<sp/>between<sp/>the<sp/>different<sp/>coordinate<sp/>systems.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="class_map" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_map" kindref="compound">Map</ref></highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>map<sp/>files<sp/>which<sp/>are<sp/>read<sp/>in<sp/>(or<sp/>generated<sp/>if<sp/>running<sp/>with<sp/>&quot;null&quot;<sp/>as<sp/>the<sp/>map<sp/>file&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pristine<sp/>maps<sp/>are<sp/>meant<sp/>for<sp/>before<sp/>any<sp/>deforestation<sp/>occured,<sp/>whereas<sp/>the<sp/>other<sp/>maps<sp/>are<sp/>intended<sp/>for<sp/>modern<sp/>day<sp/>maps.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>linear<sp/>transformation<sp/>from<sp/>modern<sp/>to<sp/>pristine<sp/>maps<sp/>is<sp/>used,<sp/>approaching<sp/>the<sp/>dForestTransform<sp/>variable<sp/>times<sp/>the<sp/>difference<sp/>between<sp/>the<sp/>pristine<sp/>and<sp/>modern<sp/>maps.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Once<sp/>the<sp/>dPristine<sp/>number<sp/>of<sp/>generations<sp/>has<sp/>been<sp/>reached,<sp/>the<sp/>map<sp/>will<sp/>jump<sp/>to<sp/>the<sp/>pristine<sp/>condition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_matrix" kindref="compound">Matrix&lt;uint32_t&gt;</ref><sp/>fine_map;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>finer<sp/>grid<sp/>for<sp/>the<sp/>area<sp/>around<sp/>the<sp/>sample<sp/>area.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_matrix" kindref="compound">Matrix&lt;uint32_t&gt;</ref><sp/>pristine_fine_map;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>pristine<sp/>finer<sp/>map.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_matrix" kindref="compound">Matrix&lt;uint32_t&gt;</ref><sp/>coarse_map;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>coarser<sp/>grid<sp/>for<sp/>the<sp/>wider<sp/>zone.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_matrix" kindref="compound">Matrix&lt;uint32_t&gt;</ref><sp/>pristine_coarse_map;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>pristine<sp/>coarser<sp/>map.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sim_parameters" kindref="compound">SimParameters</ref><sp/>mapvars;<sp/></highlight><highlight class="comment">//<sp/>for<sp/>importing<sp/>and<sp/>storing<sp/>the<sp/>simulation<sp/>set-up<sp/>options.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>finexmin,<sp/>fineymin,<sp/>coarsexmin,<sp/>coarseymin;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>minimum<sp/>values<sp/>for<sp/>each<sp/>dimension<sp/>for<sp/>offsetting.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>finexmax,<sp/>fineymax,<sp/>coarsexmax,<sp/>coarseymax;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>maximum<sp/>values<sp/>for<sp/>each<sp/>dimension<sp/>for<sp/>offsetting.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>finexoffset,<sp/>fineyoffset,<sp/>coarsexoffset,<sp/>coarseyoffset;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>offsetting<sp/>of<sp/>the<sp/>map<sp/>in<sp/>FINE<sp/>map<sp/>units.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>scale;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>scale<sp/>of<sp/>the<sp/>coarse<sp/>map<sp/>compared<sp/>with<sp/>the<sp/>smaller<sp/>map.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>xdim;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>length<sp/>of<sp/>the<sp/>grid<sp/>where<sp/>the<sp/>species<sp/>start.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ydim;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>height<sp/>of<sp/>the<sp/>grid<sp/>where<sp/>the<sp/>species<sp/>start.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>deme;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>checksetdim;<sp/></highlight><highlight class="comment">//<sp/>for<sp/>checking<sp/>that<sp/>the<sp/>dimensions<sp/>have<sp/>been<sp/>set<sp/>before<sp/>attempting<sp/>to<sp/>import<sp/>the<sp/>maps.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dispersal_relative_cost;<sp/></highlight><highlight class="comment">//<sp/>for<sp/>setting<sp/>the<sp/>movement<sp/>cost<sp/>through<sp/>forest.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dUpdateTime;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>last<sp/>time<sp/>the<sp/>map<sp/>was<sp/>updated,<sp/>in<sp/>generations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dForestTransform;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>rate<sp/>at<sp/>which<sp/>the<sp/>forest<sp/>transforms<sp/>from<sp/>the<sp/>modern<sp/>forest<sp/>map<sp/>to<sp/>the<sp/>pristine<sp/>forest<sp/>map.<sp/>A<sp/>value<sp/>of<sp/>1<sp/>will<sp/>give<sp/>a<sp/>smooth<sp/>curve<sp/>from<sp/>the<sp/>present<sp/>day<sp/>to<sp/>pristine<sp/>forest.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dPristine;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>number<sp/>of<sp/>generations<sp/>at<sp/>which<sp/>point<sp/>the<sp/>forest<sp/>becomes<sp/>entirely<sp/>pristine.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dCurrent;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>time<sp/>the<sp/>current<sp/>map<sp/>was<sp/>updated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bPristine;<sp/></highlight><highlight class="comment">//<sp/>checks<sp/>whether<sp/>the<sp/>simulation<sp/>has<sp/>already<sp/>been<sp/>set<sp/>to<sp/>the<sp/>pristine<sp/>state.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasPristine;<sp/></highlight><highlight class="comment">//<sp/>flag<sp/>of<sp/>whether<sp/>the<sp/>simulation<sp/>has<sp/>a<sp/>pristine<sp/>state<sp/>or<sp/>not.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>iForestMax;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>maximum<sp/>value<sp/>for<sp/>forest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>iFineForestMax;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>maximum<sp/>value<sp/>on<sp/>the<sp/>fine<sp/>map<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>iCoarseForestMax;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>maximum<sp/>value<sp/>on<sp/>the<sp/>coarse<sp/>map<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>iPristineFineForestMax;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>maximum<sp/>value<sp/>on<sp/>the<sp/>pristine<sp/>fine<sp/>map<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>iPristineCoarseForestMax;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>maximum<sp/>value<sp/>on<sp/>the<sp/>pristine<sp/>coarse<sp/>map<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>landscape_type;<sp/></highlight><highlight class="comment">//<sp/>if<sp/>true,<sp/>dispersal<sp/>is<sp/>possible<sp/>from<sp/>anywhere,<sp/>only<sp/>the<sp/>fine<sp/>map<sp/>spatial<sp/>structure<sp/>is<sp/>preserved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>NextMap;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bCoarse;<sp/></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>is<sp/>false,<sp/>there<sp/>is<sp/>no<sp/>coarse<sp/>map<sp/>defined,<sp/>so<sp/>ignore<sp/>the<sp/>boundaries.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nUpdate;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>number<sp/>of<sp/>updates<sp/>to<sp/>have<sp/>occured.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Typedef<sp/>for<sp/>single<sp/>application<sp/>of<sp/>the<sp/>infinite<sp/>landscape<sp/>verses<sp/>bounded<sp/>landscape.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>long<sp/>(<ref refid="class_map" kindref="compound">Map</ref>::*fptr)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>&amp;xwrap,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>&amp;ywrap,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;dCurrentGen);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>fptr<sp/>getValFunc;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="90" refid="class_map_1a0f5ad0fd4563497b4214038cbca8b582" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_map_1a0f5ad0fd4563497b4214038cbca8b582" kindref="member">Map</ref>()</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>checksetdim<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>sets<sp/>the<sp/>check<sp/>to<sp/>false.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bPristine<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dCurrent<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iForestMax<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getValFunc<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bCoarse<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasPristine<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>landscape_type<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;closed&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iFineForestMax<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iCoarseForestMax<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iPristineFineForestMax<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iPristineCoarseForestMax<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="class_map_1ad426134803fb70813613e5bd34908811" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="class_map_1ad426134803fb70813613e5bd34908811" kindref="member">printForestMax</ref>()</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;max,<sp/>fine,<sp/>coarse,<sp/>pfine,<sp/>pcoarse:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>iForestMax<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>iFineForestMax;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ss<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>iCoarseForestMax<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>iPristineFineForestMax<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>iPristineCoarseForestMax<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ss.str();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>getForestMax();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setDims(<ref refid="struct_sim_parameters" kindref="compound">SimParameters</ref><sp/>mapvarsin);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>checkMapExists();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/********************************************</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>CALC<sp/>MAP<sp/>FUNCTIONS</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>********************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>calcFineMap();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>calcPristineFineMap();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>calcCoarseMap();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>calcPristineCoarseMap();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Map<sp/>setters</highlight></codeline>
<codeline lineno="171"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTimeVars(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dPristinein,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dForestTransformin);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>calcOffset();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/********************************************</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>VALIDATE<sp/>MAPS</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>********************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>validateMaps();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/********************************************</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>CHANGE<sp/>MAP<sp/>FUNCTIONS</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>********************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateMap(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>generation);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="class_map_1a7c4ca1306850126bf6c040f1c0cc0754" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_map_1a7c4ca1306850126bf6c040f1c0cc0754" kindref="member">isPristine</ref>()</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hasPristine)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bPristine;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="class_map_1aff6628e343532689d5bdcee2433ac041" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_map_1aff6628e343532689d5bdcee2433ac041" kindref="member">setPristine</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;bPristinein)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bPristine<sp/>=<sp/>bPristinein;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="226" refid="class_map_1a56f158adbe67d3eea95e2537493851f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_map_1a56f158adbe67d3eea95e2537493851f1" kindref="member">getPristine</ref>()</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dPristine;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>getLandscapeType()</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>landscape_type;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="class_map_1af7067d6d076eb10b735dc08750dbf924" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_map_1af7067d6d076eb10b735dc08750dbf924" kindref="member">checkPristine</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>generation)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hasPristine)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(generation<sp/>&gt;=<sp/>dPristine)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bPristine<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/********************************************</highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>GET<sp/>VAL<sp/>FUNCTIONS</highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>********************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Function<sp/>for<sp/>getting<sp/>the<sp/>val<sp/>at<sp/>a<sp/>particular<sp/>coordinate<sp/>from<sp/>either<sp/>the<sp/>coarse<sp/>or<sp/>fine<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>altered<sp/>to<sp/>use<sp/>the<sp/>current<sp/>generation<sp/>as<sp/>well<sp/>to<sp/>determine<sp/>the<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setLandscape(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>is_infinite);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>getVal(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>&amp;xwrap,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>&amp;ywrap,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;dCurrentGen);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>getValCoarse(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;xval,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;yval,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;dCurrentGen);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>getValFine(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;xval,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;yval,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;dCurrentGen);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>getValFinite(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>&amp;xwrap,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>&amp;ywrap,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;dCurrentGen);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>getValInfinite(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>&amp;xwrap,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>&amp;ywrap,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;dCurrentGen);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>getValCoarseTiled(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>&amp;xwrap,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>&amp;ywrap,</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;dCurrentGen);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>getValFineTiled(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>&amp;xwrap,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>&amp;ywrap,</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;dCurrentGen);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>convertSampleXToFineX(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>&amp;x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>&amp;xwrap);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>convertSampleYToFineY(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>&amp;y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>&amp;ywrap);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>convertFineToSample(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>&amp;x,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>&amp;xwrap,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>&amp;y,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>&amp;ywrap);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>getInitialCount(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dSample,<sp/><ref refid="class_datamask" kindref="compound">Datamask</ref><sp/>&amp;samplemask);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sim_parameters" kindref="compound">SimParameters</ref><sp/>getSimParameters();</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/********************************************</highlight></codeline>
<codeline lineno="409"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>CHECK<sp/>MAP<sp/>FUNCTIONS</highlight></codeline>
<codeline lineno="410"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>********************************************/</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>checkMap(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>&amp;xwrap,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>&amp;ywrap,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>generation);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>checkFine(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>&amp;xwrap,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>&amp;ywrap);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>convertCoordinates(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;y,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>&amp;xwrap,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>&amp;ywrap);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/********************************************</highlight></codeline>
<codeline lineno="444"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>MAIN<sp/>DISPERSAL<sp/>FUNCTION</highlight></codeline>
<codeline lineno="445"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>********************************************/</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>runDispersal(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;dist,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;angle,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>&amp;startx,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>&amp;starty,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>&amp;startxwrap,</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>&amp;startywrap,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>&amp;disp_comp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;generation);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="470" refid="class_map_1a0da37af2cd547fa045e06a2da3c1039f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>ostream<sp/>&amp;<ref refid="class_map_1a0da37af2cd547fa045e06a2da3c1039f" kindref="member">operator&lt;&lt;</ref>(ostream<sp/>&amp;os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_map" kindref="compound">Map</ref><sp/>&amp;r)</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>r.mapvars<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>r.finexmin<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>r.finexmax<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>r.coarsexmin<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>r.coarsexmax;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>r.fineymin<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>r.fineymax<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>r.coarseymin<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>r.coarseymax<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>r.finexoffset<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>r.fineyoffset<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>r.coarsexoffset<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>r.coarseyoffset<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>r.scale<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>r.xdim<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>r.ydim<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>r.deme<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>r.checksetdim<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>r.dispersal_relative_cost<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>r.dUpdateTime<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>r.dForestTransform<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>r.dPristine<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>r.dCurrent<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>r.bPristine<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>r.NextMap<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>r.nUpdate<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>r.landscape_type<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>r.iFineForestMax<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>r.iCoarseForestMax<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>r.iPristineFineForestMax<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>r.iPristineCoarseForestMax<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>r.iForestMax<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>r.bCoarse<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>r.hasPristine<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="493" refid="class_map_1a480da4c3f474c0af7eacdde650546dc1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>istream<sp/>&amp;<ref refid="class_map_1a480da4c3f474c0af7eacdde650546dc1" kindref="member">operator&gt;&gt;</ref>(istream<sp/>&amp;is,<sp/><ref refid="class_map" kindref="compound">Map</ref><sp/>&amp;r)</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//double<sp/>temp1,temp2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//is<sp/>&lt;&lt;<sp/>m.numRows&lt;&lt;&quot;<sp/>,<sp/>&quot;&lt;&lt;m.numCols&lt;&lt;&quot;<sp/>,<sp/>&quot;&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>&gt;&gt;<sp/>r.mapvars<sp/>&gt;&gt;<sp/>r.finexmin;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>&gt;&gt;<sp/>r.finexmax<sp/>&gt;&gt;<sp/>r.coarsexmin;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>&gt;&gt;<sp/>r.coarsexmax<sp/>&gt;&gt;<sp/>r.fineymin<sp/>&gt;&gt;<sp/>r.fineymax;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>&gt;&gt;<sp/>r.coarseymin<sp/>&gt;&gt;<sp/>r.coarseymax;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>&gt;&gt;<sp/>r.finexoffset<sp/>&gt;&gt;<sp/>r.fineyoffset<sp/>&gt;&gt;<sp/>r.coarsexoffset<sp/>&gt;&gt;<sp/>r.coarseyoffset<sp/>&gt;&gt;<sp/>r.scale<sp/>&gt;&gt;<sp/>r.xdim<sp/>&gt;&gt;<sp/>r.ydim</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>r.deme<sp/>&gt;&gt;<sp/>r.checksetdim<sp/>&gt;&gt;<sp/>r.dispersal_relative_cost;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>&gt;&gt;<sp/>r.dUpdateTime<sp/>&gt;&gt;<sp/>r.dForestTransform<sp/>&gt;&gt;<sp/>r.dPristine<sp/>&gt;&gt;<sp/>r.dCurrent<sp/>&gt;&gt;<sp/>r.bPristine;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getline(is,<sp/>r.NextMap);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>&gt;&gt;<sp/>r.nUpdate;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>&gt;&gt;<sp/>r.landscape_type;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>&gt;&gt;<sp/>r.iFineForestMax<sp/>&gt;&gt;<sp/>r.iCoarseForestMax;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>&gt;&gt;<sp/>r.iPristineFineForestMax<sp/>&gt;&gt;<sp/>r.iPristineCoarseForestMax;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>&gt;&gt;<sp/>r.iForestMax<sp/>&gt;&gt;<sp/>r.bCoarse<sp/>&gt;&gt;<sp/>r.hasPristine;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>r.mapvars.setPristine(r.nUpdate);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="class_map_1acaff6d6881f7547b824cb1a9086f8094" kindref="member">setLandscape</ref>(r.mapvars.landscape_type);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="class_map_1ab3c9e77675ad9ca1d34e9ff8e861901d" kindref="member">calcFineMap</ref>();</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="class_map_1ac0b46ec7e4792d6ad3d7bdcf358ecabf" kindref="member">calcCoarseMap</ref>();</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="class_map_1ab1d1bac59d3e1518deaa2ebc561a7f82" kindref="member">calcPristineFineMap</ref>();</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="class_map_1a4efc51f5d4e2bb562cf4126a7f291f33" kindref="member">calcPristineCoarseMap</ref>();</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.<ref refid="class_map_1ae29adceaa1b65850566286d61c73133b" kindref="member">recalculateForestMax</ref>();</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>printVars();</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clearMap();</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>recalculateForestMax();</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal">};</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="539"><highlight class="preprocessor"><sp/></highlight></codeline>
    </programlisting>
    <location file="Map.h"/>
  </compounddef>
</doxygen>
