<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_treenode" kind="class" language="C++" prot="public">
    <compoundname>Treenode</compoundname>
    <includes refid="_treenode_8h" local="no">Treenode.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_treenode_1a61691779a8f157581354fed8f653cec7" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Treenode::tip</definition>
        <argsstring></argsstring>
        <name>tip</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Treenode.h" line="38" column="1" bodyfile="Treenode.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_treenode_1aa2418048ef25c8fc749edfb092287b04" prot="private" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long Treenode::parent</definition>
        <argsstring></argsstring>
        <name>parent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Treenode.h" line="42" column="1" bodyfile="Treenode.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_treenode_1a87dbf733ca6aef2ace2811e9147ce6c9" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Treenode::speciated</definition>
        <argsstring></argsstring>
        <name>speciated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Treenode.h" line="46" column="1" bodyfile="Treenode.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_treenode_1ab72136c0f617c2450b102a7b1dc18630" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Treenode::does_exist</definition>
        <argsstring></argsstring>
        <name>does_exist</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Treenode.h" line="51" column="1" bodyfile="Treenode.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_treenode_1ad5cb8203c155d0460bab8ef1a9d0692e" prot="private" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long Treenode::species_id</definition>
        <argsstring></argsstring>
        <name>species_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Treenode.h" line="54" column="1" bodyfile="Treenode.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_treenode_1ad48e58f65fe6d3fdbc3119c8e561ad10" prot="private" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long Treenode::xpos</definition>
        <argsstring></argsstring>
        <name>xpos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Treenode.h" line="57" column="1" bodyfile="Treenode.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_treenode_1a65792a257086287f0b63ad0a47689a6e" prot="private" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long Treenode::ypos</definition>
        <argsstring></argsstring>
        <name>ypos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Treenode.h" line="59" column="1" bodyfile="Treenode.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_treenode_1abd04710f858a9b9e9eb52ea0ad27375b" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long Treenode::xwrap</definition>
        <argsstring></argsstring>
        <name>xwrap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Treenode.h" line="61" column="1" bodyfile="Treenode.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_treenode_1ae3dc9ef5ab7ac7a2615691022a09d7e4" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long Treenode::ywrap</definition>
        <argsstring></argsstring>
        <name>ywrap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Treenode.h" line="63" column="1" bodyfile="Treenode.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_treenode_1aa0281dd1e43ace88c040109843f82005" prot="private" static="no" mutable="no">
        <type>long double</type>
        <definition>long double Treenode::dSpec</definition>
        <argsstring></argsstring>
        <name>dSpec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Treenode.h" line="66" column="1" bodyfile="Treenode.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_treenode_1aa4016ce31c914d6a904af96fa2033a29" prot="private" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long Treenode::iGen</definition>
        <argsstring></argsstring>
        <name>iGen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Treenode.h" line="68" column="1" bodyfile="Treenode.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_treenode_1a490db2f7ab550e6f24f48a9c2d31fe55" prot="private" static="no" mutable="no">
        <type>long double</type>
        <definition>long double Treenode::generation_added</definition>
        <argsstring></argsstring>
        <name>generation_added</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Treenode.h" line="69" column="1" bodyfile="Treenode.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_treenode_1a443ef4898396930c793f1c46c4a0bcc8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Treenode::Treenode</definition>
        <argsstring>()</argsstring>
        <name>Treenode</name>
        <briefdescription>
<para>The default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Treenode.h" line="74" column="1" bodyfile="Treenode.h" bodystart="74" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_treenode_1a38da815205bca569e258c86f2c8324f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Treenode::~Treenode</definition>
        <argsstring>()=default</argsstring>
        <name>~Treenode</name>
        <briefdescription>
<para>The default destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Treenode.h" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_treenode_1a3664bad0e23571689662ca26aad97f62" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Treenode::setup</definition>
        <argsstring>(bool z, unsigned long xp, unsigned long yp, long xi, long yi)</argsstring>
        <name>setup</name>
        <param>
          <type>bool</type>
          <declname>z</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>xp</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>yp</declname>
        </param>
        <param>
          <type>long</type>
          <declname>xi</declname>
        </param>
        <param>
          <type>long</type>
          <declname>yi</declname>
        </param>
        <briefdescription>
<para>Sets up variables with initial conditions. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>whether this lineage is a tip or not (represents the end of a tree). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xp</parametername>
</parameternamelist>
<parameterdescription>
<para>the x position on the grid. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yp</parametername>
</parameternamelist>
<parameterdescription>
<para>the y position on the grid. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xi</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of wraps in the x dimension. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yi</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of wraps in the y dimension. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Treenode.h" line="93" column="1" bodyfile="Treenode.h" bodystart="93" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="class_treenode_1ab915e141f3dfca9f32e9144dbe2d9915" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Treenode::setup</definition>
        <argsstring>(bool z, long xp, long yp, long xi, long yi, long double generation)</argsstring>
        <name>setup</name>
        <param>
          <type>bool</type>
          <declname>z</declname>
        </param>
        <param>
          <type>long</type>
          <declname>xp</declname>
        </param>
        <param>
          <type>long</type>
          <declname>yp</declname>
        </param>
        <param>
          <type>long</type>
          <declname>xi</declname>
        </param>
        <param>
          <type>long</type>
          <declname>yi</declname>
        </param>
        <param>
          <type>long double</type>
          <declname>generation</declname>
        </param>
        <briefdescription>
<para>Overloaded <ref refid="class_treenode_1a3664bad0e23571689662ca26aad97f62" kindref="member">setup()</ref> function, additionally taking a generation time point. </para>        </briefdescription>
        <detaileddescription>
<para>Used when creating lineages after the start of the simulation, when the generation is not 0. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>whether this lineage is a tip or not (represents the end of a tree). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xp</parametername>
</parameternamelist>
<parameterdescription>
<para>the x position on the grid. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yp</parametername>
</parameternamelist>
<parameterdescription>
<para>the y position on the grid. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xi</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of wraps in the x dimension. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yi</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of wraps in the y dimension. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>generation</parametername>
</parameternamelist>
<parameterdescription>
<para>the current generation at creation time. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Treenode.h" line="121" column="1" bodyfile="Treenode.h" bodystart="121" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="class_treenode_1a09f4c23f8182919fbe5ba4441c6f9789" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Treenode::setExistance</definition>
        <argsstring>(bool b)</argsstring>
        <name>setExistance</name>
        <param>
          <type>bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Setter for the existance of the lineage. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>existance boolean. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Treenode.h" line="142" column="1" bodyfile="Treenode.h" bodystart="142" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="class_treenode_1a4aceb22d86000b58f10039b7fd396aa6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Treenode::setParent</definition>
        <argsstring>(unsigned long x)</argsstring>
        <name>setParent</name>
        <param>
          <type>unsigned long</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Setter for the parent reference. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>a reference for the parent location. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Treenode.h" line="151" column="1" bodyfile="Treenode.h" bodystart="151" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="class_treenode_1a9f67cecf8724424486f08b31080a3f21" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Treenode::qReset</definition>
        <argsstring>()</argsstring>
        <name>qReset</name>
        <briefdescription>
<para>Resets the lineage. Remove any species ID, existance and speciation record. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Treenode.h" line="160" column="1" bodyfile="Treenode.h" bodystart="160" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="class_treenode_1a6cdacbd3e26bd70dfb0c974b52456970" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Treenode::setPosition</definition>
        <argsstring>(long x, long y, long xw, long yw)</argsstring>
        <name>setPosition</name>
        <param>
          <type>long</type>
          <declname>x</declname>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
        </param>
        <param>
          <type>long</type>
          <declname>xw</declname>
        </param>
        <param>
          <type>long</type>
          <declname>yw</declname>
        </param>
        <briefdescription>
<para>Set a new position for the lineage. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the x position on the grid. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>the y position on the grid. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xw</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of wraps in the x dimension. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yw</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of wraps in the y dimension. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Treenode.h" line="174" column="1" bodyfile="Treenode.h" bodystart="174" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="class_treenode_1a4d54472f94fc213570dd50fd32b997f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Treenode::setSpec</definition>
        <argsstring>(long double d)</argsstring>
        <name>setSpec</name>
        <param>
          <type>long double</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Setter for the randomly generated number (from NRrand.d0()) for the speciation probability for this lineage. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para>the speciation probability. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Treenode.h" line="186" column="1" bodyfile="Treenode.h" bodystart="186" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="class_treenode_1ac926fbbbe37c10eca7930b9d6f07b072" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Treenode::setIGen</definition>
        <argsstring>(unsigned long g)</argsstring>
        <name>setIGen</name>
        <param>
          <type>unsigned long</type>
          <declname>g</declname>
        </param>
        <briefdescription>
<para>Setter for the number of generations this lineage has existed for. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>g</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of generations that the lineage has existed. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Treenode.h" line="195" column="1" bodyfile="Treenode.h" bodystart="195" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="class_treenode_1a1f53687ac75f39008ac4a8b6869a5266" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Treenode::setGeneration</definition>
        <argsstring>(long double d)</argsstring>
        <name>setGeneration</name>
        <param>
          <type>long double</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Setter for the birth generation timer for the lineage. </para>        </briefdescription>
        <detaileddescription>
<para>Note that moves that don&apos;t involve coalescence do not create a new <ref refid="class_treenode" kindref="compound">Treenode</ref> object, and therefore the generation_added does not get updated. However, coalescence events will cause a new <ref refid="class_treenode" kindref="compound">Treenode</ref> object creation. The lineage birth generation is generally only important for calculating the age of tips. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Treenode.h" line="209" column="1" bodyfile="Treenode.h" bodystart="209" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="class_treenode_1a116b74093b6ccb16323f958be4820e7e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Treenode::setSpeciation</definition>
        <argsstring>(bool s)</argsstring>
        <name>setSpeciation</name>
        <param>
          <type>bool</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Setter for the speciation boolean. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>the speciation boolean. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Treenode.h" line="218" column="1" bodyfile="Treenode.h" bodystart="218" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="class_treenode_1ad4373585fe62f316eeabd88b9c2d7b2f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Treenode::burnSpecies</definition>
        <argsstring>(unsigned long idin)</argsstring>
        <name>burnSpecies</name>
        <param>
          <type>unsigned long</type>
          <declname>idin</declname>
        </param>
        <briefdescription>
<para>Setter for the species ID. Once set to something other than 0, this cannot be changed with a call to <ref refid="class_treenode_1a9f67cecf8724424486f08b31080a3f21" kindref="member">qReset()</ref> or <ref refid="class_treenode_1aeb5aa21b29ab16bd0c50012aa6e052b7" kindref="member">resetSpecies()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idin</parametername>
</parameternamelist>
<parameterdescription>
<para>the species ID. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Treenode.h" line="228" column="1" bodyfile="Treenode.h" bodystart="228" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="class_treenode_1a4886d8c939a7caa46f505a6f99ca1f3d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Treenode::setTip</definition>
        <argsstring>(bool b)</argsstring>
        <name>setTip</name>
        <param>
          <type>bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Setter for the tip boolean. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>the tip boolean. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Treenode.h" line="240" column="1" bodyfile="Treenode.h" bodystart="240" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="class_treenode_1aeb5aa21b29ab16bd0c50012aa6e052b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Treenode::resetSpecies</definition>
        <argsstring>()</argsstring>
        <name>resetSpecies</name>
        <briefdescription>
<para>Reset the species ID to 0. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Treenode.h" line="248" column="1" bodyfile="Treenode.h" bodystart="248" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="class_treenode_1a96218ba8d509081101da166dd4663aa0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Treenode::increaseGen</definition>
        <argsstring>()</argsstring>
        <name>increaseGen</name>
        <briefdescription>
<para>Increases the generation counter by one. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Treenode.h" line="256" column="1" bodyfile="Treenode.h" bodystart="256" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="class_treenode_1ace87274d2796a77256dbce935e2375b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Treenode::getExistance</definition>
        <argsstring>()</argsstring>
        <name>getExistance</name>
        <briefdescription>
<para>Getter for the existance boolean. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the existance boolean. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Treenode.h" line="271" column="1" bodyfile="Treenode.h" bodystart="271" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="class_treenode_1a4f965feba2b2ba0ac4dd5bec0d54e684" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Treenode::isTip</definition>
        <argsstring>()</argsstring>
        <name>isTip</name>
        <briefdescription>
<para>Getter for the tip boolean. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the tip boolean. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Treenode.h" line="280" column="1" bodyfile="Treenode.h" bodystart="280" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="class_treenode_1a64ec6d0d909b1e34dac2428872e8b06e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long Treenode::getParent</definition>
        <argsstring>()</argsstring>
        <name>getParent</name>
        <briefdescription>
<para>Getter for the parent location. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the parent reference. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Treenode.h" line="289" column="1" bodyfile="Treenode.h" bodystart="289" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="class_treenode_1a21e176b5d030751de95c6e8f9d1aea98" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long Treenode::getXpos</definition>
        <argsstring>()</argsstring>
        <name>getXpos</name>
        <briefdescription>
<para>Getter for the x position. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the x position. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Treenode.h" line="298" column="1" bodyfile="Treenode.h" bodystart="298" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="class_treenode_1a97e64a35740dbea2ef2dc0069cef2b8e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long Treenode::getYpos</definition>
        <argsstring>()</argsstring>
        <name>getYpos</name>
        <briefdescription>
<para>Getter for the y position. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the y position. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Treenode.h" line="307" column="1" bodyfile="Treenode.h" bodystart="307" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="class_treenode_1a949741ee546b263eae8265e27ad74df4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long Treenode::getXwrap</definition>
        <argsstring>()</argsstring>
        <name>getXwrap</name>
        <briefdescription>
<para>Getter for the number of times the lineage is wrapped in the x dimension. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the number of times the lineage is wrapped in the x dimension. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Treenode.h" line="316" column="1" bodyfile="Treenode.h" bodystart="316" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="class_treenode_1a62be6c15c2378148c8c85b4f4d3b7f78" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long Treenode::getYwrap</definition>
        <argsstring>()</argsstring>
        <name>getYwrap</name>
        <briefdescription>
<para>Getter for the number of times the lineage is wrapped in the y dimension. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the number of times the lineage is wrapped in the y dimension. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Treenode.h" line="325" column="1" bodyfile="Treenode.h" bodystart="325" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="class_treenode_1a5e37d24c2f1808262518402fcf50183c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Treenode::hasSpeciated</definition>
        <argsstring>()</argsstring>
        <name>hasSpeciated</name>
        <briefdescription>
<para>Getter for the speciation boolean. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the speciation boolean. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Treenode.h" line="334" column="1" bodyfile="Treenode.h" bodystart="334" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="class_treenode_1ad1a1ea65124c7db886de695522ea3272" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long Treenode::getSpeciesID</definition>
        <argsstring>()</argsstring>
        <name>getSpeciesID</name>
        <briefdescription>
<para>Getter for the species ID. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the species ID. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Treenode.h" line="343" column="1" bodyfile="Treenode.h" bodystart="343" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="class_treenode_1a50699133e245bae92dbdf3fcf30eccd9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long double</type>
        <definition>long double Treenode::getSpecRate</definition>
        <argsstring>()</argsstring>
        <name>getSpecRate</name>
        <briefdescription>
<para>Getter for the randomly generated speciation probability. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the speciation probability. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Treenode.h" line="352" column="1" bodyfile="Treenode.h" bodystart="352" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="class_treenode_1a0414c6a3ff3dad43f4e2e1b441ceb617" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long Treenode::getGenRate</definition>
        <argsstring>()</argsstring>
        <name>getGenRate</name>
        <briefdescription>
<para>Getter for the number of generations the lineage has existed. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the number of generations of existance. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Treenode.h" line="361" column="1" bodyfile="Treenode.h" bodystart="361" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="class_treenode_1ab89bf951b5e557a2cf72294e5e289b19" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long double</type>
        <definition>long double Treenode::getGeneration</definition>
        <argsstring>()</argsstring>
        <name>getGeneration</name>
        <briefdescription>
<para>Getter for the generation the lineage was created. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the generation counter the lineage was created. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Treenode.h" line="370" column="1" bodyfile="Treenode.h" bodystart="370" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="class_treenode_1a094f8313cfeaedee44c967d7b750019b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Treenode::speciate</definition>
        <argsstring>()</argsstring>
        <name>speciate</name>
        <briefdescription>
<para>Sets the speciation boolean to true. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Treenode.h" line="379" column="1" bodyfile="Treenode.h" bodystart="379" bodyend="383"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_treenode_1a9f22e750fa7a3579f15289953003d68d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend ostream &amp;</type>
        <definition>ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(ostream &amp;os, const Treenode &amp;t)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="class_treenode" kindref="compound">Treenode</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Overloading the &lt;&lt; operator for outputting a <ref refid="class_treenode" kindref="compound">Treenode</ref> object to an output stream. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>os</parametername>
</parameternamelist>
<parameterdescription>
<para>the output stream. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>a <ref refid="class_treenode" kindref="compound">Treenode</ref> object to output. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the output stream. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Treenode.h" line="391" column="1" bodyfile="Treenode.h" bodystart="391" bodyend="399"/>
      </memberdef>
      <memberdef kind="friend" id="class_treenode_1ad0037bea966b28d79a15e43c05a43587" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend istream &amp;</type>
        <definition>istream&amp; operator&gt;&gt;</definition>
        <argsstring>(istream &amp;is, Treenode &amp;t)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="class_treenode" kindref="compound">Treenode</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Overloading the &gt;&gt; operator for inputting the <ref refid="class_treenode" kindref="compound">Treenode</ref> object from an input stream. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>is</parametername>
</parameternamelist>
<parameterdescription>
<para>the input stream. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>a <ref refid="class_treenode" kindref="compound">Treenode</ref> object to input to. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the input stream. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Treenode.h" line="407" column="1" bodyfile="Treenode.h" bodystart="407" bodyend="414"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="class_treenode" kindref="compound">Treenode</ref> class that acts as a data storage object for the phylogenetic tree. </para>    </briefdescription>
    <detaileddescription>
<para>Also contains all the necessary routines for changes to a lineage&apos;s attributes, called by <ref refid="class_treelist" kindref="compound">Treelist</ref> objects when generating new coalescence trees. </para>    </detaileddescription>
    <location file="Treenode.h" line="35" column="1" bodyfile="Treenode.h" bodystart="34" bodyend="415"/>
    <listofallmembers>
      <member refid="class_treenode_1ad4373585fe62f316eeabd88b9c2d7b2f" prot="public" virt="non-virtual"><scope>Treenode</scope><name>burnSpecies</name></member>
      <member refid="class_treenode_1ab72136c0f617c2450b102a7b1dc18630" prot="private" virt="non-virtual"><scope>Treenode</scope><name>does_exist</name></member>
      <member refid="class_treenode_1aa0281dd1e43ace88c040109843f82005" prot="private" virt="non-virtual"><scope>Treenode</scope><name>dSpec</name></member>
      <member refid="class_treenode_1a490db2f7ab550e6f24f48a9c2d31fe55" prot="private" virt="non-virtual"><scope>Treenode</scope><name>generation_added</name></member>
      <member refid="class_treenode_1ace87274d2796a77256dbce935e2375b2" prot="public" virt="non-virtual"><scope>Treenode</scope><name>getExistance</name></member>
      <member refid="class_treenode_1ab89bf951b5e557a2cf72294e5e289b19" prot="public" virt="non-virtual"><scope>Treenode</scope><name>getGeneration</name></member>
      <member refid="class_treenode_1a0414c6a3ff3dad43f4e2e1b441ceb617" prot="public" virt="non-virtual"><scope>Treenode</scope><name>getGenRate</name></member>
      <member refid="class_treenode_1a64ec6d0d909b1e34dac2428872e8b06e" prot="public" virt="non-virtual"><scope>Treenode</scope><name>getParent</name></member>
      <member refid="class_treenode_1ad1a1ea65124c7db886de695522ea3272" prot="public" virt="non-virtual"><scope>Treenode</scope><name>getSpeciesID</name></member>
      <member refid="class_treenode_1a50699133e245bae92dbdf3fcf30eccd9" prot="public" virt="non-virtual"><scope>Treenode</scope><name>getSpecRate</name></member>
      <member refid="class_treenode_1a21e176b5d030751de95c6e8f9d1aea98" prot="public" virt="non-virtual"><scope>Treenode</scope><name>getXpos</name></member>
      <member refid="class_treenode_1a949741ee546b263eae8265e27ad74df4" prot="public" virt="non-virtual"><scope>Treenode</scope><name>getXwrap</name></member>
      <member refid="class_treenode_1a97e64a35740dbea2ef2dc0069cef2b8e" prot="public" virt="non-virtual"><scope>Treenode</scope><name>getYpos</name></member>
      <member refid="class_treenode_1a62be6c15c2378148c8c85b4f4d3b7f78" prot="public" virt="non-virtual"><scope>Treenode</scope><name>getYwrap</name></member>
      <member refid="class_treenode_1a5e37d24c2f1808262518402fcf50183c" prot="public" virt="non-virtual"><scope>Treenode</scope><name>hasSpeciated</name></member>
      <member refid="class_treenode_1aa4016ce31c914d6a904af96fa2033a29" prot="private" virt="non-virtual"><scope>Treenode</scope><name>iGen</name></member>
      <member refid="class_treenode_1a96218ba8d509081101da166dd4663aa0" prot="public" virt="non-virtual"><scope>Treenode</scope><name>increaseGen</name></member>
      <member refid="class_treenode_1a4f965feba2b2ba0ac4dd5bec0d54e684" prot="public" virt="non-virtual"><scope>Treenode</scope><name>isTip</name></member>
      <member refid="class_treenode_1a9f22e750fa7a3579f15289953003d68d" prot="public" virt="non-virtual"><scope>Treenode</scope><name>operator&lt;&lt;</name></member>
      <member refid="class_treenode_1ad0037bea966b28d79a15e43c05a43587" prot="public" virt="non-virtual"><scope>Treenode</scope><name>operator&gt;&gt;</name></member>
      <member refid="class_treenode_1aa2418048ef25c8fc749edfb092287b04" prot="private" virt="non-virtual"><scope>Treenode</scope><name>parent</name></member>
      <member refid="class_treenode_1a9f67cecf8724424486f08b31080a3f21" prot="public" virt="non-virtual"><scope>Treenode</scope><name>qReset</name></member>
      <member refid="class_treenode_1aeb5aa21b29ab16bd0c50012aa6e052b7" prot="public" virt="non-virtual"><scope>Treenode</scope><name>resetSpecies</name></member>
      <member refid="class_treenode_1a09f4c23f8182919fbe5ba4441c6f9789" prot="public" virt="non-virtual"><scope>Treenode</scope><name>setExistance</name></member>
      <member refid="class_treenode_1a1f53687ac75f39008ac4a8b6869a5266" prot="public" virt="non-virtual"><scope>Treenode</scope><name>setGeneration</name></member>
      <member refid="class_treenode_1ac926fbbbe37c10eca7930b9d6f07b072" prot="public" virt="non-virtual"><scope>Treenode</scope><name>setIGen</name></member>
      <member refid="class_treenode_1a4aceb22d86000b58f10039b7fd396aa6" prot="public" virt="non-virtual"><scope>Treenode</scope><name>setParent</name></member>
      <member refid="class_treenode_1a6cdacbd3e26bd70dfb0c974b52456970" prot="public" virt="non-virtual"><scope>Treenode</scope><name>setPosition</name></member>
      <member refid="class_treenode_1a4d54472f94fc213570dd50fd32b997f7" prot="public" virt="non-virtual"><scope>Treenode</scope><name>setSpec</name></member>
      <member refid="class_treenode_1a116b74093b6ccb16323f958be4820e7e" prot="public" virt="non-virtual"><scope>Treenode</scope><name>setSpeciation</name></member>
      <member refid="class_treenode_1a4886d8c939a7caa46f505a6f99ca1f3d" prot="public" virt="non-virtual"><scope>Treenode</scope><name>setTip</name></member>
      <member refid="class_treenode_1a3664bad0e23571689662ca26aad97f62" prot="public" virt="non-virtual"><scope>Treenode</scope><name>setup</name></member>
      <member refid="class_treenode_1ab915e141f3dfca9f32e9144dbe2d9915" prot="public" virt="non-virtual"><scope>Treenode</scope><name>setup</name></member>
      <member refid="class_treenode_1a094f8313cfeaedee44c967d7b750019b" prot="public" virt="non-virtual"><scope>Treenode</scope><name>speciate</name></member>
      <member refid="class_treenode_1a87dbf733ca6aef2ace2811e9147ce6c9" prot="private" virt="non-virtual"><scope>Treenode</scope><name>speciated</name></member>
      <member refid="class_treenode_1ad5cb8203c155d0460bab8ef1a9d0692e" prot="private" virt="non-virtual"><scope>Treenode</scope><name>species_id</name></member>
      <member refid="class_treenode_1a61691779a8f157581354fed8f653cec7" prot="private" virt="non-virtual"><scope>Treenode</scope><name>tip</name></member>
      <member refid="class_treenode_1a443ef4898396930c793f1c46c4a0bcc8" prot="public" virt="non-virtual"><scope>Treenode</scope><name>Treenode</name></member>
      <member refid="class_treenode_1ad48e58f65fe6d3fdbc3119c8e561ad10" prot="private" virt="non-virtual"><scope>Treenode</scope><name>xpos</name></member>
      <member refid="class_treenode_1abd04710f858a9b9e9eb52ea0ad27375b" prot="private" virt="non-virtual"><scope>Treenode</scope><name>xwrap</name></member>
      <member refid="class_treenode_1a65792a257086287f0b63ad0a47689a6e" prot="private" virt="non-virtual"><scope>Treenode</scope><name>ypos</name></member>
      <member refid="class_treenode_1ae3dc9ef5ab7ac7a2615691022a09d7e4" prot="private" virt="non-virtual"><scope>Treenode</scope><name>ywrap</name></member>
      <member refid="class_treenode_1a38da815205bca569e258c86f2c8324f3" prot="public" virt="non-virtual"><scope>Treenode</scope><name>~Treenode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
