<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_apply_spec" kind="class" language="C++" prot="public">
    <compoundname>ApplySpec</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_apply_spec_1a0f86a52d35378a4d625f4dbd584ab3e2" prot="private" static="no" mutable="no">
        <type><ref refid="struct_spec_sim_parameters" kindref="compound">SpecSimParameters</ref></type>
        <definition>SpecSimParameters ApplySpec::sp</definition>
        <argsstring></argsstring>
        <name>sp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ApplySpec.h" line="50" column="1" bodyfile="ApplySpec.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_apply_spec_1ae193099f86dba218baced9f6b6a91ff2" prot="private" static="no" mutable="no">
        <type>time_t</type>
        <definition>time_t ApplySpec::tStart</definition>
        <argsstring></argsstring>
        <name>tStart</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ApplySpec.h" line="51" column="1" bodyfile="ApplySpec.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_apply_spec_1aee2acf0c429d059f9e3f7b9cb8ea9124" prot="private" static="no" mutable="no">
        <type>time_t</type>
        <definition>time_t ApplySpec::tEnd</definition>
        <argsstring></argsstring>
        <name>tEnd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ApplySpec.h" line="51" column="1" bodyfile="ApplySpec.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_apply_spec_1a976d2bec88ef6289833082146e3ada97" prot="private" static="no" mutable="no">
        <type><ref refid="class_row" kindref="compound">Row</ref>&lt; <ref refid="class_treenode" kindref="compound">Treenode</ref> &gt;</type>
        <definition>Row&lt;Treenode&gt; ApplySpec::data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ApplySpec.h" line="52" column="1" bodyfile="ApplySpec.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_apply_spec_1a1fa14a1a4a5404d36f1c4669d2667107" prot="private" static="no" mutable="no">
        <type>string</type>
        <definition>string ApplySpec::inputfile</definition>
        <argsstring></argsstring>
        <name>inputfile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ApplySpec.h" line="53" column="1" bodyfile="ApplySpec.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_apply_spec_1ac7e810b6ad1e5c954605aeb908462e14" prot="private" static="no" mutable="no">
        <type>vector&lt; string &gt;</type>
        <definition>vector&lt;string&gt; ApplySpec::comargs</definition>
        <argsstring></argsstring>
        <name>comargs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ApplySpec.h" line="54" column="1" bodyfile="ApplySpec.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_apply_spec_1a31fe6c73c801197a52a069b149f6f38e" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int ApplySpec::iMultiNumber</definition>
        <argsstring></argsstring>
        <name>iMultiNumber</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ApplySpec.h" line="55" column="1" bodyfile="ApplySpec.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_apply_spec_1a6ee1d300f30d1bbf17031e653489e334" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int ApplySpec::argc</definition>
        <argsstring></argsstring>
        <name>argc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ApplySpec.h" line="56" column="1" bodyfile="ApplySpec.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_apply_spec_1aeff63d7754fa4b508284d9d44eb0ca6b" prot="private" static="no" mutable="no">
        <type>vector&lt; double &gt;</type>
        <definition>vector&lt;double&gt; ApplySpec::dUniqueSpec</definition>
        <argsstring></argsstring>
        <name>dUniqueSpec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ApplySpec.h" line="57" column="1" bodyfile="ApplySpec.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_apply_spec_1ab8b72f93b16523e84e18cfbe92f5a297" prot="private" static="no" mutable="no">
        <type><ref refid="class_treelist" kindref="compound">Treelist</ref></type>
        <definition>Treelist ApplySpec::nodes</definition>
        <argsstring></argsstring>
        <name>nodes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ApplySpec.h" line="58" column="1" bodyfile="ApplySpec.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_apply_spec_1a5063b84e505d6c8e9feeb81befcf8150" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ApplySpec::ApplySpec</definition>
        <argsstring>()</argsstring>
        <name>ApplySpec</name>
        <briefdescription>
<para>Default constructor for <ref refid="class_apply_spec" kindref="compound">ApplySpec</ref> class. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ApplySpec.h" line="64" column="1" bodyfile="ApplySpec.h" bodystart="64" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="class_apply_spec_1a1a106fa5487b52076c30619048154c32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ApplySpec::setArgs</definition>
        <argsstring>(string database, bool is_spatial, string sample_file, string time_config, string is_fragments, vector&lt; double &gt; speciation_rates)</argsstring>
        <name>setArgs</name>
        <param>
          <type>string</type>
          <declname>database</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_spatial</declname>
        </param>
        <param>
          <type>string</type>
          <declname>sample_file</declname>
        </param>
        <param>
          <type>string</type>
          <declname>time_config</declname>
        </param>
        <param>
          <type>string</type>
          <declname>is_fragments</declname>
        </param>
        <param>
          <type>vector&lt; double &gt;</type>
          <declname>speciation_rates</declname>
        </param>
        <briefdescription>
<para>Sets the application arguments for the inputs. Intended for use with the applyspecmodule for integration with python. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>database</parametername>
</parameternamelist>
<parameterdescription>
<para>the database to apply speciation rates to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_spatial</parametername>
</parameternamelist>
<parameterdescription>
<para>if true, record full spatial data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sample_file</parametername>
</parameternamelist>
<parameterdescription>
<para>the sample file to select lineages from the map </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time_config</parametername>
</parameternamelist>
<parameterdescription>
<para>the time config file to use </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_fragments</parametername>
</parameternamelist>
<parameterdescription>
<para>fragment file, or &quot;T&quot;/&quot;F&quot; for automatic detection/no detection </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>speciation_rates</parametername>
</parameternamelist>
<parameterdescription>
<para>the speciation rates to apply </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ApplySpec.h" line="80" column="1" bodyfile="ApplySpec.cpp" bodystart="20" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_apply_spec_1acd657de841dbf917f677524b6b587913" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ApplySpec::parseArgs</definition>
        <argsstring>()</argsstring>
        <name>parseArgs</name>
        <briefdescription>
<para>Run the command line arguments check. Writes arguments to the <ref refid="struct_spec_sim_parameters" kindref="compound">SpecSimParameters</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of arguments. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>comargs</parametername>
</parameternamelist>
<parameterdescription>
<para>a vector filled with the command line arguments </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ApplySpec.h" line="89" column="1" bodyfile="ApplySpec.cpp" bodystart="52" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="class_apply_spec_1a09e5fbeb086f56a7d9eb66ca3e2d3c06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ApplySpec::writeSpeciationRates</definition>
        <argsstring>()</argsstring>
        <name>writeSpeciationRates</name>
        <briefdescription>
<para>Prints speciation rates to terminal. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ApplySpec.h" line="95" column="1" bodyfile="ApplySpec.cpp" bodystart="202" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="class_apply_spec_1aae6c62a4ac54c8e689d5eda77f5e4453" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ApplySpec::importTimeConfig</definition>
        <argsstring>()</argsstring>
        <name>importTimeConfig</name>
        <briefdescription>
<para>Import the time config file, if there is one. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ApplySpec.h" line="100" column="1" bodyfile="ApplySpec.cpp" bodystart="231" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="class_apply_spec_1ae770cc724faa7c282dacaa4f3bc09adc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ApplySpec::importData</definition>
        <argsstring>()</argsstring>
        <name>importData</name>
        <briefdescription>
<para>Imports the data from the file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ApplySpec.h" line="106" column="1" bodyfile="ApplySpec.cpp" bodystart="252" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="class_apply_spec_1a77665d4d5bf577447f107c444ffe8906" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ApplySpec::checkUniqueSpec</definition>
        <argsstring>(unsigned int i)</argsstring>
        <name>checkUniqueSpec</name>
        <param>
          <type>unsigned int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Checks for unique speciation rates. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the speciation rate to check for in sp.vSpecRates </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if speciation rate is unique, false otherwises </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ApplySpec.h" line="113" column="1" bodyfile="ApplySpec.cpp" bodystart="274" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="class_apply_spec_1aaea15ee26283e352351927b62accf722" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ApplySpec::applyMultiTimes</definition>
        <argsstring>(int i)</argsstring>
        <name>applyMultiTimes</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Apply multiple times to the <ref refid="class_tree" kindref="compound">CoalescenceTree</ref> for a particular speciation rate. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>the reference in dUniqueSpec to apply </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ApplySpec.h" line="119" column="1" bodyfile="ApplySpec.cpp" bodystart="286" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="class_apply_spec_1a322f10a8292ed3a6b1b9975b056c3ac0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ApplySpec::applySingleTime</definition>
        <argsstring>(int i)</argsstring>
        <name>applySingleTime</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Apply a single time (generation 0.0) and speciation rate to the <ref refid="class_tree" kindref="compound">CoalescenceTree</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>the </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ApplySpec.h" line="125" column="1" bodyfile="ApplySpec.cpp" bodystart="322" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="class_apply_spec_1a3c7e603e0357515c50aaacab451fe389" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ApplySpec::calculateTree</definition>
        <argsstring>()</argsstring>
        <name>calculateTree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ApplySpec.h" line="127" column="1" bodyfile="ApplySpec.cpp" bodystart="350" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="class_apply_spec_1ae229befb55638433bd1f6d99cb29c70d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ApplySpec::applyFromComargs</definition>
        <argsstring>(int argc_in, char **argv)</argsstring>
        <name>applyFromComargs</name>
        <param>
          <type>int</type>
          <declname>argc_in</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
<para>Runs the main program including parsing command line arguments and running the main analyses. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of command line arguments </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argv</parametername>
</parameternamelist>
<parameterdescription>
<para>the array of command line arguments </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ApplySpec.h" line="135" column="1" bodyfile="ApplySpec.cpp" bodystart="390" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="class_apply_spec_1a1cb7d5f351ea9e85d34c2afe79f9faae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ApplySpec::apply</definition>
        <argsstring>()</argsstring>
        <name>apply</name>
        <briefdescription>
<para>Applies the imported speciation rates to the coalescence tree. This is the main function that contains all inner routines. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ApplySpec.h" line="141" column="1" bodyfile="ApplySpec.cpp" bodystart="403" bodyend="430"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ApplySpec.h" line="48" column="1" bodyfile="ApplySpec.h" bodystart="47" bodyend="142"/>
    <listofallmembers>
      <member refid="class_apply_spec_1a1cb7d5f351ea9e85d34c2afe79f9faae" prot="public" virt="non-virtual"><scope>ApplySpec</scope><name>apply</name></member>
      <member refid="class_apply_spec_1ae229befb55638433bd1f6d99cb29c70d" prot="public" virt="non-virtual"><scope>ApplySpec</scope><name>applyFromComargs</name></member>
      <member refid="class_apply_spec_1aaea15ee26283e352351927b62accf722" prot="public" virt="non-virtual"><scope>ApplySpec</scope><name>applyMultiTimes</name></member>
      <member refid="class_apply_spec_1a322f10a8292ed3a6b1b9975b056c3ac0" prot="public" virt="non-virtual"><scope>ApplySpec</scope><name>applySingleTime</name></member>
      <member refid="class_apply_spec_1a5063b84e505d6c8e9feeb81befcf8150" prot="public" virt="non-virtual"><scope>ApplySpec</scope><name>ApplySpec</name></member>
      <member refid="class_apply_spec_1a6ee1d300f30d1bbf17031e653489e334" prot="private" virt="non-virtual"><scope>ApplySpec</scope><name>argc</name></member>
      <member refid="class_apply_spec_1a3c7e603e0357515c50aaacab451fe389" prot="public" virt="non-virtual"><scope>ApplySpec</scope><name>calculateTree</name></member>
      <member refid="class_apply_spec_1a77665d4d5bf577447f107c444ffe8906" prot="public" virt="non-virtual"><scope>ApplySpec</scope><name>checkUniqueSpec</name></member>
      <member refid="class_apply_spec_1ac7e810b6ad1e5c954605aeb908462e14" prot="private" virt="non-virtual"><scope>ApplySpec</scope><name>comargs</name></member>
      <member refid="class_apply_spec_1a976d2bec88ef6289833082146e3ada97" prot="private" virt="non-virtual"><scope>ApplySpec</scope><name>data</name></member>
      <member refid="class_apply_spec_1aeff63d7754fa4b508284d9d44eb0ca6b" prot="private" virt="non-virtual"><scope>ApplySpec</scope><name>dUniqueSpec</name></member>
      <member refid="class_apply_spec_1ae770cc724faa7c282dacaa4f3bc09adc" prot="public" virt="non-virtual"><scope>ApplySpec</scope><name>importData</name></member>
      <member refid="class_apply_spec_1aae6c62a4ac54c8e689d5eda77f5e4453" prot="public" virt="non-virtual"><scope>ApplySpec</scope><name>importTimeConfig</name></member>
      <member refid="class_apply_spec_1a31fe6c73c801197a52a069b149f6f38e" prot="private" virt="non-virtual"><scope>ApplySpec</scope><name>iMultiNumber</name></member>
      <member refid="class_apply_spec_1a1fa14a1a4a5404d36f1c4669d2667107" prot="private" virt="non-virtual"><scope>ApplySpec</scope><name>inputfile</name></member>
      <member refid="class_apply_spec_1ab8b72f93b16523e84e18cfbe92f5a297" prot="private" virt="non-virtual"><scope>ApplySpec</scope><name>nodes</name></member>
      <member refid="class_apply_spec_1acd657de841dbf917f677524b6b587913" prot="public" virt="non-virtual"><scope>ApplySpec</scope><name>parseArgs</name></member>
      <member refid="class_apply_spec_1a1a106fa5487b52076c30619048154c32" prot="public" virt="non-virtual"><scope>ApplySpec</scope><name>setArgs</name></member>
      <member refid="class_apply_spec_1a0f86a52d35378a4d625f4dbd584ab3e2" prot="private" virt="non-virtual"><scope>ApplySpec</scope><name>sp</name></member>
      <member refid="class_apply_spec_1aee2acf0c429d059f9e3f7b9cb8ea9124" prot="private" virt="non-virtual"><scope>ApplySpec</scope><name>tEnd</name></member>
      <member refid="class_apply_spec_1ae193099f86dba218baced9f6b6a91ff2" prot="private" virt="non-virtual"><scope>ApplySpec</scope><name>tStart</name></member>
      <member refid="class_apply_spec_1a09e5fbeb086f56a7d9eb66ca3e2d3c06" prot="public" virt="non-virtual"><scope>ApplySpec</scope><name>writeSpeciationRates</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
