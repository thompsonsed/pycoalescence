<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_config_option" kind="class" language="C++" prot="public">
    <compoundname>ConfigOption</compoundname>
    <includes refid="_config_file_parser_8h" local="no">ConfigFileParser.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_config_option_1ab60368166810672b0a339ee535dfa192" prot="private" static="no" mutable="no">
        <type>string</type>
        <definition>string ConfigOption::configfile</definition>
        <argsstring></argsstring>
        <name>configfile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ConfigFileParser.h" line="141" column="1" bodyfile="ConfigFileParser.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_config_option_1afeb85ebaa11af03e1559dc93ee5ab0d5" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ConfigOption::bConfig</definition>
        <argsstring></argsstring>
        <name>bConfig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ConfigFileParser.h" line="142" column="1" bodyfile="ConfigFileParser.h" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_config_option_1a0b8255d3ad09ba334d6d46bb34e57c1e" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ConfigOption::bMain</definition>
        <argsstring></argsstring>
        <name>bMain</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ConfigFileParser.h" line="143" column="1" bodyfile="ConfigFileParser.h" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_config_option_1a83aae86bd615e9b643960817098d2f3a" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ConfigOption::bFullParse</definition>
        <argsstring></argsstring>
        <name>bFullParse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ConfigFileParser.h" line="145" column="1" bodyfile="ConfigFileParser.h" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_config_option_1a1fb1c6c90af7b032ea8038a0326d304c" prot="private" static="no" mutable="no">
        <type>vector&lt; <ref refid="struct_section_option" kindref="compound">SectionOption</ref> &gt;</type>
        <definition>vector&lt;SectionOption&gt; ConfigOption::configs</definition>
        <argsstring></argsstring>
        <name>configs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ConfigFileParser.h" line="146" column="1" bodyfile="ConfigFileParser.h" bodystart="146" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_config_option_1ac0639cf9fc6660b1436ebc9e7af52525" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>ConfigOption::ConfigOption</definition>
        <argsstring>()</argsstring>
        <name>ConfigOption</name>
        <briefdescription>
<para>default construtor for <ref refid="class_config_option" kindref="compound">ConfigOption</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ConfigFileParser.h" line="151" column="1" bodyfile="ConfigFileParser.h" bodystart="151" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="class_config_option_1a3f8a4c5ed86342e5750e25b4e2effc1d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>string ConfigOption::getFile</definition>
        <argsstring>()</argsstring>
        <name>getFile</name>
        <briefdescription>
<para>Standard getter for the file name. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>string the file name. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ConfigFileParser.h" line="163" column="1" bodyfile="ConfigFileParser.h" bodystart="163" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="class_config_option_1a9efbb1ec989baccfa4476edf347381f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ConfigOption::getMain</definition>
        <argsstring>()</argsstring>
        <name>getMain</name>
        <briefdescription>
<para>Gets if the config is a main command-line import. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>bool bMain </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ConfigFileParser.h" line="172" column="1" bodyfile="ConfigFileParser.h" bodystart="172" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="class_config_option_1a39e97c0cd7dc9451e4a518dabf38e132" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ConfigOption::getFull</definition>
        <argsstring>()</argsstring>
        <name>getFull</name>
        <briefdescription>
<para>Gets if the config requires each KeyOption structure to be returned after each read. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>bool bFullParse </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ConfigFileParser.h" line="181" column="1" bodyfile="ConfigFileParser.h" bodystart="181" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="class_config_option_1a45bd25a839030bd722f5d9d2dbd7914e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ConfigOption::setConfig</definition>
        <argsstring>(string &amp;file, bool main, bool full_parse=false)</argsstring>
        <name>setConfig</name>
        <param>
          <type>string &amp;</type>
          <declname>file</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>main</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>full_parse</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Sets the config file the specified string. A boolean is also provided, set equal to true if this is the main command line import. This causes the deletion of the first few command line options after import. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>file</parametername>
</parameternamelist>
<parameterdescription>
<para>the target config file (in .txt format). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>main</parametername>
</parameternamelist>
<parameterdescription>
<para>boolean of if this is the main command line import. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>full_parse</parametername>
</parameternamelist>
<parameterdescription>
<para>sets bFullParse to provided value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ConfigFileParser.h" line="194" column="1" bodyfile="ConfigFileParser.h" bodystart="194" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="class_config_option_1a45cdefa1516c378e5a90803d594ccd34" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ConfigOption::parseConfig</definition>
        <argsstring>()</argsstring>
        <name>parseConfig</name>
        <briefdescription>
<para>Reads a config file of a specific configuration. Each line must be a set of values related to the object determined by ref=&apos;object&apos;. Each key must have the form key=value, which will be read as a string into a KeyOption structure. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ConfigFileParser.h" line="214" column="1" bodyfile="ConfigFileParser.h" bodystart="214" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="class_config_option_1a4f37e62b7f4ef9368f3eeea7e6385c49" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ConfigOption::testPrint</definition>
        <argsstring>()</argsstring>
        <name>testPrint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ConfigFileParser.h" line="306" column="1" bodyfile="ConfigFileParser.h" bodystart="306" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="class_config_option_1ab106a54b3555a0192a1651116578a80d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>vector&lt; <ref refid="struct_section_option" kindref="compound">SectionOption</ref> &gt;</type>
        <definition>vector&lt;SectionOption&gt; ConfigOption::getSectionOptions</definition>
        <argsstring>()</argsstring>
        <name>getSectionOptions</name>
        <briefdescription>
<para>Returns the vector of key options imported from the file. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>vector of key options </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ConfigFileParser.h" line="326" column="1" bodyfile="ConfigFileParser.h" bodystart="326" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="class_config_option_1a66d2199cf3bd4fa015ef38e34fe02bd1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_section_option" kindref="compound">SectionOption</ref></type>
        <definition>SectionOption ConfigOption::operator[]</definition>
        <argsstring>(int index)</argsstring>
        <name>operator[]</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ConfigFileParser.h" line="331" column="1" bodyfile="ConfigFileParser.h" bodystart="331" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="class_config_option_1acb7b9141efc8d0e50e21ff1adce8e9cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int ConfigOption::getSectionOptionsSize</definition>
        <argsstring>()</argsstring>
        <name>getSectionOptionsSize</name>
        <briefdescription>
<para>Gets the size of the key options vector. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the size of the configuration vector. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ConfigFileParser.h" line="339" column="1" bodyfile="ConfigFileParser.h" bodystart="339" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="class_config_option_1ab32e6555e331e499b8071722885e9bc6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>vector&lt; string &gt;</type>
        <definition>vector&lt;string&gt; ConfigOption::getSections</definition>
        <argsstring>()</argsstring>
        <name>getSections</name>
        <briefdescription>
<para>Gets the sections contained in the SectionOptions object. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A vector of the section names. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ConfigFileParser.h" line="348" column="1" bodyfile="ConfigFileParser.h" bodystart="348" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="class_config_option_1a283504b26f0a4e79c1ea28045ac765ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ConfigOption::hasSection</definition>
        <argsstring>(string sec)</argsstring>
        <name>hasSection</name>
        <param>
          <type>string</type>
          <declname>sec</declname>
        </param>
        <briefdescription>
<para>Checks whether the config option has the specified section. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sec</parametername>
</parameternamelist>
<parameterdescription>
<para>the section name to check for </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the section has been found </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ConfigFileParser.h" line="363" column="1" bodyfile="ConfigFileParser.h" bodystart="363" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="class_config_option_1a7558ac5aaee81415034d28aea7485f0b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>vector&lt; string &gt;</type>
        <definition>vector&lt;string&gt; ConfigOption::getSectionValues</definition>
        <argsstring>(string sec)</argsstring>
        <name>getSectionValues</name>
        <param>
          <type>string</type>
          <declname>sec</declname>
        </param>
        <briefdescription>
<para>Gets all values within a section. </para>        </briefdescription>
        <detaileddescription>
<para>Throws a <ref refid="struct_config___exception" kindref="compound">Config_Exception</ref> if the section is not found. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sec</parametername>
</parameternamelist>
<parameterdescription>
<para>the section to find values for </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a vector of the section&apos;s values. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ConfigFileParser.h" line="382" column="1" bodyfile="ConfigFileParser.h" bodystart="382" bodyend="392"/>
      </memberdef>
      <memberdef kind="function" id="class_config_option_1a36917196846e64db6634730fa9b2b3f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>string ConfigOption::getSectionOptions</definition>
        <argsstring>(string section, string ref)</argsstring>
        <name>getSectionOptions</name>
        <param>
          <type>string</type>
          <declname>section</declname>
        </param>
        <param>
          <type>string</type>
          <declname>ref</declname>
        </param>
        <briefdescription>
<para>Returns a specific value for a particular key options and reference. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>section</parametername>
</parameternamelist>
<parameterdescription>
<para>the section to match </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ref</parametername>
</parameternamelist>
<parameterdescription>
<para>the reference to match </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the string at the correct place in KeyOptions.val </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ConfigFileParser.h" line="399" column="1" bodyfile="ConfigFileParser.h" bodystart="399" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="class_config_option_1a9f4884f12f74d865a3370c2f24ffcc67" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>string ConfigOption::getSectionOptions</definition>
        <argsstring>(string section, string ref, string def)</argsstring>
        <name>getSectionOptions</name>
        <param>
          <type>string</type>
          <declname>section</declname>
        </param>
        <param>
          <type>string</type>
          <declname>ref</declname>
        </param>
        <param>
          <type>string</type>
          <declname>def</declname>
        </param>
        <briefdescription>
<para>Returns a specific value for a particular key options and reference. This overloaded version of the function returns the default value def when no match is found. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>section</parametername>
</parameternamelist>
<parameterdescription>
<para>the section to match </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ref</parametername>
</parameternamelist>
<parameterdescription>
<para>the reference to match </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>def</parametername>
</parameternamelist>
<parameterdescription>
<para>the default value to return if no match is found </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the string at the correct place in KeyOptions.val </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ConfigFileParser.h" line="429" column="1" bodyfile="ConfigFileParser.h" bodystart="429" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="class_config_option_1afbd1ed9d006c8ff48d90e63a57f55e2a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int ConfigOption::importConfig</definition>
        <argsstring>(vector&lt; string &gt; &amp;comargs)</argsstring>
        <name>importConfig</name>
        <param>
          <type>vector&lt; string &gt; &amp;</type>
          <declname>comargs</declname>
        </param>
        <briefdescription>
<para>Imports the parameters from the config file and returns an integer of the number of arguments. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>comargs</parametername>
</parameternamelist>
<parameterdescription>
<para>a vector of command line arguments to import to from file. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a count of the number of arguments (should also be the size of comargs). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ConfigFileParser.h" line="451" column="1" bodyfile="ConfigFileParser.h" bodystart="451" bodyend="525"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_config_option_1a9e0cbadb5ac652eb62eb6e046dad5126" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend ostream &amp;</type>
        <definition>ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(ostream &amp;os, const ConfigOption &amp;c)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="class_config_option" kindref="compound">ConfigOption</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Overloading the &lt;&lt; operator for outputting to the output stream. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>os</parametername>
</parameternamelist>
<parameterdescription>
<para>the output stream. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="class_config_option" kindref="compound">ConfigOption</ref> object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>os the output stream. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ConfigFileParser.h" line="533" column="1" bodyfile="ConfigFileParser.h" bodystart="533" bodyend="542"/>
      </memberdef>
      <memberdef kind="friend" id="class_config_option_1ad418094c35f378a7b92ca5922e45a206" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend istream &amp;</type>
        <definition>istream&amp; operator&gt;&gt;</definition>
        <argsstring>(istream &amp;is, ConfigOption &amp;c)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>istream &amp;</type>
          <declname>is</declname>
        </param>
        <param>
          <type><ref refid="class_config_option" kindref="compound">ConfigOption</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Overloading the &gt;&gt; operator for inputting from an input stream. Note that the config file must still exist for re-inport and parsing. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>is</parametername>
</parameternamelist>
<parameterdescription>
<para>the input stream </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="class_config_option" kindref="compound">ConfigOption</ref> object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>is the input stream </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ConfigFileParser.h" line="551" column="1" bodyfile="ConfigFileParser.h" bodystart="551" bodyend="579"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Config option class to store and import options from a file. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ConfigFileParser.h" line="139" column="1" bodyfile="ConfigFileParser.h" bodystart="138" bodyend="580"/>
    <listofallmembers>
      <member refid="class_config_option_1afeb85ebaa11af03e1559dc93ee5ab0d5" prot="private" virt="non-virtual"><scope>ConfigOption</scope><name>bConfig</name></member>
      <member refid="class_config_option_1a83aae86bd615e9b643960817098d2f3a" prot="private" virt="non-virtual"><scope>ConfigOption</scope><name>bFullParse</name></member>
      <member refid="class_config_option_1a0b8255d3ad09ba334d6d46bb34e57c1e" prot="private" virt="non-virtual"><scope>ConfigOption</scope><name>bMain</name></member>
      <member refid="class_config_option_1ab60368166810672b0a339ee535dfa192" prot="private" virt="non-virtual"><scope>ConfigOption</scope><name>configfile</name></member>
      <member refid="class_config_option_1ac0639cf9fc6660b1436ebc9e7af52525" prot="public" virt="non-virtual"><scope>ConfigOption</scope><name>ConfigOption</name></member>
      <member refid="class_config_option_1a1fb1c6c90af7b032ea8038a0326d304c" prot="private" virt="non-virtual"><scope>ConfigOption</scope><name>configs</name></member>
      <member refid="class_config_option_1a3f8a4c5ed86342e5750e25b4e2effc1d" prot="public" virt="non-virtual"><scope>ConfigOption</scope><name>getFile</name></member>
      <member refid="class_config_option_1a39e97c0cd7dc9451e4a518dabf38e132" prot="public" virt="non-virtual"><scope>ConfigOption</scope><name>getFull</name></member>
      <member refid="class_config_option_1a9efbb1ec989baccfa4476edf347381f3" prot="public" virt="non-virtual"><scope>ConfigOption</scope><name>getMain</name></member>
      <member refid="class_config_option_1ab106a54b3555a0192a1651116578a80d" prot="public" virt="non-virtual"><scope>ConfigOption</scope><name>getSectionOptions</name></member>
      <member refid="class_config_option_1a36917196846e64db6634730fa9b2b3f3" prot="public" virt="non-virtual"><scope>ConfigOption</scope><name>getSectionOptions</name></member>
      <member refid="class_config_option_1a9f4884f12f74d865a3370c2f24ffcc67" prot="public" virt="non-virtual"><scope>ConfigOption</scope><name>getSectionOptions</name></member>
      <member refid="class_config_option_1acb7b9141efc8d0e50e21ff1adce8e9cb" prot="public" virt="non-virtual"><scope>ConfigOption</scope><name>getSectionOptionsSize</name></member>
      <member refid="class_config_option_1ab32e6555e331e499b8071722885e9bc6" prot="public" virt="non-virtual"><scope>ConfigOption</scope><name>getSections</name></member>
      <member refid="class_config_option_1a7558ac5aaee81415034d28aea7485f0b" prot="public" virt="non-virtual"><scope>ConfigOption</scope><name>getSectionValues</name></member>
      <member refid="class_config_option_1a283504b26f0a4e79c1ea28045ac765ba" prot="public" virt="non-virtual"><scope>ConfigOption</scope><name>hasSection</name></member>
      <member refid="class_config_option_1afbd1ed9d006c8ff48d90e63a57f55e2a" prot="public" virt="non-virtual"><scope>ConfigOption</scope><name>importConfig</name></member>
      <member refid="class_config_option_1a9e0cbadb5ac652eb62eb6e046dad5126" prot="public" virt="non-virtual"><scope>ConfigOption</scope><name>operator&lt;&lt;</name></member>
      <member refid="class_config_option_1ad418094c35f378a7b92ca5922e45a206" prot="public" virt="non-virtual"><scope>ConfigOption</scope><name>operator&gt;&gt;</name></member>
      <member refid="class_config_option_1a66d2199cf3bd4fa015ef38e34fe02bd1" prot="public" virt="non-virtual"><scope>ConfigOption</scope><name>operator[]</name></member>
      <member refid="class_config_option_1a45cdefa1516c378e5a90803d594ccd34" prot="public" virt="non-virtual"><scope>ConfigOption</scope><name>parseConfig</name></member>
      <member refid="class_config_option_1a45bd25a839030bd722f5d9d2dbd7914e" prot="public" virt="non-virtual"><scope>ConfigOption</scope><name>setConfig</name></member>
      <member refid="class_config_option_1a4f37e62b7f4ef9368f3eeea7e6385c49" prot="public" virt="non-virtual"><scope>ConfigOption</scope><name>testPrint</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
