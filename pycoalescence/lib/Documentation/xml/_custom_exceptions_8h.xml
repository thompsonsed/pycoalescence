<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_custom_exceptions_8h" kind="file" language="C++">
    <compoundname>CustomExceptions.h</compoundname>
    <includes local="no">stdexcept</includes>
    <includedby refid="_treelist_8h" local="yes">Treelist.h</includedby>
    <includedby refid="_config_file_parser_8h" local="yes">ConfigFileParser.h</includedby>
    <includedby refid="_dispersal_coordinator_8h" local="yes">DispersalCoordinator.h</includedby>
    <includedby refid="_simulate_dispersal_8h" local="yes">SimulateDispersal.h</includedby>
    <incdepgraph>
      <node id="1336">
        <label>CustomExceptions.h</label>
        <link refid="CustomExceptions.h"/>
        <childnode refid="1337" relation="include">
        </childnode>
      </node>
      <node id="1337">
        <label>stdexcept</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1353">
        <label>Treelist.cpp</label>
        <link refid="_treelist_8cpp"/>
      </node>
      <node id="1352">
        <label>CoalescenceTree.cpp</label>
        <link refid="_tree_8cpp"/>
      </node>
      <node id="1349">
        <label>Setup.cpp</label>
        <link refid="_setup_8cpp"/>
      </node>
      <node id="1361">
        <label>dispersalmodule.h</label>
        <link refid="dispersalmodule_8h"/>
        <childnode refid="1362" relation="include">
        </childnode>
      </node>
      <node id="1362">
        <label>dispersalmodule.cpp</label>
        <link refid="dispersalmodule_8cpp"/>
      </node>
      <node id="1343">
        <label>SpeciationCounter.cpp</label>
        <link refid="_speciation_counter_8cpp"/>
      </node>
      <node id="1342">
        <label>applyspecmodule.cpp</label>
        <link refid="applyspecmodule_8cpp"/>
      </node>
      <node id="1338">
        <label>CustomExceptions.h</label>
        <link refid="CustomExceptions.h"/>
        <childnode refid="1339" relation="include">
        </childnode>
        <childnode refid="1354" relation="include">
        </childnode>
        <childnode refid="1358" relation="include">
        </childnode>
        <childnode refid="1360" relation="include">
        </childnode>
      </node>
      <node id="1344">
        <label>CoalescenceTree.h</label>
        <link refid="_tree_8h"/>
        <childnode refid="1345" relation="include">
        </childnode>
        <childnode refid="1348" relation="include">
        </childnode>
        <childnode refid="1350" relation="include">
        </childnode>
        <childnode refid="1352" relation="include">
        </childnode>
      </node>
      <node id="1355">
        <label>SimParameters.h</label>
        <link refid="_sim_parameters_8h_source"/>
        <childnode refid="1356" relation="include">
        </childnode>
        <childnode refid="1357" relation="include">
        </childnode>
      </node>
      <node id="1357">
        <label>Map.h</label>
        <link refid="_map_8h"/>
        <childnode refid="1344" relation="include">
        </childnode>
        <childnode refid="1358" relation="include">
        </childnode>
        <childnode refid="1347" relation="include">
        </childnode>
      </node>
      <node id="1345">
        <label>Setup.h</label>
        <link refid="_setup_8h"/>
        <childnode refid="1340" relation="include">
        </childnode>
        <childnode refid="1344" relation="include">
        </childnode>
        <childnode refid="1346" relation="include">
        </childnode>
        <childnode refid="1347" relation="include">
        </childnode>
        <childnode refid="1348" relation="include">
        </childnode>
        <childnode refid="1349" relation="include">
        </childnode>
      </node>
      <node id="1359">
        <label>DispersalCoordinator.cpp</label>
        <link refid="_dispersal_coordinator_8cpp"/>
      </node>
      <node id="1339">
        <label>Treelist.h</label>
        <link refid="_treelist_8h"/>
        <childnode refid="1340" relation="include">
        </childnode>
        <childnode refid="1344" relation="include">
        </childnode>
        <childnode refid="1353" relation="include">
        </childnode>
      </node>
      <node id="1346">
        <label>main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="1350">
        <label>ProtractedTree.h</label>
        <link refid="_protracted_tree_8h"/>
        <childnode refid="1348" relation="include">
        </childnode>
        <childnode refid="1351" relation="include">
        </childnode>
      </node>
      <node id="1348">
        <label>necsimmodule.cpp</label>
        <link refid="necsimmodule_8cpp"/>
      </node>
      <node id="1354">
        <label>ConfigFileParser.h</label>
        <link refid="_config_file_parser_8h_source"/>
        <childnode refid="1355" relation="include">
        </childnode>
        <childnode refid="1340" relation="include">
        </childnode>
        <childnode refid="1357" relation="include">
        </childnode>
        <childnode refid="1344" relation="include">
        </childnode>
      </node>
      <node id="1363">
        <label>SimulateDispersal.cpp</label>
        <link refid="_simulate_dispersal_8cpp"/>
      </node>
      <node id="1358">
        <label>DispersalCoordinator.h</label>
        <link refid="_dispersal_coordinator_8h"/>
        <childnode refid="1344" relation="include">
        </childnode>
        <childnode refid="1359" relation="include">
        </childnode>
      </node>
      <node id="1347">
        <label>Map.cpp</label>
        <link refid="_map_8cpp"/>
      </node>
      <node id="1360">
        <label>SimulateDispersal.h</label>
        <link refid="_simulate_dispersal_8h"/>
        <childnode refid="1361" relation="include">
        </childnode>
        <childnode refid="1363" relation="include">
        </childnode>
      </node>
      <node id="1356">
        <label>Datamask.h</label>
        <link refid="_datamask_8h_source"/>
        <childnode refid="1339" relation="include">
        </childnode>
        <childnode refid="1357" relation="include">
        </childnode>
      </node>
      <node id="1340">
        <label>ApplySpec.h</label>
        <link refid="_apply_spec_8h_source"/>
        <childnode refid="1341" relation="include">
        </childnode>
        <childnode refid="1343" relation="include">
        </childnode>
      </node>
      <node id="1341">
        <label>applyspecmodule.h</label>
        <link refid="applyspecmodule_8h"/>
        <childnode refid="1342" relation="include">
        </childnode>
      </node>
      <node id="1351">
        <label>ProtractedTree.cpp</label>
        <link refid="_protracted_tree_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_main___exception" prot="public">Main_Exception</innerclass>
    <innerclass refid="struct_fatal___exception" prot="public">Fatal_Exception</innerclass>
    <innerclass refid="struct_map___exception" prot="public">Map_Exception</innerclass>
    <innerclass refid="struct_map___fatal___exception" prot="public">Map_Fatal_Exception</innerclass>
    <innerclass refid="struct_config___exception" prot="public">Config_Exception</innerclass>
    <innerclass refid="struct_species_exception" prot="public">SpeciesException</innerclass>
    <briefdescription>
<para>Contains the various exceptions used by NECSim. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Samuel Thompson</para></simplesect>
<simplesect kind="copyright"><para><ulink url="https://opensource.org/licenses/BSD-3-Clause">BSD-3 Licence.</ulink> </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>NECSim<sp/>project<sp/>which<sp/>is<sp/>released<sp/>under<sp/>BSD-3<sp/>license.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//See<sp/>file<sp/>**LICENSE.txt**<sp/>or<sp/>visit<sp/>https://opensource.org/licenses/BSD-3-Clause)<sp/>for<sp/>full<sp/>license<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/>Samuel<sp/>Thompson</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Contact:<sp/>samuel.thompson14@imperial.ac.uk<sp/>or<sp/>thompsonsed@gmail.com</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight><highlight class="preprocessor"><sp/>#ifndef<sp/>EXCEPTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#define<sp/>EXCEPTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="21" refid="struct_main___exception" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_main___exception" kindref="compound">Main_Exception</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>runtime_error</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><ref refid="struct_main___exception" kindref="compound">Main_Exception</ref>():runtime_error(</highlight><highlight class="stringliteral">&quot;Exception<sp/>thrown<sp/>at<sp/>run<sp/>time<sp/>in<sp/>main:<sp/>&quot;</highlight><highlight class="normal">){}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><ref refid="struct_main___exception" kindref="compound">Main_Exception</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>msg):runtime_error(msg.c_str()){}</highlight></codeline>
<codeline lineno="25"><highlight class="normal">};</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="struct_fatal___exception" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_fatal___exception" kindref="compound">Fatal_Exception</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>runtime_error</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><ref refid="struct_fatal___exception" kindref="compound">Fatal_Exception</ref>():runtime_error(</highlight><highlight class="stringliteral">&quot;Fatal<sp/>exception<sp/>thrown<sp/>at<sp/>run<sp/>time,<sp/>quitting<sp/>program.<sp/>&quot;</highlight><highlight class="normal">){}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><ref refid="struct_fatal___exception" kindref="compound">Fatal_Exception</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>msg):runtime_error(msg.c_str()){}</highlight></codeline>
<codeline lineno="36"><highlight class="normal">};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>for<sp/>non<sp/>fatal<sp/>map<sp/>exceptions<sp/>-<sp/>in<sp/>most<sp/>cases,<sp/>if<sp/>they<sp/>can&apos;t<sp/>be<sp/>resolved,<sp/>the<sp/>program<sp/>will<sp/>have<sp/>to<sp/>quit<sp/>regardless.</highlight></codeline>
<codeline lineno="43" refid="struct_map___exception" refkind="compound"><highlight class="comment"></highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_map___exception" kindref="compound">Map_Exception</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>runtime_error</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_map___exception" kindref="compound">Map_Exception</ref>():runtime_error(</highlight><highlight class="stringliteral">&quot;Exception<sp/>thrown<sp/>at<sp/>run<sp/>time<sp/>in<sp/>Map:<sp/>&quot;</highlight><highlight class="normal">){}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_map___exception" kindref="compound">Map_Exception</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>msg):runtime_error(msg.c_str()){}</highlight></codeline>
<codeline lineno="47"><highlight class="normal">};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>For<sp/>returning<sp/>fatal<sp/>map<sp/>exceptions</highlight></codeline>
<codeline lineno="54" refid="struct_map___fatal___exception" refkind="compound"><highlight class="comment"></highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_map___fatal___exception" kindref="compound">Map_Fatal_Exception</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>runtime_error</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_map___fatal___exception" kindref="compound">Map_Fatal_Exception</ref>():runtime_error(</highlight><highlight class="stringliteral">&quot;Fatal<sp/>exception<sp/>thrown<sp/>at<sp/>run<sp/>time<sp/>in<sp/>Map:<sp/>&quot;</highlight><highlight class="normal">){}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_map___fatal___exception" kindref="compound">Map_Fatal_Exception</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>msg):runtime_error(msg.c_str()){}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/></highlight><highlight class="comment">/************************************************************</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CONFIGOPTION<sp/>CLASS</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>ConfigException<sp/>object</highlight></codeline>
<codeline lineno="68" refid="struct_config___exception" refkind="compound"><highlight class="comment"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_config___exception" kindref="compound">Config_Exception</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>runtime_error</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><ref refid="struct_config___exception" kindref="compound">Config_Exception</ref>():runtime_error(</highlight><highlight class="stringliteral">&quot;Exception<sp/>thrown<sp/>at<sp/>run<sp/>time<sp/>in<sp/>config:<sp/>&quot;</highlight><highlight class="normal">){}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><ref refid="struct_config___exception" kindref="compound">Config_Exception</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>msg):runtime_error(msg.c_str()){}</highlight></codeline>
<codeline lineno="72"><highlight class="normal">};</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::runtime_error;</highlight></codeline>
<codeline lineno="80" refid="struct_species_exception" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_species_exception" kindref="compound">SpeciesException</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>runtime_error</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="85" refid="struct_species_exception_1aad9febae65922d3a68a3d70ddc8b6a16" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_species_exception_1aad9febae65922d3a68a3d70ddc8b6a16" kindref="member">SpeciesException</ref>():runtime_error(</highlight><highlight class="stringliteral">&quot;Exception<sp/>thrown<sp/>at<sp/>run<sp/>time<sp/>in<sp/>SpeciationCounter:<sp/>&quot;</highlight><highlight class="normal">){}</highlight></codeline>
<codeline lineno="90" refid="struct_species_exception_1aee4c223dc1b702be3b937556f39b26a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_species_exception_1aee4c223dc1b702be3b937556f39b26a5" kindref="member">SpeciesException</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>msg):runtime_error(msg.c_str()){}</highlight></codeline>
<codeline lineno="91"><highlight class="normal">};</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="CustomExceptions.h"/>
  </compounddef>
</doxygen>
