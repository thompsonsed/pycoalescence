<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="applyspecmodule_8cpp" kind="file" language="C++">
    <compoundname>applyspecmodule.cpp</compoundname>
    <includes local="no">Python.h</includes>
    <includes local="no">vector</includes>
    <includes local="no">string</includes>
    <includes local="no">cstring</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">signal.h</includes>
    <includes refid="applyspecmodule_8h" local="yes">applyspecmodule.h</includes>
    <incdepgraph>
      <node id="1213">
        <label>iomanip</label>
      </node>
      <node id="1218">
        <label>assert.h</label>
      </node>
      <node id="1235">
        <label>Step.h</label>
        <link refid="_step_8h"/>
      </node>
      <node id="1214">
        <label>Matrix.h</label>
        <link refid="_matrix_8h"/>
        <childnode refid="1201" relation="include">
        </childnode>
        <childnode refid="1211" relation="include">
        </childnode>
        <childnode refid="1215" relation="include">
        </childnode>
        <childnode refid="1216" relation="include">
        </childnode>
        <childnode refid="1217" relation="include">
        </childnode>
        <childnode refid="1196" relation="include">
        </childnode>
        <childnode refid="1206" relation="include">
        </childnode>
        <childnode refid="1218" relation="include">
        </childnode>
        <childnode refid="1219" relation="include">
        </childnode>
        <childnode refid="1210" relation="include">
        </childnode>
      </node>
      <node id="1208">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="1219">
        <label>stdint.h</label>
      </node>
      <node id="1192">
        <label>applyspecmodule.cpp</label>
        <link refid="applyspecmodule.cpp"/>
        <childnode refid="1193" relation="include">
        </childnode>
        <childnode refid="1194" relation="include">
        </childnode>
        <childnode refid="1195" relation="include">
        </childnode>
        <childnode refid="1196" relation="include">
        </childnode>
        <childnode refid="1197" relation="include">
        </childnode>
        <childnode refid="1198" relation="include">
        </childnode>
        <childnode refid="1199" relation="include">
        </childnode>
      </node>
      <node id="1209">
        <label>CustomExceptions.h</label>
        <link refid="_custom_exceptions_8h"/>
        <childnode refid="1206" relation="include">
        </childnode>
      </node>
      <node id="1205">
        <label>cmath</label>
      </node>
      <node id="1228">
        <label>CoalescenceTree.h</label>
        <link refid="_tree_8h"/>
        <childnode refid="1201" relation="include">
        </childnode>
        <childnode refid="1216" relation="include">
        </childnode>
        <childnode refid="1194" relation="include">
        </childnode>
        <childnode refid="1211" relation="include">
        </childnode>
        <childnode refid="1195" relation="include">
        </childnode>
        <childnode refid="1196" relation="include">
        </childnode>
        <childnode refid="1203" relation="include">
        </childnode>
        <childnode refid="1213" relation="include">
        </childnode>
        <childnode refid="1205" relation="include">
        </childnode>
        <childnode refid="1227" relation="include">
        </childnode>
        <childnode refid="1226" relation="include">
        </childnode>
        <childnode refid="1204" relation="include">
        </childnode>
        <childnode refid="1197" relation="include">
        </childnode>
        <childnode refid="1224" relation="include">
        </childnode>
        <childnode refid="1206" relation="include">
        </childnode>
        <childnode refid="1207" relation="include">
        </childnode>
        <childnode refid="1214" relation="include">
        </childnode>
        <childnode refid="1229" relation="include">
        </childnode>
        <childnode refid="1230" relation="include">
        </childnode>
        <childnode refid="1212" relation="include">
        </childnode>
        <childnode refid="1231" relation="include">
        </childnode>
        <childnode refid="1232" relation="include">
        </childnode>
        <childnode refid="1202" relation="include">
        </childnode>
        <childnode refid="1222" relation="include">
        </childnode>
        <childnode refid="1225" relation="include">
        </childnode>
        <childnode refid="1210" relation="include">
        </childnode>
        <childnode refid="1233" relation="include">
        </childnode>
        <childnode refid="1235" relation="include">
        </childnode>
        <childnode refid="1236" relation="include">
        </childnode>
      </node>
      <node id="1206">
        <label>stdexcept</label>
      </node>
      <node id="1221">
        <label>SimParameters.h</label>
        <link refid="_sim_parameters_8h_source"/>
        <childnode refid="1195" relation="include">
        </childnode>
        <childnode refid="1194" relation="include">
        </childnode>
        <childnode refid="1222" relation="include">
        </childnode>
      </node>
      <node id="1195">
        <label>string</label>
      </node>
      <node id="1210">
        <label>Logging.h</label>
        <link refid="_logging_8h"/>
        <childnode refid="1195" relation="include">
        </childnode>
        <childnode refid="1211" relation="include">
        </childnode>
        <childnode refid="1201" relation="include">
        </childnode>
        <childnode refid="1206" relation="include">
        </childnode>
      </node>
      <node id="1229">
        <label>Fattaildeviate.h</label>
        <link refid="_fattaildeviate_8h"/>
        <childnode refid="1201" relation="include">
        </childnode>
        <childnode refid="1195" relation="include">
        </childnode>
        <childnode refid="1213" relation="include">
        </childnode>
        <childnode refid="1203" relation="include">
        </childnode>
        <childnode refid="1194" relation="include">
        </childnode>
        <childnode refid="1211" relation="include">
        </childnode>
        <childnode refid="1216" relation="include">
        </childnode>
        <childnode refid="1210" relation="include">
        </childnode>
      </node>
      <node id="1232">
        <label>Map.h</label>
        <link refid="_map_8h"/>
        <childnode refid="1195" relation="include">
        </childnode>
        <childnode refid="1201" relation="include">
        </childnode>
        <childnode refid="1194" relation="include">
        </childnode>
        <childnode refid="1211" relation="include">
        </childnode>
        <childnode refid="1216" relation="include">
        </childnode>
        <childnode refid="1203" relation="include">
        </childnode>
        <childnode refid="1206" relation="include">
        </childnode>
        <childnode refid="1222" relation="include">
        </childnode>
        <childnode refid="1207" relation="include">
        </childnode>
        <childnode refid="1214" relation="include">
        </childnode>
        <childnode refid="1210" relation="include">
        </childnode>
        <childnode refid="1220" relation="include">
        </childnode>
        <childnode refid="1221" relation="include">
        </childnode>
      </node>
      <node id="1204">
        <label>sqlite3.h</label>
      </node>
      <node id="1216">
        <label>fstream</label>
      </node>
      <node id="1225">
        <label>Setup.h</label>
        <link refid="_setup_8h"/>
        <childnode refid="1195" relation="include">
        </childnode>
        <childnode refid="1194" relation="include">
        </childnode>
        <childnode refid="1197" relation="include">
        </childnode>
        <childnode refid="1215" relation="include">
        </childnode>
        <childnode refid="1226" relation="include">
        </childnode>
        <childnode refid="1207" relation="include">
        </childnode>
        <childnode refid="1201" relation="include">
        </childnode>
        <childnode refid="1227" relation="include">
        </childnode>
        <childnode refid="1211" relation="include">
        </childnode>
        <childnode refid="1213" relation="include">
        </childnode>
        <childnode refid="1228" relation="include">
        </childnode>
      </node>
      <node id="1202">
        <label>Treelist.h</label>
        <link refid="_treelist_8h"/>
        <childnode refid="1203" relation="include">
        </childnode>
        <childnode refid="1204" relation="include">
        </childnode>
        <childnode refid="1196" relation="include">
        </childnode>
        <childnode refid="1205" relation="include">
        </childnode>
        <childnode refid="1206" relation="include">
        </childnode>
        <childnode refid="1195" relation="include">
        </childnode>
        <childnode refid="1207" relation="include">
        </childnode>
        <childnode refid="1208" relation="include">
        </childnode>
        <childnode refid="1209" relation="include">
        </childnode>
        <childnode refid="1210" relation="include">
        </childnode>
        <childnode refid="1212" relation="include">
        </childnode>
        <childnode refid="1214" relation="include">
        </childnode>
        <childnode refid="1220" relation="include">
        </childnode>
      </node>
      <node id="1230">
        <label>Datapoint.h</label>
        <link refid="_datapoint_8h"/>
        <childnode refid="1211" relation="include">
        </childnode>
        <childnode refid="1210" relation="include">
        </childnode>
      </node>
      <node id="1234">
        <label>string.h</label>
      </node>
      <node id="1226">
        <label>ctime</label>
      </node>
      <node id="1222">
        <label>ConfigFileParser.h</label>
        <link refid="_config_file_parser_8h_source"/>
        <childnode refid="1195" relation="include">
        </childnode>
        <childnode refid="1211" relation="include">
        </childnode>
        <childnode refid="1215" relation="include">
        </childnode>
        <childnode refid="1216" relation="include">
        </childnode>
        <childnode refid="1206" relation="include">
        </childnode>
        <childnode refid="1194" relation="include">
        </childnode>
        <childnode refid="1196" relation="include">
        </childnode>
        <childnode refid="1197" relation="include">
        </childnode>
        <childnode refid="1205" relation="include">
        </childnode>
        <childnode refid="1223" relation="include">
        </childnode>
        <childnode refid="1224" relation="include">
        </childnode>
        <childnode refid="1209" relation="include">
        </childnode>
        <childnode refid="1210" relation="include">
        </childnode>
      </node>
      <node id="1193">
        <label>Python.h</label>
      </node>
      <node id="1197">
        <label>unistd.h</label>
      </node>
      <node id="1194">
        <label>vector</label>
      </node>
      <node id="1198">
        <label>signal.h</label>
      </node>
      <node id="1207">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="1215">
        <label>sstream</label>
      </node>
      <node id="1233">
        <label>DispersalCoordinator.h</label>
        <link refid="_dispersal_coordinator_8h"/>
        <childnode refid="1234" relation="include">
        </childnode>
        <childnode refid="1201" relation="include">
        </childnode>
        <childnode refid="1211" relation="include">
        </childnode>
        <childnode refid="1216" relation="include">
        </childnode>
        <childnode refid="1206" relation="include">
        </childnode>
        <childnode refid="1205" relation="include">
        </childnode>
        <childnode refid="1209" relation="include">
        </childnode>
        <childnode refid="1229" relation="include">
        </childnode>
        <childnode refid="1214" relation="include">
        </childnode>
        <childnode refid="1235" relation="include">
        </childnode>
        <childnode refid="1232" relation="include">
        </childnode>
      </node>
      <node id="1227">
        <label>time.h</label>
      </node>
      <node id="1203">
        <label>math.h</label>
      </node>
      <node id="1217">
        <label>cstdlib</label>
      </node>
      <node id="1223">
        <label>cctype</label>
      </node>
      <node id="1211">
        <label>iostream</label>
      </node>
      <node id="1220">
        <label>Datamask.h</label>
        <link refid="_datamask_8h_source"/>
        <childnode refid="1195" relation="include">
        </childnode>
        <childnode refid="1214" relation="include">
        </childnode>
        <childnode refid="1221" relation="include">
        </childnode>
        <childnode refid="1210" relation="include">
        </childnode>
      </node>
      <node id="1236">
        <label>ReproductionMap.h</label>
        <link refid="_reproduction_map_8h"/>
        <childnode refid="1196" relation="include">
        </childnode>
        <childnode refid="1195" relation="include">
        </childnode>
        <childnode refid="1201" relation="include">
        </childnode>
        <childnode refid="1211" relation="include">
        </childnode>
        <childnode refid="1216" relation="include">
        </childnode>
        <childnode refid="1214" relation="include">
        </childnode>
        <childnode refid="1229" relation="include">
        </childnode>
      </node>
      <node id="1200">
        <label>ApplySpec.h</label>
        <link refid="_apply_spec_8h_source"/>
        <childnode refid="1201" relation="include">
        </childnode>
        <childnode refid="1202" relation="include">
        </childnode>
        <childnode refid="1222" relation="include">
        </childnode>
        <childnode refid="1225" relation="include">
        </childnode>
      </node>
      <node id="1231">
        <label>SpeciesList.h</label>
        <link refid="_species_list_8h"/>
        <childnode refid="1211" relation="include">
        </childnode>
        <childnode refid="1210" relation="include">
        </childnode>
      </node>
      <node id="1199">
        <label>applyspecmodule.h</label>
        <link refid="applyspecmodule_8h"/>
        <childnode refid="1193" relation="include">
        </childnode>
        <childnode refid="1194" relation="include">
        </childnode>
        <childnode refid="1195" relation="include">
        </childnode>
        <childnode refid="1200" relation="include">
        </childnode>
        <childnode refid="1210" relation="include">
        </childnode>
      </node>
      <node id="1212">
        <label>Treenode.h</label>
        <link refid="_treenode_8h"/>
        <childnode refid="1201" relation="include">
        </childnode>
        <childnode refid="1211" relation="include">
        </childnode>
        <childnode refid="1213" relation="include">
        </childnode>
        <childnode refid="1210" relation="include">
        </childnode>
      </node>
      <node id="1224">
        <label>algorithm</label>
      </node>
      <node id="1201">
        <label>stdio.h</label>
      </node>
      <node id="1196">
        <label>cstring</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="applyspecmodule_8cpp_1a9302692bd9a9cf56478cbae301f04d53" prot="public" static="no">
        <name>PYTHON_COMPILE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applyspecmodule.cpp" line="19" column="9" bodyfile="applyspecmodule.cpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="applyspecmodule_8cpp_1a3d94077229c2876134769daeeb28fa8a" prot="public" static="no">
        <name>INITERROR</name>
        <initializer>return</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applyspecmodule.cpp" line="133" column="10" bodyfile="applyspecmodule.cpp" bodystart="133" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="applyspecmodule_8cpp_1ae269920327ad06583db48e0bb122605e" prot="public" static="no" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* loggingmodule</definition>
        <argsstring></argsstring>
        <name>loggingmodule</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applyspecmodule.cpp" line="29" column="1" bodyfile="applyspecmodule.cpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="applyspecmodule_8cpp_1ae2ea2c066f7e65f192b08f50adb4ad1d" prot="public" static="no" mutable="no">
        <type>PyGILState_STATE</type>
        <definition>PyGILState_STATE gstate</definition>
        <argsstring></argsstring>
        <name>gstate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applyspecmodule.cpp" line="30" column="1" bodyfile="applyspecmodule.cpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="applyspecmodule_8cpp_1a304b2017ec52852821aced29cb2fe2ed" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool log_set</definition>
        <argsstring></argsstring>
        <name>log_set</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applyspecmodule.cpp" line="31" column="1" bodyfile="applyspecmodule.cpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="applyspecmodule_8cpp_1a08d9fbb3de64e2e37d485a6fb7c413c9" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool logger_set</definition>
        <argsstring></argsstring>
        <name>logger_set</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applyspecmodule.cpp" line="32" column="1" bodyfile="applyspecmodule.cpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="applyspecmodule_8cpp_1ac5c8cc1b55a6d2753d51817bd568aada" prot="public" static="no" mutable="no">
        <type>PyObject *</type>
        <definition>PyObject* logger</definition>
        <argsstring></argsstring>
        <name>logger</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applyspecmodule.cpp" line="33" column="1" bodyfile="applyspecmodule.cpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="applyspecmodule_8cpp_1aef7caf0405efcd622c2fd06114e92ceb" prot="public" static="yes" mutable="no">
        <type>PyMethodDef</type>
        <definition>PyMethodDef ApplySpecMethods[]</definition>
        <argsstring>[]</argsstring>
        <name>ApplySpecMethods</name>
        <initializer>= 
{
	{&quot;apply&quot;, apply, METH_VARARGS, &quot;Applies the new speciation rate(s) to the coalescence tree.&quot;},
	{&quot;set_log_function&quot;, set_log_function, METH_VARARGS, &quot;calls logging&quot;},
	{&quot;set_logger&quot;, set_logger, METH_VARARGS, &quot;Sets the logger to use&quot;},
	{NULL, NULL, 0 , NULL}
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applyspecmodule.cpp" line="88" column="1" bodyfile="applyspecmodule.cpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="applyspecmodule_8cpp_1aaba17b3450a31412ebff640c7a58b7d9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyObject *</type>
        <definition>static PyObject* apply</definition>
        <argsstring>(PyObject *self, PyObject *args)</argsstring>
        <name>apply</name>
        <param>
          <type>PyObject *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>PyObject *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applyspecmodule.cpp" line="35" column="1" bodyfile="applyspecmodule.cpp" bodystart="35" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="applyspecmodule_8cpp_1a1d49241e65981fb4ceca59a7e420decf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PyMODINIT_FUNC</type>
        <definition>PyMODINIT_FUNC initapplyspecmodule</definition>
        <argsstring>(void)</argsstring>
        <name>initapplyspecmodule</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="applyspecmodule.cpp" line="136" column="1" bodyfile="applyspecmodule.cpp" bodystart="136" bodyend="161"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Contains the module for python integration for additional applying speciation rates after a simulation is completed. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Samuel Thompson </para></simplesect>
<simplesect kind="date"><para>01/08/2017</para></simplesect>
<simplesect kind="version"><para>1.0 </para></simplesect>
<simplesect kind="copyright"><para><ulink url="https://opensource.org/licenses/BSD-3-Clause">BSD-3 Licence.</ulink> For use on the SQL database outputs of NECSim v3.1+. It requires command line parameters and generates a data object from them. Contact: <ulink url="mailto:samuel.thompson14@imperial.ac.uk">samuel.thompson14@imperial.ac.uk</ulink> or <ulink url="mailto:thompsonsed@gmail.com">thompsonsed@gmail.com</ulink> </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>NECSim<sp/>project<sp/>which<sp/>is<sp/>released<sp/>under<sp/>BSD-3<sp/>license.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>file<sp/>**LICENSE.txt**<sp/>or<sp/>visit<sp/>https://opensource.org/licenses/BSD-3-Clause)<sp/>for<sp/>full<sp/>license<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor">#ifndef<sp/>PYTHON_COMPILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PYTHON_COMPILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Python.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;signal.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="applyspecmodule_8h" kindref="compound">applyspecmodule.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal">PyObject<sp/>*<sp/>loggingmodule;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">PyGILState_STATE<sp/>gstate;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>log_set<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>logger_set<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal">PyObject<sp/>*<sp/>logger;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyObject<sp/>*<sp/>apply(PyObject<sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>PyObject<sp/>*<sp/>args)</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>database;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>record_spatial;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>sample_file;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>time_config_file;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>fragment_file;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*pList;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*pItem;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_ssize_t<sp/>n;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!PyArg_ParseTuple(args,<sp/></highlight><highlight class="stringliteral">&quot;sisssO!&quot;</highlight><highlight class="normal">,<sp/>&amp;database,<sp/>&amp;record_spatial,<sp/>&amp;sample_file,<sp/>&amp;time_config_file,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;fragment_file,<sp/>&amp;PyList_Type,<sp/>&amp;pList))</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,<sp/>&quot;Speciation<sp/>rates<sp/>must<sp/>be<sp/>a<sp/>list.&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>all<sp/>our<sp/>variables<sp/>to<sp/>the<sp/>relevant<sp/>form</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>database_str<sp/>=<sp/>database;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bSpatial<sp/>=<sp/>record_spatial;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>sample_file_str<sp/>=<sp/>sample_file;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>time_config_file_str<sp/>=<sp/>time_config_file;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>fragment_file_str<sp/>=<sp/>fragment_file;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>PyList_Size(pList);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;double&gt;<sp/>spec_rates;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;n;<sp/>i++)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pItem<sp/>=<sp/>PyList_GetItem(pList,<sp/>i);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!PyFloat_Check(pItem))</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(PyExc_TypeError,<sp/></highlight><highlight class="stringliteral">&quot;Speciation<sp/>rates<sp/>must<sp/>be<sp/>floats.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tmpspec<sp/>=<sp/>PyFloat_AS_DOUBLE(pItem);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spec_rates.push_back(tmpspec);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>run<sp/>the<sp/>actual<sp/>simulation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_apply_spec" kindref="compound">ApplySpec</ref><sp/>apply_spec;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>apply_spec.<ref refid="class_apply_spec_1a1a106fa5487b52076c30619048154c32" kindref="member">setArgs</ref>(database_str,<sp/>bSpatial,<sp/>sample_file_str,<sp/>time_config_file_str,<sp/>fragment_file_str,<sp/>spec_rates);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>apply_spec.<ref refid="class_apply_spec_1a1cb7d5f351ea9e85d34c2afe79f9faae" kindref="member">apply</ref>();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(exception<sp/>&amp;e)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyErr_SetString(ApplySpeciationError,<sp/>e.what());</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_RETURN_NONE;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PyMethodDef<sp/>ApplySpecMethods[]<sp/>=<sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;apply&quot;</highlight><highlight class="normal">,<sp/>apply,<sp/>METH_VARARGS,<sp/></highlight><highlight class="stringliteral">&quot;Applies<sp/>the<sp/>new<sp/>speciation<sp/>rate(s)<sp/>to<sp/>the<sp/>coalescence<sp/>tree.&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;set_log_function&quot;</highlight><highlight class="normal">,<sp/>set_log_function,<sp/>METH_VARARGS,<sp/></highlight><highlight class="stringliteral">&quot;calls<sp/>logging&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;set_logger&quot;</highlight><highlight class="normal">,<sp/>set_logger,<sp/>METH_VARARGS,<sp/></highlight><highlight class="stringliteral">&quot;Sets<sp/>the<sp/>logger<sp/>to<sp/>use&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>{NULL,<sp/>NULL,<sp/>0<sp/>,<sp/>NULL}</highlight></codeline>
<codeline lineno="94"><highlight class="normal">};</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Conditional<sp/>compilation<sp/>for<sp/>python<sp/>&gt;=<sp/>3.0<sp/>(changed<sp/>how<sp/>python<sp/>integration<sp/>worked)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>applyspec_traverse(PyObject<sp/>*m,<sp/>visitproc<sp/>visit,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg)</highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_VISIT(GETSTATE(m)-&gt;error);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>applyspec_clear(PyObject<sp/>*m)</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_CLEAR(GETSTATE(m)-&gt;error);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">PyModuleDef<sp/>moduledef<sp/>=</highlight></codeline>
<codeline lineno="115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>PyModuleDef_HEAD_INIT,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;applyspecmodule&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmodule__state" kindref="compound">module_state</ref>),</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>ApplySpecMethods,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>applyspec_traverse,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>applyspec_clear,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL</highlight></codeline>
<codeline lineno="125"><highlight class="normal">};</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INITERROR<sp/>return<sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal">PyMODINIT_FUNC</highlight></codeline>
<codeline lineno="131"><highlight class="normal">PyInit_applyspecmodule(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INITERROR<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal">PyMODINIT_FUNC</highlight></codeline>
<codeline lineno="136"><highlight class="normal">initapplyspecmodule(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>PyObject<sp/>*module;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>PY_MAJOR_VERSION&gt;=3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>module<sp/>=<sp/>PyModule_Create(&amp;moduledef);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>module<sp/>=<sp/>Py_InitModule(</highlight><highlight class="stringliteral">&quot;applyspecmodule&quot;</highlight><highlight class="normal">,<sp/>ApplySpecMethods);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(module<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INITERROR;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Threading<sp/>support</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!PyEval_ThreadsInitialized())</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PyEval_InitThreads();</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>ApplySpeciationError<sp/>=<sp/>PyErr_NewException((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)</highlight><highlight class="stringliteral">&quot;applyspec.Error&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_INCREF(ApplySpeciationError);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>PyModule_AddObject(module,<sp/></highlight><highlight class="stringliteral">&quot;ApplySpecError&quot;</highlight><highlight class="normal">,<sp/>ApplySpeciationError);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>PY_MAJOR_VERSION<sp/>&gt;=<sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>module;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight></codeline>
<codeline lineno="161"><highlight class="preprocessor">}</highlight></codeline>
    </programlisting>
    <location file="applyspecmodule.cpp"/>
  </compounddef>
</doxygen>
